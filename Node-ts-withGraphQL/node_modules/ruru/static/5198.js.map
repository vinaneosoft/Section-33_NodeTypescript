{"version":3,"file":"5198.js","mappings":"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","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/extpath.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languageSelector.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], Boolean(supportsDelayedInstantiation));\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageFeaturesService = createDecorator('ILanguageFeaturesService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { toDisposable } from '../../base/common/lifecycle.js';\nimport { shouldSynchronizeModel } from './model.js';\nimport { score } from './languageSelector.js';\nfunction isExclusive(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return selector.every(isExclusive);\n    }\n    else {\n        return !!selector.exclusive; // TODO: microsoft/TypeScript#42768\n    }\n}\nclass MatchCandidate {\n    constructor(uri, languageId, notebookUri, notebookType, recursive) {\n        this.uri = uri;\n        this.languageId = languageId;\n        this.notebookUri = notebookUri;\n        this.notebookType = notebookType;\n        this.recursive = recursive;\n    }\n    equals(other) {\n        return this.notebookType === other.notebookType\n            && this.languageId === other.languageId\n            && this.uri.toString() === other.uri.toString()\n            && this.notebookUri?.toString() === other.notebookUri?.toString()\n            && this.recursive === other.recursive;\n    }\n}\nexport class LanguageFeatureRegistry {\n    constructor(_notebookInfoResolver) {\n        this._notebookInfoResolver = _notebookInfoResolver;\n        this._clock = 0;\n        this._entries = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    register(selector, provider) {\n        let entry = {\n            selector,\n            provider,\n            _score: -1,\n            _time: this._clock++\n        };\n        this._entries.push(entry);\n        this._lastCandidate = undefined;\n        this._onDidChange.fire(this._entries.length);\n        return toDisposable(() => {\n            if (entry) {\n                const idx = this._entries.indexOf(entry);\n                if (idx >= 0) {\n                    this._entries.splice(idx, 1);\n                    this._lastCandidate = undefined;\n                    this._onDidChange.fire(this._entries.length);\n                    entry = undefined;\n                }\n            }\n        });\n    }\n    has(model) {\n        return this.all(model).length > 0;\n    }\n    all(model) {\n        if (!model) {\n            return [];\n        }\n        this._updateScores(model, false);\n        const result = [];\n        // from registry\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                result.push(entry.provider);\n            }\n        }\n        return result;\n    }\n    ordered(model, recursive = false) {\n        const result = [];\n        this._orderedForEach(model, recursive, entry => result.push(entry.provider));\n        return result;\n    }\n    orderedGroups(model) {\n        const result = [];\n        let lastBucket;\n        let lastBucketScore;\n        this._orderedForEach(model, false, entry => {\n            if (lastBucket && lastBucketScore === entry._score) {\n                lastBucket.push(entry.provider);\n            }\n            else {\n                lastBucketScore = entry._score;\n                lastBucket = [entry.provider];\n                result.push(lastBucket);\n            }\n        });\n        return result;\n    }\n    _orderedForEach(model, recursive, callback) {\n        this._updateScores(model, recursive);\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                callback(entry);\n            }\n        }\n    }\n    _updateScores(model, recursive) {\n        const notebookInfo = this._notebookInfoResolver?.(model.uri);\n        // use the uri (scheme, pattern) of the notebook info iff we have one\n        // otherwise it's the model's/document's uri\n        const candidate = notebookInfo\n            ? new MatchCandidate(model.uri, model.getLanguageId(), notebookInfo.uri, notebookInfo.type, recursive)\n            : new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive);\n        if (this._lastCandidate?.equals(candidate)) {\n            // nothing has changed\n            return;\n        }\n        this._lastCandidate = candidate;\n        for (const entry of this._entries) {\n            entry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n            if (isExclusive(entry.selector) && entry._score > 0) {\n                if (recursive) {\n                    entry._score = 0;\n                }\n                else {\n                    // support for one exclusive selector that overwrites\n                    // any other selector\n                    for (const entry of this._entries) {\n                        entry._score = 0;\n                    }\n                    entry._score = 1000;\n                    break;\n                }\n            }\n        }\n        // needs sorting\n        this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n    }\n    static _compareByScoreAndTime(a, b) {\n        if (a._score < b._score) {\n            return 1;\n        }\n        else if (a._score > b._score) {\n            return -1;\n        }\n        // De-prioritize built-in providers\n        if (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n            return 1;\n        }\n        else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n            return -1;\n        }\n        if (a._time < b._time) {\n            return 1;\n        }\n        else if (a._time > b._time) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isBuiltinSelector(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    if (Array.isArray(selector)) {\n        return selector.some(isBuiltinSelector);\n    }\n    return Boolean(selector.isBuiltin);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nexport class LanguageFeaturesService {\n    constructor() {\n        this.referenceProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.renameProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.newSymbolNamesProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeActionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.definitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.typeDefinitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.declarationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.implementationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSymbolProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlayHintsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.colorProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeLensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.onTypeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.signatureHelpProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.hoverProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.multiDocumentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.selectionRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.foldingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineCompletionsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.completionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkedEditingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentDropEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentPasteEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n    }\n    _score(uri) {\n        return this._notebookTypeResolver?.(uri);\n    }\n}\nregisterSingleton(ILanguageFeaturesService, LanguageFeaturesService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { match as matchGlobPattern } from '../../base/common/glob.js';\nimport { normalize } from '../../base/common/path.js';\nexport function score(selector, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType) {\n    if (Array.isArray(selector)) {\n        // array -> take max individual value\n        let ret = 0;\n        for (const filter of selector) {\n            const value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType);\n            if (value === 10) {\n                return value; // already at the highest\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n    }\n    else if (typeof selector === 'string') {\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n        // short-hand notion, desugars to\n        // 'fooLang' -> { language: 'fooLang'}\n        // '*' -> { language: '*' }\n        if (selector === '*') {\n            return 5;\n        }\n        else if (selector === candidateLanguage) {\n            return 10;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (selector) {\n        // filter -> select accordingly, use defaults for scheme\n        const { language, pattern, scheme, hasAccessToAllModels, notebookType } = selector; // TODO: microsoft/TypeScript#42768\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n        // selector targets a notebook -> use the notebook uri instead\n        // of the \"normal\" document uri.\n        if (notebookType && candidateNotebookUri) {\n            candidateUri = candidateNotebookUri;\n        }\n        let ret = 0;\n        if (scheme) {\n            if (scheme === candidateUri.scheme) {\n                ret = 10;\n            }\n            else if (scheme === '*') {\n                ret = 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (language) {\n            if (language === candidateLanguage) {\n                ret = 10;\n            }\n            else if (language === '*') {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (notebookType) {\n            if (notebookType === candidateNotebookType) {\n                ret = 10;\n            }\n            else if (notebookType === '*' && candidateNotebookType !== undefined) {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (pattern) {\n            let normalizedPattern;\n            if (typeof pattern === 'string') {\n                normalizedPattern = pattern;\n            }\n            else {\n                // Since this pattern has a `base` property, we need\n                // to normalize this path first before passing it on\n                // because we will compare it against `Uri.fsPath`\n                // which uses platform specific separators.\n                // Refs: https://github.com/microsoft/vscode/issues/99938\n                normalizedPattern = { ...pattern, base: normalize(pattern.base) };\n            }\n            if (normalizedPattern === candidateUri.fsPath || matchGlobPattern(normalizedPattern, candidateUri.fsPath)) {\n                ret = 10;\n            }\n            else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n    else {\n        return 0;\n    }\n}\n"],"names":["_registry","registerSingleton","id","ctorOrDescriptor","supportsDelayedInstantiation","Boolean","push","getSingletonServiceDescriptors","ILanguageFeaturesService","_util","serviceIds","Map","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","has","get","target","key","index","arguments","length","Error","storeServiceDependency","toString","set","isExclusive","selector","Array","isArray","every","exclusive","MatchCandidate","constructor","uri","languageId","notebookUri","notebookType","recursive","this","equals","other","LanguageFeatureRegistry","_notebookInfoResolver","_clock","_entries","_onDidChange","onDidChange","event","register","provider","entry","_score","_time","_lastCandidate","undefined","fire","idx","indexOf","splice","model","all","_updateScores","result","ordered","_orderedForEach","orderedGroups","lastBucket","lastBucketScore","callback","notebookInfo","candidate","getLanguageId","type","sort","_compareByScoreAndTime","a","b","isBuiltinSelector","some","isBuiltin","LanguageFeaturesService","referenceProvider","bind","renameProvider","newSymbolNamesProvider","codeActionProvider","definitionProvider","typeDefinitionProvider","declarationProvider","implementationProvider","documentSymbolProvider","inlayHintsProvider","colorProvider","codeLensProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","onTypeFormattingEditProvider","signatureHelpProvider","hoverProvider","documentHighlightProvider","multiDocumentHighlightProvider","selectionRangeProvider","foldingRangeProvider","linkProvider","inlineCompletionsProvider","inlineEditProvider","completionProvider","linkedEditingRangeProvider","documentRangeSemanticTokensProvider","documentSemanticTokensProvider","documentDropEditProvider","documentPasteEditProvider","_notebookTypeResolver","SyncDescriptor","staticArguments","isPathSeparator","code","toSlashes","osPath","replace","sep","toPosixPath","test","getRoot","path","len","firstLetter","charCodeAt","pos","start","slice","isWindowsDriveLetter","isEqualOrParent","base","parentCandidate","ignoreCase","separator","sepOffset","charAt","char0","hasDriveLetter","isWindowsOS","score","candidateUri","candidateLanguage","candidateIsSynchronized","candidateNotebookUri","candidateNotebookType","ret","filter","value","language","pattern","scheme","hasAccessToAllModels","Math","max","normalizedPattern","fsPath"],"sourceRoot":""}
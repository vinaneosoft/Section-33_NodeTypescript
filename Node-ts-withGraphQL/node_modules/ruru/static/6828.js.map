{"version":3,"file":"6828.js","mappings":"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","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/model.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/collections.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/severity.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IModelService = createDecorator('modelService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        const result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection(setA, setB) {\n    const result = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n    constructor(modelService, _markerService) {\n        super();\n        this._markerService = _markerService;\n        this._onDidChangeMarker = this._register(new Emitter());\n        this._markerDecorations = new ResourceMap();\n        modelService.getModels().forEach(model => this._onModelAdded(model));\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n    }\n    dispose() {\n        super.dispose();\n        this._markerDecorations.forEach(value => value.dispose());\n        this._markerDecorations.clear();\n    }\n    getMarker(uri, decoration) {\n        const markerDecorations = this._markerDecorations.get(uri);\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n    }\n    _handleMarkerChange(changedResources) {\n        changedResources.forEach((resource) => {\n            const markerDecorations = this._markerDecorations.get(resource);\n            if (markerDecorations) {\n                this._updateDecorations(markerDecorations);\n            }\n        });\n    }\n    _onModelAdded(model) {\n        const markerDecorations = new MarkerDecorations(model);\n        this._markerDecorations.set(model.uri, markerDecorations);\n        this._updateDecorations(markerDecorations);\n    }\n    _onModelRemoved(model) {\n        const markerDecorations = this._markerDecorations.get(model.uri);\n        if (markerDecorations) {\n            markerDecorations.dispose();\n            this._markerDecorations.delete(model.uri);\n        }\n        // clean up markers for internal, transient models\n        if (model.uri.scheme === Schemas.inMemory\n            || model.uri.scheme === Schemas.internal\n            || model.uri.scheme === Schemas.vscode) {\n            this._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n        }\n    }\n    _updateDecorations(markerDecorations) {\n        // Limit to the first 500 errors/warnings\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n        if (markerDecorations.update(markers)) {\n            this._onDidChangeMarker.fire(markerDecorations.model);\n        }\n    }\n};\nMarkerDecorationsService = __decorate([\n    __param(0, IModelService),\n    __param(1, IMarkerService)\n], MarkerDecorationsService);\nexport { MarkerDecorationsService };\nclass MarkerDecorations extends Disposable {\n    constructor(model) {\n        super();\n        this.model = model;\n        this._map = new BidirectionalMap();\n        this._register(toDisposable(() => {\n            this.model.deltaDecorations([...this._map.values()], []);\n            this._map.clear();\n        }));\n    }\n    update(markers) {\n        // We use the fact that marker instances are not recreated when different owners\n        // update. So we can compare references to find out what changed since the last update.\n        const { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n        if (added.length === 0 && removed.length === 0) {\n            return false;\n        }\n        const oldIds = removed.map(marker => this._map.get(marker));\n        const newDecorations = added.map(marker => {\n            return {\n                range: this._createDecorationRange(this.model, marker),\n                options: this._createDecorationOption(marker)\n            };\n        });\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\n        for (const removedMarker of removed) {\n            this._map.delete(removedMarker);\n        }\n        for (let index = 0; index < ids.length; index++) {\n            this._map.set(added[index], ids[index]);\n        }\n        return true;\n    }\n    getMarker(decoration) {\n        return this._map.getKey(decoration.id);\n    }\n    _createDecorationRange(model, rawMarker) {\n        let ret = Range.lift(rawMarker);\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* MarkerTag.Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* MarkerTag.Deprecated */)) {\n            // * never render hints on multiple lines\n            // * make enough space for three dots\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n        }\n        ret = model.validateRange(ret);\n        if (ret.isEmpty()) {\n            const maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n                model.getLineMaxColumn(ret.startLineNumber);\n            if (maxColumn === 1 || ret.endColumn >= maxColumn) {\n                // empty line or behind eol\n                // keep the range as is, it will be rendered 1ch wide\n                return ret;\n            }\n            const word = model.getWordAtPosition(ret.getStartPosition());\n            if (word) {\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n            }\n        }\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n            const minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n            if (minColumn < ret.endColumn) {\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n                rawMarker.startColumn = minColumn;\n            }\n        }\n        return ret;\n    }\n    _createDecorationOption(marker) {\n        let className;\n        let color = undefined;\n        let zIndex;\n        let inlineClassName = undefined;\n        let minimap;\n        switch (marker.severity) {\n            case MarkerSeverity.Hint:\n                if (this._hasMarkerTag(marker, 2 /* MarkerTag.Deprecated */)) {\n                    className = undefined;\n                }\n                else if (this._hasMarkerTag(marker, 1 /* MarkerTag.Unnecessary */)) {\n                    className = \"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */;\n                }\n                else {\n                    className = \"squiggly-hint\" /* ClassName.EditorHintDecoration */;\n                }\n                zIndex = 0;\n                break;\n            case MarkerSeverity.Info:\n                className = \"squiggly-info\" /* ClassName.EditorInfoDecoration */;\n                color = themeColorFromId(overviewRulerInfo);\n                zIndex = 10;\n                minimap = {\n                    color: themeColorFromId(minimapInfo),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Warning:\n                className = \"squiggly-warning\" /* ClassName.EditorWarningDecoration */;\n                color = themeColorFromId(overviewRulerWarning);\n                zIndex = 20;\n                minimap = {\n                    color: themeColorFromId(minimapWarning),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Error:\n            default:\n                className = \"squiggly-error\" /* ClassName.EditorErrorDecoration */;\n                color = themeColorFromId(overviewRulerError);\n                zIndex = 30;\n                minimap = {\n                    color: themeColorFromId(minimapError),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n        }\n        if (marker.tags) {\n            if (marker.tags.indexOf(1 /* MarkerTag.Unnecessary */) !== -1) {\n                inlineClassName = \"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */;\n            }\n            if (marker.tags.indexOf(2 /* MarkerTag.Deprecated */) !== -1) {\n                inlineClassName = \"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */;\n            }\n        }\n        return {\n            description: 'marker-decoration',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n            className,\n            showIfCollapsed: true,\n            overviewRuler: {\n                color,\n                position: OverviewRulerLane.Right\n            },\n            minimap,\n            zIndex,\n            inlineClassName,\n        };\n    }\n    _hasMarkerTag(marker, tag) {\n        if (marker.tags) {\n            return marker.tags.indexOf(tag) >= 0;\n        }\n        return false;\n    }\n}\n"],"names":["Extensions","JSONContribution","jsonContributionRegistry","constructor","this","_onDidChangeSchema","schemasById","registerSchema","uri","unresolvedSchemaContent","id","length","charAt","substring","fire","notifySchemaChanged","add","IModelService","MarkerSeverity","IMarkerData","compare","a","b","_displayStrings","Object","create","Error","Warning","Info","toString","fromSeverity","severity","Ignore","Hint","toSeverity","emptyString","makeKeyOptionalMessage","markerData","useMessage","result","source","push","replace","code","value","undefined","message","startLineNumber","startColumn","endLineNumber","endColumn","join","makeKey","IMarkerService","Registry","data","Map","has","set","as","get","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","target","key","index","arguments","storeServiceDependency","diffSets","before","after","removed","added","element","intersection","setA","setB","Set","elem","Severity","_error","_warning","_info","fromValue","__param","paramIndex","decorator","MarkerDecorationsService","modelService","_markerService","super","_onDidChangeMarker","_register","_markerDecorations","getModels","forEach","model","_onModelAdded","onModelAdded","onModelRemoved","_onModelRemoved","onMarkerChanged","_handleMarkerChange","dispose","clear","getMarker","decoration","markerDecorations","changedResources","resource","_updateDecorations","MarkerDecorations","delete","scheme","inMemory","internal","vscode","read","map","marker","owner","remove","markers","take","update","decorators","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__decorate","_map","deltaDecorations","values","keys","oldIds","newDecorations","range","_createDecorationRange","options","_createDecorationOption","ids","removedMarker","getKey","rawMarker","ret","lift","_hasMarkerTag","setEndPosition","validateRange","isEmpty","maxColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn","word","getWordAtPosition","getStartPosition","Number","MAX_VALUE","minColumn","getLineFirstNonWhitespaceColumn","className","color","zIndex","inlineClassName","minimap","position","tags","indexOf","description","stickiness","showIfCollapsed","overviewRuler","Right","tag"],"sourceRoot":""}
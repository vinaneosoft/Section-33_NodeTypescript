{"version":3,"file":"graphqlWorker.js","mappings":"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CACrB,OAED,wBAAyB,CACxB,OAED,uBAAwB,CACvB,OAED,0BAA2B,CAC1B,OAED,mBAAoB,CACnB,MACA,KACA,MAED,sBAAuB,CACtB,MACA,KACA,MAED,4BAA6B,CAC5B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,qBAAsB,CACrB,MACA,MAED,wBAAyB,CACxB,MACA,MAED,4BAA6B,CAC5B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,oBAAqB,CACpB,MACA,KACA,KACA,MAED,uBAAwB,CACvB,MACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,KACA,KACA,MAED,6BAA8B,CAC7B,MACA,KACA,KACA,MAED,sBAAuB,CACtB,MACA,KACA,KACA,MAED,yBAA0B,CACzB,MACA,KACA,KACA,MAED,sBAAuB,CACtB,MACA,MAED,yBAA0B,CACzB,MACA,MAED,6BAA8B,CAC7B,MACA,KACA,MAED,gCAAiC,CAChC,MACA,KACA,MAED,UAAW,CACV,MACA,MAED,aAAc,CACb,MACA,MAED,iBAAkB,CACjB,MACA,KACA,KACA,KACA,MAED,oBAAqB,CACpB,MACA,KACA,KACA,KACA,MAED,oBAAqB,CACpB,MACA,MAED,uBAAwB,CACvB,MACA,MAED,sBAAuB,CACtB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,kCAAmC,CAClC,KACA,KACA,KACA,MAED,qCAAsC,CACrC,KACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,MAED,6BAA8B,CAC7B,MACA,MAED,iCAAkC,CACjC,MACA,KACA,KACA,MAED,oCAAqC,CACpC,MACA,KACA,KACA,MAED,qCAAsC,CACrC,OAED,wCAAyC,CACxC,OAED,yCAA0C,CACzC,MACA,MAED,4CAA6C,CAC5C,MACA,MAED,8BAA+B,CAC9B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,4BAA6B,CAC5B,MACA,MAED,+BAAgC,CAC/B,MACA,MAED,iBAAkB,CACjB,MACA,MAED,oBAAqB,CACpB,MACA,MAED,wBAAyB,CACxB,MA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","sources":["webpack://ruru/webpack/runtime/create fake namespace object","webpack://ruru/webpack/runtime/import chunk loading","webpack://ruru/../../node_modules/picomatch-browser/index.js","webpack://ruru/../../node_modules/picomatch-browser/lib/parse.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/process.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/nls.messages.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/nls.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/model/textModelSearch.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://ruru/../../node_modules/picomatch-browser/lib/picomatch.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://ruru/../../node_modules/picomatch-browser/lib/scan.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://ruru/../../node_modules/picomatch-browser/lib/constants.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/map.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/wordCharacterClassifier.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/async.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/objects.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/arraysFind.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/codiconsLibrary.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/codicons.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/legacyLinesDiffComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputers.js","webpack://ruru/../../node_modules/picomatch-browser/lib/utils.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/rangeMapping.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languages.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/textLength.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/model/prefixSumComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/network.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/lazy.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/codiconsUtil.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/wordHelper.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/ lazy ^.*$ namespace object","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/path.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/symbols.js","webpack://ruru/../../node_modules/nullthrows/nullthrows.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/color.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/offsetRange.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/textEdit.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/assert.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/lineRange.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/model.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/cache.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/worker/ lazy ^.*$ namespace object","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://ruru/webpack/bootstrap","webpack://ruru/webpack/runtime/compat get default export","webpack://ruru/webpack/runtime/define property getters","webpack://ruru/webpack/runtime/ensure chunk","webpack://ruru/webpack/runtime/get javascript chunk filename","webpack://ruru/webpack/runtime/get mini-css chunk filename","webpack://ruru/webpack/runtime/hasOwnProperty shorthand","webpack://ruru/webpack/runtime/make namespace object","webpack://ruru/webpack/runtime/runtimeId","webpack://ruru/webpack/runtime/publicPath","webpack://ruru/../../node_modules/graphql/jsutils/inspect.mjs","webpack://ruru/../../node_modules/graphql/jsutils/devAssert.mjs","webpack://ruru/../../node_modules/graphql/language/ast.mjs","webpack://ruru/../../node_modules/graphql/language/kinds.mjs","webpack://ruru/../../node_modules/graphql/language/visitor.mjs","webpack://ruru/../../node_modules/graphql/jsutils/isObjectLike.mjs","webpack://ruru/../../node_modules/graphql/jsutils/invariant.mjs","webpack://ruru/../../node_modules/graphql/language/location.mjs","webpack://ruru/../../node_modules/graphql/language/printLocation.mjs","webpack://ruru/../../node_modules/graphql/error/GraphQLError.mjs","webpack://ruru/../../node_modules/graphql/error/syntaxError.mjs","webpack://ruru/../../node_modules/graphql/language/tokenKind.mjs","webpack://ruru/../../node_modules/graphql/jsutils/instanceOf.mjs","webpack://ruru/../../node_modules/graphql/language/source.mjs","webpack://ruru/../../node_modules/graphql/language/directiveLocation.mjs","webpack://ruru/../../node_modules/graphql/language/characterClasses.mjs","webpack://ruru/../../node_modules/graphql/language/blockString.mjs","webpack://ruru/../../node_modules/graphql/language/lexer.mjs","webpack://ruru/../../node_modules/graphql/language/parser.mjs","webpack://ruru/../../node_modules/graphql/jsutils/keyMap.mjs","webpack://ruru/../../node_modules/graphql/jsutils/mapValue.mjs","webpack://ruru/../../node_modules/graphql/jsutils/toObjMap.mjs","webpack://ruru/../../node_modules/graphql/jsutils/keyValMap.mjs","webpack://ruru/../../node_modules/graphql/jsutils/didYouMean.mjs","webpack://ruru/../../node_modules/graphql/jsutils/identityFunc.mjs","webpack://ruru/../../node_modules/graphql/jsutils/naturalCompare.mjs","webpack://ruru/../../node_modules/graphql/jsutils/suggestionList.mjs","webpack://ruru/../../node_modules/graphql/language/printString.mjs","webpack://ruru/../../node_modules/graphql/language/printer.mjs","webpack://ruru/../../node_modules/graphql/utilities/valueFromASTUntyped.mjs","webpack://ruru/../../node_modules/graphql/type/assertName.mjs","webpack://ruru/../../node_modules/graphql/type/definition.mjs","webpack://ruru/../../node_modules/graphql/type/scalars.mjs","webpack://ruru/../../node_modules/graphql/utilities/astFromValue.mjs","webpack://ruru/../../node_modules/graphql/jsutils/isIterableObject.mjs","webpack://ruru/../../node_modules/graphql/type/introspection.mjs","webpack://ruru/../../node_modules/graphql/utilities/typeComparators.mjs","webpack://ruru/../../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/CharacterStream.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/RuleHelpers.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/Rules.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/onlineParser.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/api.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/getTypeInfo.js","webpack://ruru/../../node_modules/graphql-language-service/esm/parser/types.js","webpack://ruru/../../node_modules/graphql-language-service/esm/types.js","webpack://ruru/../../node_modules/graphql-language-service/esm/interface/autocompleteUtils.js","webpack://ruru/../../node_modules/graphql-language-service/esm/interface/getAutocompleteSuggestions.js","webpack://ruru/../../node_modules/graphql-language-service/esm/utils/getVariablesJSONSchema.js","webpack://ruru/../../node_modules/graphql-language-service/esm/utils/Range.js","webpack://ruru/../../node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs","webpack://ruru/../../node_modules/graphql/language/predicates.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","webpack://ruru/../../node_modules/graphql/type/directives.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs","webpack://ruru/../../node_modules/graphql/jsutils/groupBy.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","webpack://ruru/../../node_modules/graphql/utilities/typeFromAST.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","webpack://ruru/../../node_modules/graphql/utilities/valueFromAST.mjs","webpack://ruru/../../node_modules/graphql/execution/values.mjs","webpack://ruru/../../node_modules/graphql/execution/collectFields.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","webpack://ruru/../../node_modules/graphql/validation/specifiedRules.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/DeferStreamDirectiveOnRootFieldRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/StreamDirectiveOnListFieldRule.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs","webpack://ruru/../../node_modules/graphql/type/schema.mjs","webpack://ruru/../../node_modules/graphql/type/validate.mjs","webpack://ruru/../../node_modules/graphql/utilities/TypeInfo.mjs","webpack://ruru/../../node_modules/graphql/validation/ValidationContext.mjs","webpack://ruru/../../node_modules/graphql/validation/validate.mjs","webpack://ruru/../../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","webpack://ruru/../../node_modules/graphql-language-service/esm/interface/getDiagnostics.js","webpack://ruru/../../node_modules/graphql-language-service/esm/interface/getHoverInformation.js","webpack://ruru/../../node_modules/graphql/utilities/buildClientSchema.mjs","webpack://ruru/../../node_modules/graphql/utilities/extendSchema.mjs","webpack://ruru/../../node_modules/graphql/utilities/buildASTSchema.mjs","webpack://ruru/../../node_modules/monaco-graphql/esm/schemaLoader.js","webpack://ruru/../../node_modules/monaco-graphql/esm/LanguageService.js","webpack://ruru/../../node_modules/graphql-language-service/esm/utils/validateWithCustomRules.js","webpack://ruru/../../node_modules/graphql-language-service/esm/utils/getOperationFacts.js","webpack://ruru/../../node_modules/graphql-language-service/esm/utils/collectVariables.js","webpack://ruru/../../node_modules/monaco-graphql/esm/utils.js","webpack://ruru/../../node_modules/monaco-graphql/esm/GraphQLWorker.js","webpack://ruru/../../node_modules/monaco-graphql/esm/graphql.worker.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t8178: 0,\n\t9116: 0\n};\n\nvar installChunk = (data) => {\n\tvar {__webpack_ids__, __webpack_modules__, __webpack_runtime__} = data;\n\t// add \"modules\" to the modules object,\n\t// then flag all \"ids\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in __webpack_modules__) {\n\t\tif(__webpack_require__.o(__webpack_modules__, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = __webpack_modules__[moduleId];\n\t\t}\n\t}\n\tif(__webpack_runtime__) __webpack_runtime__(__webpack_require__);\n\tfor(;i < __webpack_ids__.length; i++) {\n\t\tchunkId = __webpack_ids__[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[__webpack_ids__[i]] = 0;\n\t}\n\n}\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// import() chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[1]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, (e) => {\n\t\t\t\t\t\tif(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t});\n\t\t\t\t\tvar promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])\n\t\t\t\t\tpromises.push(installedChunkData[1] = promise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no external install chunk\n\n// no on chunks loaded\n// no HMR\n\n// no HMR manifest","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(opts.windows);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = (opts) => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index];\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren' && !EXTGLOB_CHARS[tok.value]) {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.prev.type === 'bos' && eos()) {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance() || '';\n      } else {\n        value += advance() || '';\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(opts.windows);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = (opts) => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nimport { EditorWorkerHost } from './common/services/editorWorkerHost.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (workerServer) => new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), foreignModule));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nexport function forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nexport function forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter((e) => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        // see https://bugs.webkit.org/show_bug.cgi?id=261140\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    static { this.empty = new CallbackIterable(_callback => { }); }\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    /**\n     * Returns a permutation that sorts the given array according to the given compare function.\n     */\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return new Permutation(sortIndices);\n    }\n    /**\n     * Returns a new array with the elements of the given array re-arranged according to this permutation.\n     */\n    apply(arr) {\n        return arr.map((_, index) => arr[this._indexMap[index]]);\n    }\n    /**\n     * Returns a new permutation that undoes the re-arrangement of this permutation.\n    */\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return new Permutation(inverseIndexMap);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*\n * This module exists so that the AMD build of the monaco editor can replace this with an async loader plugin.\n * If you add new functions to this module make sure that they are also provided in the AMD build of the monaco editor.\n */\nexport function getNLSMessages() {\n    return globalThis._VSCODE_NLS_MESSAGES;\n}\nexport function getNLSLanguage() {\n    return globalThis._VSCODE_NLS_LANGUAGE;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// eslint-disable-next-line local/code-import-patterns\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n// eslint-disable-next-line local/code-import-patterns\nexport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\n/**\n * @skipMangle\n */\nexport function localize(data /* | number when built */, message /* | null when built */, ...args) {\n    if (typeof data === 'number') {\n        return _format(lookupMessage(data, message), args);\n    }\n    return _format(message, args);\n}\n/**\n * Only used when built: Looks up the message in the global NLS table.\n * This table is being made available as a global through bootstrapping\n * depending on the target context.\n */\nfunction lookupMessage(index, fallback) {\n    const message = getNLSMessages()?.[index];\n    if (typeof message !== 'string') {\n        if (typeof fallback === 'string') {\n            return fallback;\n        }\n        throw new Error(`!!! NLS MISSING: ${index} !!!`);\n    }\n    return message;\n}\n/**\n * @skipMangle\n */\nexport function localize2(data /* | number when built */, originalMessage, ...args) {\n    let message;\n    if (typeof data === 'number') {\n        message = lookupMessage(data, originalMessage);\n    }\n    else {\n        message = originalMessage;\n    }\n    const value = _format(message, args);\n    return {\n        value,\n        original: originalMessage === message ? value : _format(originalMessage, args)\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        // The word does not include the problematic character, ignore the word\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* SimpleHighlightReason.None */) {\n                        if (highlightReason === 3 /* SimpleHighlightReason.Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* SimpleHighlightReason.Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* SimpleHighlightReason.NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* SimpleHighlightReason.None */:\n                return null;\n            case 2 /* SimpleHighlightReason.Invisible */:\n                return { kind: 1 /* UnicodeHighlighterReasonKind.Invisible */ };\n            case 3 /* SimpleHighlightReason.Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* UnicodeHighlighterReasonKind.Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* SimpleHighlightReason.NonBasicASCII */:\n                return { kind: 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* SimpleHighlightReason.NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* SimpleHighlightReason.Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* SimpleHighlightReason.Ambiguous */;\n            }\n        }\n        return 0 /* SimpleHighlightReason.None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { FindMatch, SearchData } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nexport class SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        // Try to create a RegExp out of the params\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = strings.createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            // casing might make a difference\n            canUseSimpleSearch = this.matchCase;\n        }\n        return new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null, canUseSimpleSearch ? this.searchString : null);\n    }\n}\nexport function isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 10 /* CharCode.LineFeed */) {\n            return true;\n        }\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110 /* CharCode.n */ || nextChCode === 114 /* CharCode.r */ || nextChCode === 87 /* CharCode.W */) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return new FindMatch(range, null);\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return new FindMatch(range, matches);\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 /* CharCode.LineFeed */) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            // no line feeds\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            // before first line feed\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    // bingo!\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nexport class TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Multiline search always executes on the lines concatenated with \\n.\n     * We must therefore compensate for the count of \\n in case the model is CRLF\n     */\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(searchRange, 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        // Early case for a search range that starts & stops on the same line number\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        // Collect results from first line\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        // Collect results from middle lines\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        // Collect results from last line\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = new Position(searchStart.lineNumber, 1);\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            // Try again from the top\n            return this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        // Set regex to search from column\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            // Try again with all content\n            return this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        // Match starts at start of string\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 /* WordCharacterClass.Regular */) {\n        // The character before the match is a word separator\n        return true;\n    }\n    if (charBefore === 13 /* CharCode.CarriageReturn */ || charBefore === 10 /* CharCode.LineFeed */) {\n        // The character before the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The first character inside the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        // Match ends at end of string\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 /* WordCharacterClass.Regular */) {\n        // The character after the match is a word separator\n        return true;\n    }\n    if (charAfter === 13 /* CharCode.CarriageReturn */ || charAfter === 10 /* CharCode.LineFeed */) {\n        // The character after the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The last character in the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nexport class Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                // Reached the end of the line\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    // the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n                    // we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n                    if (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                // Exit early if the regex matches the same range twice\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* SelectionDirection.LTR */;\n        }\n        return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","'use strict';\n\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = opts.windows;\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(utils.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.compileRe = (parsed, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return parsed.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${parsed.output})${append}`;\n  if (parsed && parsed.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = parsed;\n  }\n\n  return regex;\n};\n\npicomatch.makeRe = (input, options, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  const opts = options || {};\n  let parsed = { negated: false, fastpaths: true };\n  let prefix = '';\n  let output;\n\n  if (input.startsWith('./')) {\n    input = input.slice(2);\n    prefix = parsed.prefix = './';\n  }\n\n  if (opts.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    output = parse.fastpaths(input, options);\n  }\n\n  if (output === undefined) {\n    parsed = parse(input, options);\n    parsed.prefix = prefix + (parsed.prefix || '');\n  } else {\n    parsed.output = output;\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* Boolean.False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* Boolean.True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* Boolean.True */);\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), and `negated` (true if the path starts with `!`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n          break;\n        }\n      }\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a listener is GC'ed without having been disposed. This is a LEAK.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableListenerGCedWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onDidAddListener: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onDidAddListener = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd?.();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n     * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n     * result of merging events and to try prevent race conditions that could arise when using related deferred and\n     * non-deferred events.\n     *\n     * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n     * (eg. latency of keypress to text rendered).\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    /**\n     * Given an event, returns another event which only fires once.\n     *\n     * @param event The event source for the new event.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event, returns another event which only fires once, and only when the condition is met.\n     *\n     * @param event The event source for the new event.\n     */\n    function onceIf(event, condition) {\n        return Event.once(Event.filter(event, condition));\n    }\n    Event.onceIf = onceIf;\n    /**\n     * Maps an event of one type into an event of another type using a mapping function, similar to how\n     * `Array.prototype.map` works.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param map The mapping function.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * Wraps an event in another event that performs some function on the event object before firing.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param each The function to perform on the event object.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    /**\n     * Adds the IDisposable to the store if it's set, and returns it. Useful to\n     * Event function implementation.\n     */\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    /**\n     * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n     * event objects from different sources do not fire the same event object.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param equals The equality condition.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     *\n     * @example\n     * ```\n     * // Fire only one time when a single window is opened or focused\n     * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n     * ```\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @example\n     * ```\n     * const event = new EventEmitter<number | undefined>().event;\n     * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n     * ```\n     *\n     * @param event The event source for the new event.\n     * @param isT A function that determines what event is of the first type.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * Buffers an event until it has a listener attached.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n     * `setTimeout` when the first event listener is added.\n     * @param _buffer Internal: A source event array used for tests.\n     *\n     * @example\n     * ```\n     * // Start accumulating events, when the first listener is attached, flush\n     * // the event after a timeout such that multiple listeners attached before\n     * // the timeout would receive the event\n     * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n     * ```\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n     *\n     * @example\n     * ```\n     * // Normal\n     * const onEnterPressNormal = Event.filter(\n     *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n     *   e.keyCode === KeyCode.Enter\n     * ).event;\n     *\n     * // Using chain\n     * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n     *   .map(e => new StandardKeyboardEvent(e))\n     *   .filter(e => e.keyCode === KeyCode.Enter)\n     * );\n     * ```\n     */\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(new ChainableSynthesis());\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    /**\n     * Creates an {@link Event} from a node event emitter.\n     */\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    /**\n     * Creates an {@link Event} from a DOM event emitter.\n     */\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    /**\n     * Creates a promise out of an event, using the {@link Event.once} helper.\n     */\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    /**\n     * Creates an event out of a promise that fires once when the promise is\n     * resolved with the result of the promise or `undefined`.\n     */\n    function fromPromise(promise) {\n        const result = new Emitter();\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    /**\n     * A convenience function for forwarding an event to another emitter which\n     * improves readability.\n     *\n     * This is similar to {@link Relay} but allows instantiating and forwarding\n     * on a single line and also allows for multiple source events.\n     * @param from The event to forward.\n     * @param to The emitter to forward the event to.\n     * @example\n     * Event.forward(event, emitter);\n     * // equivalent to\n     * event(e => emitter.fire(e));\n     * // equivalent to\n     * event(emitter.fire, emitter);\n     */\n    function forward(from, to) {\n        return from(e => to.fire(e));\n    }\n    Event.forward = forward;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                    // Communicate to the observable that we received its current value and would like to be notified about future changes.\n                    this._observable.reportChanges();\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            if (!store) {\n                _addLeakageTraceLogic(options);\n            }\n            this.emitter = new Emitter(options);\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n            // assert(_observable === this.obs);\n        }\n        handleChange(_observable, _change) {\n            // assert(_observable === this.obs);\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    /**\n     * Creates an event emitter that is fired when the observable changes.\n     * Each listeners subscribes to the emitter.\n     */\n    function fromObservable(obs, store) {\n        const observer = new EmitterObserver(obs, store);\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    /**\n     * Each listener is attached to the observable directly.\n     */\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                    // noop\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nexport class EventProfiling {\n    static { this.all = new Set(); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch();\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = (LeakageMonitor._idPool++).toString(16).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = new ListenerLeakError(message, topStack);\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = new Error();\n        return new Stacktrace(err.stack ?? '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\n// error that is logged when going over the configured listener threshold\nexport class ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\n// SEVERE error that is logged when having gone way over the configured listener\n// threshold so that the emitter refuses to accept more listeners\nexport class ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nlet _listenerFinalizers;\nif (_enableListenerGCedWarning) {\n    const leaks = [];\n    setInterval(() => {\n        if (leaks.length === 0) {\n            return;\n        }\n        console.warn('[LEAKING LISTENERS] GC\\'ed these listeners that were NOT yet disposed:');\n        console.warn(leaks.join('\\n'));\n        leaks.length = 0;\n    }, 3000);\n    _listenerFinalizers = new FinalizationRegistry(heldValue => {\n        if (typeof heldValue === 'string') {\n            leaks.push(heldValue);\n        }\n    });\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? new LeakageMonitor(options?.onListenerError ?? onUnexpectedError, this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold) :\n            undefined;\n        this._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = this._listeners;\n                    queueMicrotask(() => {\n                        forEachListener(listeners, l => l.stack?.print());\n                    });\n                }\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = new ListenerRefusalError(`${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`, tuple[0]);\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                // todo: should we warn if a listener is added to a disposed emitter? This happens often\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = new UniqueContainer(callback);\n            let removeMonitor;\n            let stack;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                // check and record this emitter for potential leakage\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (_enableDisposeWithListenerWarning) {\n                contained.stack = stack ?? Stacktrace.create();\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= new EventDeliveryQueuePrivate();\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                _listenerFinalizers?.unregister(result);\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            if (_listenerFinalizers) {\n                const stack = new Error().stack.split('\\n').slice(2, 3).join('\\n').trim();\n                const match = /(file:|vscode-file:\\/\\/vscode-app)?(\\/[^:]*:\\d+:\\d+)/.exec(stack);\n                _listenerFinalizers.register(result, match?.[2] ?? stack, result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return; // expected if a listener gets disposed\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        // size > 1 which requires that listeners be a list:\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    /** Delivers items in the queue. Assumes the queue is ready to go. */\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            // important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) {\n            // no-op\n        }\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nexport const createEventDeliveryQueue = () => new EventDeliveryQueuePrivate();\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        /**\n         * Index in current's listener list.\n         */\n        this.i = -1;\n        /**\n         * The last index in the listener's list to deliver.\n         */\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end; // force any current emission loop to stop, mainly for during dispose\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                // Non-reduce scenario\n                if (!reduce) {\n                    // Buffering case\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        // Not buffering case\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                // Reduce scenario\n                const reduceData = data;\n                // Not buffering case\n                if (!reduceData) {\n                    // TODO: Is there a way to cache this reduce call for all listeners?\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                // Buffering case\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    // Include a single buffered function that will reduce all events when we're done buffering events\n                    data.buffers.push(() => {\n                        // cache the reduced result so that the value can be shared across all listeners\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: new Array() };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nclass MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* Constants.MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* LocalConstants.MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","'use strict';\n\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\nconst SEP = '/';\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR,\n  SEP\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`,\n  SEP: '\\\\'\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nexport class ResourceMap {\n    static { this.defaultToKey = (resource) => resource.toString(); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = new Map(arg.map);\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = new Map();\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = new Map();\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexport class LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap {\n    constructor(entries) {\n        this._m1 = new Map();\n        this._m2 = new Map();\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    keys() {\n        return this._m1.keys();\n    }\n    values() {\n        return this._m1.values();\n    }\n}\nexport class SetMap {\n    constructor() {\n        this.map = new Map();\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = new Set();\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return new Set();\n        }\n        return values;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\nexport class WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators, intlSegmenterLocales) {\n        super(0 /* WordCharacterClass.Regular */);\n        this._segmenter = null;\n        this._cachedLine = null;\n        this._cachedSegments = [];\n        this.intlSegmenterLocales = intlSegmenterLocales;\n        if (this.intlSegmenterLocales.length > 0) {\n            this._segmenter = new Intl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n        }\n        else {\n            this._segmenter = null;\n        }\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordCharacterClass.WordSeparator */);\n        }\n        this.set(32 /* CharCode.Space */, 1 /* WordCharacterClass.Whitespace */);\n        this.set(9 /* CharCode.Tab */, 1 /* WordCharacterClass.Whitespace */);\n    }\n    findPrevIntlWordBeforeOrAtOffset(line, offset) {\n        let candidate = null;\n        for (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n            if (segment.index > offset) {\n                break;\n            }\n            candidate = segment;\n        }\n        return candidate;\n    }\n    findNextIntlWordAtOrAfterOffset(lineContent, offset) {\n        for (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n            if (segment.index < offset) {\n                continue;\n            }\n            return segment;\n        }\n        return null;\n    }\n    _getIntlSegmenterWordsOnLine(line) {\n        if (!this._segmenter) {\n            return [];\n        }\n        // Check if the line has changed from the previous call\n        if (this._cachedLine === line) {\n            return this._cachedSegments;\n        }\n        // Update the cache with the new line\n        this._cachedLine = line;\n        this._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n        return this._cachedSegments;\n    }\n    _filterWordSegments(segments) {\n        const result = [];\n        for (const segment of segments) {\n            if (this._isWordLike(segment)) {\n                result.push(segment);\n            }\n        }\n        return result;\n    }\n    _isWordLike(segment) {\n        if (segment.isWordLike) {\n            return true;\n        }\n        return false;\n    }\n}\nconst wordClassifierCache = new LRUCache(10);\nexport function getMapForWordSeparators(wordSeparators, intlSegmenterLocales) {\n    const key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n    let result = wordClassifierCache.get(key);\n    if (!result) {\n        result = new WordCharacterClassifier(wordSeparators, intlSegmenterLocales);\n        wordClassifierCache.set(key, result);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(new Error('Throttler is disposed'));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(new CancellationError());\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.deleteAndLeak(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n        }\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle;\nexport let _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(Object.freeze(deadline));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nexport class AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === 1 /* DeferredOutcome.Rejected */;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    constructor() {\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 /* DeferredOutcome.Resolved */, value };\n            resolve();\n        });\n    }\n    error(err) {\n        return new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 /* DeferredOutcome.Rejected */, value: err };\n            resolve();\n        });\n    }\n    cancel() {\n        return this.error(new CancellationError());\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined; // do not rethrow so that other promises can settle\n        })));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result; // cast is needed and protected by the `throw` above\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        });\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n        });\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            }));\n        });\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = 0 /* AsyncIterableSourceState.Initial */;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 /* AsyncIterableSourceState.DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* AsyncIterableSourceState.DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        });\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        });\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 2 /* AsyncIterableSourceState.DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    // canceled in the meantime\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    });\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexport function cancelOnDispose(store) {\n    const source = new CancellationTokenSource();\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\n","import { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nexport function trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nexport function markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    /**\n     * Deletes the value from the store, but does not dispose it.\n     */\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (this._toDispose.has(o)) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    /**\n     * A disposable that does nothing when it is disposed of.\n     *\n     * TODO: This should not be a static property.\n     */\n    static { this.None = Object.freeze({ dispose() { } }); }\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = new Array(width * height);\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nexport function isSpace(charCode) {\n    return charCode === 32 /* CharCode.Space */ || charCode === 9 /* CharCode.Tab */;\n}\nexport class LineRangeFragment {\n    static { this.chrKeys = new Map(); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { SequenceDiff, InfiniteTimeout, DiffAlgorithmResult } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\n/**\n * A O(MN) diffing algorithm that supports a score function.\n * The algorithm can be improved by processing the 2d array diagonally.\n*/\nexport class DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        /**\n         * lcsLengths.get(i, j): Length of the longest common subsequence of sequence1.substring(0, i + 1) and sequence2.substring(0, j + 1).\n         */\n        const lcsLengths = new Array2D(sequence1.length, sequence2.length);\n        const directions = new Array2D(sequence1.length, sequence2.length);\n        const lengths = new Array2D(sequence1.length, sequence2.length);\n        // ==== Initializing lcsLengths ====\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        // Prefer consecutive diagonals\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    // Prefer diagonals\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        // ==== Backtracking ====\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(s1 + 1, lastAligningPosS1), new OffsetRange(s2 + 1, lastAligningPosS2)));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\n/**\n * An O(ND) diff algorithm that has a quadratic space worst-case complexity.\n*/\nexport class MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        // These are common special cases.\n        // The early return improves performance dramatically.\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1; // Text on the x axis\n        const seqY = seq2; // Text on the y axis\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        // V[k]: X value of longest d-line that ends in diagonal k.\n        // d-line: path from (0,0) to (x,y) that uses exactly d non-diagonals.\n        // diagonal k: Set of points (x,y) with x-y = k.\n        // k=1 -> (1,0),(2,1)\n        const V = new FastInt32Array();\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = new FastArrayNegativeIndices();\n        paths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            // The paper has `for (k = -d; k <= d; k += 2)`, but we can ignore diagonals that cannot influence the result.\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                let step = 0;\n                // We can use the X values of (d-1)-lines to compute X value of the longest d-lines.\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1); // We take a vertical non-diagonal (add a symbol in seqX)\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1; // We take a horizontal non-diagonal (+1 x) (delete a symbol in seqX)\n                step++;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                step++;\n                if (x > seqX.length || y > seqY.length) {\n                    // This diagonal is irrelevant for the result.\n                    // TODO: Don't pay the cost for this in the next iteration.\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(endX, lastAligningPosS1), new OffsetRange(endY, lastAligningPosS2)));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = new Int32Array(10);\n        this.negativeArr = new Int32Array(10);\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = new Int32Array(arr.length * 2);\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = new Int32Array(arr.length * 2);\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nexport class LinesSliceCharSequence {\n    constructor(lines, range, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.range = range;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstElementOffsetByLineIdx = [];\n        this.lineStartOffsets = [];\n        this.trimmedWsLengthsByLineIdx = [];\n        this.firstElementOffsetByLineIdx.push(0);\n        for (let lineNumber = this.range.startLineNumber; lineNumber <= this.range.endLineNumber; lineNumber++) {\n            let line = lines[lineNumber - 1];\n            let lineStartOffset = 0;\n            if (lineNumber === this.range.startLineNumber && this.range.startColumn > 1) {\n                lineStartOffset = this.range.startColumn - 1;\n                line = line.substring(lineStartOffset);\n            }\n            this.lineStartOffsets.push(lineStartOffset);\n            let trimmedWsLength = 0;\n            if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                trimmedWsLength = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.trimmedWsLengthsByLineIdx.push(trimmedWsLength);\n            const lineLength = lineNumber === this.range.endLineNumber ? Math.min(this.range.endColumn - 1 - lineStartOffset - trimmedWsLength, line.length) : line.length;\n            for (let i = 0; i < lineLength; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (lineNumber < this.range.endLineNumber) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstElementOffsetByLineIdx.push(this.elements.length);\n            }\n        }\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(new OffsetRange(0, this.length));\n    }\n    getText(range) {\n        return this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e)).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        //   a   b   c   ,           d   e   f\n        // 11  0   0   12  15  6   13  0   0   11\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 7 /* CharBoundaryCategory.LineBreakCR */ && nextCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // don't break between \\r and \\n\n            return 0;\n        }\n        if (prevCategory === 8 /* CharBoundaryCategory.LineBreakLF */) {\n            // prefer the linebreak before the change\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0 /* CharBoundaryCategory.WordLower */ && nextCategory === 1 /* CharBoundaryCategory.WordUpper */) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset, preference = 'right') {\n        // find smallest i, so that lineBreakOffsets[i] <= offset using binary search\n        const i = findLastIdxMonotonous(this.firstElementOffsetByLineIdx, (value) => value <= offset);\n        const lineOffset = offset - this.firstElementOffsetByLineIdx[i];\n        return new Position(this.range.startLineNumber + i, 1 + this.lineStartOffsets[i] + lineOffset + ((lineOffset === 0 && preference === 'left') ? 0 : this.trimmedWsLengthsByLineIdx[i]));\n    }\n    translateRange(range) {\n        const pos1 = this.translateOffset(range.start, 'right');\n        const pos2 = this.translateOffset(range.endExclusive, 'left');\n        if (pos2.isBefore(pos1)) {\n            return Range.fromPositions(pos2, pos2);\n        }\n        return Range.fromPositions(pos1, pos2);\n    }\n    /**\n     * Finds the word that contains the character at the given offset\n     */\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        // find start\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        // find end\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return new OffsetRange(start, end);\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstElementOffsetByLineIdx, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstElementOffsetByLineIdx, x => range.endExclusive <= x) ?? this.elements.length;\n        return new OffsetRange(start, end);\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */\n        || charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */\n        || charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */;\n}\nconst score = {\n    [0 /* CharBoundaryCategory.WordLower */]: 0,\n    [1 /* CharBoundaryCategory.WordUpper */]: 0,\n    [2 /* CharBoundaryCategory.WordNumber */]: 0,\n    [3 /* CharBoundaryCategory.End */]: 10,\n    [4 /* CharBoundaryCategory.Other */]: 2,\n    [5 /* CharBoundaryCategory.Separator */]: 30,\n    [6 /* CharBoundaryCategory.Space */]: 3,\n    [7 /* CharBoundaryCategory.LineBreakCR */]: 10,\n    [8 /* CharBoundaryCategory.LineBreakLF */]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 /* CharCode.LineFeed */) {\n        return 8 /* CharBoundaryCategory.LineBreakLF */;\n    }\n    else if (charCode === 13 /* CharCode.CarriageReturn */) {\n        return 7 /* CharBoundaryCategory.LineBreakCR */;\n    }\n    else if (isSpace(charCode)) {\n        return 6 /* CharBoundaryCategory.Space */;\n    }\n    else if (charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */) {\n        return 0 /* CharBoundaryCategory.WordLower */;\n    }\n    else if (charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */) {\n        return 1 /* CharBoundaryCategory.WordUpper */;\n    }\n    else if (charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */) {\n        return 2 /* CharBoundaryCategory.WordNumber */;\n    }\n    else if (charCode === -1) {\n        return 3 /* CharBoundaryCategory.End */;\n    }\n    else if (charCode === 44 /* CharCode.Comma */ || charCode === 59 /* CharCode.Semicolon */) {\n        return 5 /* CharBoundaryCategory.Separator */;\n    }\n    else {\n        return 4 /* CharBoundaryCategory.Other */;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { MonotonousArray, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineRangeFragment, isSpace } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { Range } from '../../core/range.js';\nexport function computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !excludedChanges.has(c));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    // Ignore too short moves\n    moves = moves.filter(current => {\n        const lines = current.original.toOffsetRange().slice(originalLines).map(l => l.trim());\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => new LineRangeFragment(d.original, originalLines, d));\n    const insertions = new Set(changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => new LineRangeFragment(d.modified, modifiedLines, d)));\n    const excludedChanges = new Set();\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(new LineRangeMapping(deletion.range, best.range));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = new SetMap();\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: new LineRange(i, i + 3) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = new LineRange(i, i + 3);\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    // does this match extend some last match?\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = new LineRange(lastMapping.originalLineRange.startLineNumber, range.endLineNumberExclusive);\n                        lastMapping.modifiedLineRange = new LineRange(lastMapping.modifiedLineRange.startLineNumber, currentModifiedRange.endLineNumberExclusive);\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = new LineRangeSet();\n    const originalSet = new LineRangeSet();\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(new LineRangeMapping(originalLineRange, modifiedLineRange));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = new MonotonousArray(changes);\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber));\n            modifiedSet.addRange(new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(new LineRange(move.original.endLineNumberExclusive, move.original.endLineNumberExclusive + extendToBottom));\n            modifiedSet.addRange(new LineRange(move.modified.endLineNumberExclusive, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = new LineRangeMapping(new LineRange(move.original.startLineNumber - extendToTop, move.original.endLineNumberExclusive + extendToBottom), new LineRange(move.modified.startLineNumber - extendToTop, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    const result = myersDiffingAlgorithm.compute(new LinesSliceCharSequence([line1], new Range(1, 1, 1, line1.length), false), new LinesSliceCharSequence([line2], new Range(1, 1, 1, line2.length), false), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = new MonotonousArray(changes);\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || new LineRangeMapping(new LineRange(1, 1), new LineRange(1, 1));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n        i++;\n    }\n    return i;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { DateTimeout, InfiniteTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping } from '../rangeMapping.js';\nexport class DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n        this.myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return new LinesDiff([], [], false);\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return new LinesDiff([\n                new DetailedLineRangeMapping(new LineRange(1, originalLines.length + 1), new LineRange(1, modifiedLines.length + 1), [\n                    new RangeMapping(new Range(1, 1, originalLines.length, originalLines[originalLines.length - 1].length + 1), new Range(1, 1, modifiedLines.length, modifiedLines[modifiedLines.length - 1].length + 1))\n                ])\n            ], [], false);\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : new DateTimeout(options.maxComputationTimeMs);\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = new Map();\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = originalLines.map((l) => getOrCreateHash(l.trim()));\n        const modifiedLinesHashes = modifiedLines.map((l) => getOrCreateHash(l.trim()));\n        const sequence1 = new LineSequence(originalLinesHashes, originalLines);\n        const sequence2 = new LineSequence(modifiedLinesHashes, modifiedLines);\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                // Use the improved algorithm for small files\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    // This is because of whitespace changes, diff these lines\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(new OffsetRange(seq1Offset, seq1Offset + 1), new OffsetRange(seq2Offset, seq2Offset + 1)), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        // Make sure all ranges are valid\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return new LinesDiff(changes, moves, hitTimeout);\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange()), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return new MovedText(m, mappings);\n        });\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const lineRangeMapping = toLineRangeMapping(diff);\n        const rangeMapping = lineRangeMapping.toRangeMapping2(originalLines, modifiedLines);\n        const slice1 = new LinesSliceCharSequence(originalLines, rangeMapping.originalRange, considerWhitespaceChanges);\n        const slice2 = new LinesSliceCharSequence(modifiedLines, rangeMapping.modifiedRange, considerWhitespaceChanges);\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        const check = false;\n        let diffs = diffResult.diffs;\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        if (check) {\n            SequenceDiff.assertSorted(diffs);\n        }\n        const result = diffs.map((d) => new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)));\n        if (check) {\n            RangeMapping.assertSorted(result);\n        }\n        // Assert: result applied on original should be the same as diff applied to original\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nexport function lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines)), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(new DetailedLineRangeMapping(first.original.join(last.original), first.modified.join(last.modified), g.map(a => a.innerChanges[0])));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nexport function getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    // rangeMapping describes the edit that replaces `rangeMapping.originalRange` with `newText := getText(modifiedLines, rangeMapping.modifiedRange)`.\n    // original: ]xxx \\n <- this line is not modified\n    // modified: ]xx  \\n\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        // We can only do this if the range is not empty yet\n        lineEndDelta = -1;\n    }\n    // original: xxx[ \\n <- this line is not modified\n    // modified: xxx[ \\n\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        // We can only do this if the range is not empty yet\n        lineStartDelta = 1;\n    }\n    const originalLineRange = new LineRange(rangeMapping.originalRange.startLineNumber + lineStartDelta, rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta);\n    const modifiedLineRange = new LineRange(rangeMapping.modifiedRange.startLineNumber + lineStartDelta, rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta);\n    return new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]);\n}\nfunction toLineRangeMapping(sequenceDiff) {\n    return new LineRangeMapping(new LineRange(sequenceDiff.seq1Range.start + 1, sequenceDiff.seq1Range.endExclusive + 1), new LineRange(sequenceDiff.seq2Range.start + 1, sequenceDiff.seq2Range.endExclusive + 1));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nexport function findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    /**\n     * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n     * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n     */\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nexport function findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { register } from './codiconsUtil.js';\n// This file is automatically generated by (microsoft/vscode-codicons)/scripts/export-to-ts.js\n// Please don't edit it, as your changes will be overwritten.\n// Instead, add mappings to codiconsDerived in codicons.ts.\nexport const codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n    attach: register('attach', 0xec34),\n};\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\nexport class KeyMod {\n    static { this.CtrlCmd = 2048 /* ConstKeyMod.CtrlCmd */; }\n    static { this.Shift = 1024 /* ConstKeyMod.Shift */; }\n    static { this.Alt = 512 /* ConstKeyMod.Alt */; }\n    static { this.WinCtrl = 256 /* ConstKeyMod.WinCtrl */; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined, // undefined override expected here\n        languages: undefined, // undefined override expected here\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* State.Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* State.Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* State.Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* State.Start */, 104 /* CharCode.h */, 2 /* State.H */],\n            [1 /* State.Start */, 72 /* CharCode.H */, 2 /* State.H */],\n            [1 /* State.Start */, 102 /* CharCode.f */, 6 /* State.F */],\n            [1 /* State.Start */, 70 /* CharCode.F */, 6 /* State.F */],\n            [2 /* State.H */, 116 /* CharCode.t */, 3 /* State.HT */],\n            [2 /* State.H */, 84 /* CharCode.T */, 3 /* State.HT */],\n            [3 /* State.HT */, 116 /* CharCode.t */, 4 /* State.HTT */],\n            [3 /* State.HT */, 84 /* CharCode.T */, 4 /* State.HTT */],\n            [4 /* State.HTT */, 112 /* CharCode.p */, 5 /* State.HTTP */],\n            [4 /* State.HTT */, 80 /* CharCode.P */, 5 /* State.HTTP */],\n            [5 /* State.HTTP */, 115 /* CharCode.s */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 83 /* CharCode.S */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [6 /* State.F */, 105 /* CharCode.i */, 7 /* State.FI */],\n            [6 /* State.F */, 73 /* CharCode.I */, 7 /* State.FI */],\n            [7 /* State.FI */, 108 /* CharCode.l */, 8 /* State.FIL */],\n            [7 /* State.FI */, 76 /* CharCode.L */, 8 /* State.FIL */],\n            [8 /* State.FIL */, 101 /* CharCode.e */, 9 /* State.BeforeColon */],\n            [8 /* State.FIL */, 69 /* CharCode.E */, 9 /* State.BeforeColon */],\n            [9 /* State.BeforeColon */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [10 /* State.AfterColon */, 47 /* CharCode.Slash */, 11 /* State.AlmostThere */],\n            [11 /* State.AlmostThere */, 47 /* CharCode.Slash */, 12 /* State.End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* CharacterClass.None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* CharacterClass.ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CharacterClass.CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CharacterClass.CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* CharCode.OpenParen */ && lastCharCodeInLink === 41 /* CharCode.CloseParen */)\n                || (charCodeBeforeLink === 91 /* CharCode.OpenSquareBracket */ && lastCharCodeInLink === 93 /* CharCode.CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* CharCode.OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CharCode.CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* State.Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* State.Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* CharCode.OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 41 /* CharCode.CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 91 /* CharCode.OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 93 /* CharCode.CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 123 /* CharCode.OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 125 /* CharCode.CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        // The following three rules make it that ' or \" or ` are allowed inside links\n                        // only if the link is wrapped by some other quote character\n                        case 39 /* CharCode.SingleQuote */:\n                        case 34 /* CharCode.DoubleQuote */:\n                        case 96 /* CharCode.BackTick */:\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            else if (linkBeginChCode === 39 /* CharCode.SingleQuote */ || linkBeginChCode === 34 /* CharCode.DoubleQuote */ || linkBeginChCode === 96 /* CharCode.BackTick */) {\n                                chClass = 0 /* CharacterClass.None */;\n                            }\n                            else {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            break;\n                        case 42 /* CharCode.Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* CharCode.Asterisk */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 124 /* CharCode.Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* CharCode.Pipe */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 32 /* CharCode.Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* State.End */) {\n                    let chClass;\n                    if (chCode === 91 /* CharCode.OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* CharacterClass.None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* State.Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* State.Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* State.Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* State.Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = new BasicInplaceReplace(); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { RangeMapping, DetailedLineRangeMapping } from './rangeMapping.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nexport class LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        });\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                // Insertion\n                originalRange = new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1);\n            }\n            else {\n                originalRange = new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1);\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                // Deletion\n                modifiedRange = new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1);\n            }\n            else {\n                modifiedRange = new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1);\n            }\n            let change = new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => new RangeMapping(new Range(c.originalStartLineNumber, c.originalStartColumn, c.originalEndLineNumber, c.originalEndColumn), new Range(c.modifiedStartLineNumber, c.modifiedStartColumn, c.modifiedEndLineNumber, c.modifiedEndColumn))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    // join touching diffs. Probably moving diffs up/down in the algorithm causes touching diffs.\n                    change = new DetailedLineRangeMapping(lastChange.original.join(change.original), lastChange.modified.join(change.modified), lastChange.innerChanges && change.innerChanges ?\n                        lastChange.innerChanges.concat(change.innerChanges) : undefined);\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return new LinesDiff(changes, [], result.quitEarly);\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                // Add \\n if trim whitespace is not ignored\n                charCodes[len] = 10 /* CharCode.LineFeed */;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + this._charCodes.map((s, idx) => (s === 10 /* CharCode.LineFeed */ ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw new Error(`Illegal index`);\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            // the start line number of the element after the last element\n            // is the end line number of the last element\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            // the end line number of the element before the first element\n            // is the start line number of the first element\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            // the start column of the element after the last element\n            // is the end column of the last element\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            // the end column of the element before the first element\n            // is the start column of the first element\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Range } from '../core/range.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { EditorWorkerHost } from './editorWorkerHost.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\nimport { WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\n// ESM-comment-begin\n// const isESM = false;\n// ESM-comment-end\n// ESM-uncomment-begin\nconst isESM = true;\n/**\n * @internal\n */\nexport class BaseEditorSimpleWorker {\n    constructor() {\n        this._workerTextModelSyncServer = new WorkerTextModelSyncServer();\n    }\n    dispose() {\n    }\n    _getModel(uri) {\n        return this._workerTextModelSyncServer.getModel(uri);\n    }\n    _getModels() {\n        return this._workerTextModelSyncServer.getModels();\n    }\n    $acceptNewModel(data) {\n        this._workerTextModelSyncServer.$acceptNewModel(data);\n    }\n    $acceptModelChanged(uri, e) {\n        this._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n    }\n    $acceptRemovedModel(uri) {\n        this._workerTextModelSyncServer.$acceptRemovedModel(uri);\n    }\n    async $computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async $findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    async $computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return changes.map(m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                    m.originalRange.startLineNumber,\n                    m.originalRange.startColumn,\n                    m.originalRange.endLineNumber,\n                    m.originalRange.endColumn,\n                    m.modifiedRange.startLineNumber,\n                    m.modifiedRange.startColumn,\n                    m.modifiedRange.endLineNumber,\n                    m.modifiedRange.endColumn,\n                ])]));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ])),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    static { this._diffLimit = 100000; }\n    async $computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        // merge adjacent edits\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    async $computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    // --- BEGIN default document colors -----------------------------------------------------------\n    async $computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    static { this._suggestionsLimit = 10000; }\n    async $textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = new StopWatch();\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const seen = new Set();\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    async $computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    //#endregion\n    async $navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker extends BaseEditorSimpleWorker {\n    constructor(_host, _foreignModuleFactory) {\n        super();\n        this._host = _host;\n        this._foreignModuleFactory = _foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    async $ping() {\n        return 'pong';\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    $loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.$fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return new Promise((resolve, reject) => {\n            const onModuleCallback = (foreignModule) => {\n                this._foreignModule = foreignModule.create(ctx, createData);\n                resolve(getAllMethodNames(this._foreignModule));\n            };\n            if (!isESM) {\n                require([`${moduleId}`], onModuleCallback, reject);\n            }\n            else {\n                const url = FileAccess.asBrowserUri(`${moduleId}.js`).toString(true);\n                import(`${url}`).then(onModuleCallback).catch(reject);\n            }\n        });\n    }\n    // foreign method request\n    $fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n * @internal\n */\nexport function create(workerServer) {\n    return new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globalThis.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nexport const linesDiffComputers = {\n    getLegacy: () => new LegacyLinesDiffComputer(),\n    getDefault: () => new DefaultLinesDiffComputer(),\n};\n","'use strict';\n\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n\nexports.basename = (path, { windows } = {}) => {\n  if (windows) {\n    return path.replace(/[\\\\/]$/, '').replace(/.*[\\\\/]/, '');\n  } else {\n    return path.replace(/\\/$/, '').replace(/.*\\//, '');\n  }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../../core/wordHelper.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../../model/mirrorTextModel.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nexport const STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\nexport class WorkerTextModelSyncClient extends Disposable {\n    constructor(proxy, modelService, keepIdleModels = false) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels = false) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.$acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.$acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.$acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nexport class WorkerTextModelSyncServer {\n    constructor() {\n        this._models = Object.create(null);\n    }\n    getModel(uri) {\n        return this._models[uri];\n    }\n    getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    $acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    $acceptModelChanged(uri, e) {\n        if (!this._models[uri]) {\n            return;\n        }\n        const model = this._models[uri];\n        model.onEvents(e);\n    }\n    $acceptRemovedModel(uri) {\n        if (!this._models[uri]) {\n            return;\n        }\n        delete this._models[uri];\n    }\n}\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport class LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(new LineRangeMapping(original, modified));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${this.original.toString()}->${this.modified.toString()}}`;\n    }\n    flip() {\n        return new LineRangeMapping(this.modified, this.original);\n    }\n    join(other) {\n        return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n    /**\n     * This method assumes that the LineRangeMapping describes a valid diff!\n     * I.e. if one range is empty, the other range cannot be the entire document.\n     * It avoids various problems when the line range points to non-existing line-numbers.\n    */\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return new RangeMapping(origInclusiveRange, modInclusiveRange);\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                // If one line range starts at 1, the other one must start at 1 as well.\n                throw new BugIndicatingError('not a valid diff');\n            }\n            // Because one range is empty and both ranges start at line 1, none of the ranges can cover all lines.\n            // Thus, `endLineNumberExclusive` is a valid line number.\n            return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n        }\n        else {\n            // We can assume here that both startLineNumbers are greater than 1.\n            return new RangeMapping(new Range(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), new Range(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER));\n        }\n    }\n    /**\n     * This method assumes that the LineRangeMapping describes a valid diff!\n     * I.e. if one range is empty, the other range cannot be the entire document.\n     * It avoids various problems when the line range points to non-existing line-numbers.\n    */\n    toRangeMapping2(original, modified) {\n        if (isValidLineNumber(this.original.endLineNumberExclusive, original)\n            && isValidLineNumber(this.modified.endLineNumberExclusive, modified)) {\n            return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n        }\n        if (!this.original.isEmpty && !this.modified.isEmpty) {\n            return new RangeMapping(Range.fromPositions(new Position(this.original.startLineNumber, 1), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(new Position(this.modified.startLineNumber, 1), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n        }\n        if (this.original.startLineNumber > 1 && this.modified.startLineNumber > 1) {\n            return new RangeMapping(Range.fromPositions(normalizePosition(new Position(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER), original), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(normalizePosition(new Position(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER), modified), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n        }\n        // Situation now: one range is empty and one range touches the last line and one range starts at line 1.\n        // I don't think this can happen.\n        throw new BugIndicatingError();\n    }\n}\nfunction normalizePosition(position, content) {\n    if (position.lineNumber < 1) {\n        return new Position(1, 1);\n    }\n    if (position.lineNumber > content.length) {\n        return new Position(content.length, content[content.length - 1].length + 1);\n    }\n    const line = content[position.lineNumber - 1];\n    if (position.column > line.length + 1) {\n        return new Position(position.lineNumber, line.length + 1);\n    }\n    return position;\n}\nfunction isValidLineNumber(lineNumber, lines) {\n    return lineNumber >= 1 && lineNumber <= lines.length;\n}\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport class DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange)));\n        const modifiedRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange)));\n        return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip()));\n    }\n    withInnerChangesFromLineRanges() {\n        return new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]);\n    }\n}\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport class RangeMapping {\n    static assertSorted(rangeMappings) {\n        for (let i = 1; i < rangeMappings.length; i++) {\n            const previous = rangeMappings[i - 1];\n            const current = rangeMappings[i];\n            if (!(previous.originalRange.getEndPosition().isBeforeOrEqual(current.originalRange.getStartPosition())\n                && previous.modifiedRange.getEndPosition().isBeforeOrEqual(current.modifiedRange.getStartPosition()))) {\n                throw new BugIndicatingError('Range mappings must be sorted');\n            }\n        }\n    }\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n    }\n    flip() {\n        return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n    /**\n     * Creates a single text edit that describes the change from the original to the modified text.\n    */\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return new SingleTextEdit(this.originalRange, newText);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        // check first if the support is already set\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            // no factory or factory.resolve already finished\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._tokenizationSupports.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n            return this._colorMap[2 /* ColorId.DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\nexport class Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n    constructor(\n    /**\n     * The tokens in binary format. Each token occupies two array indices. For token i:\n     *  - at offset 2*i => startIndex\n     *  - at offset 2*i + 1 => metadata\n     *\n     */\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nexport var HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    /**\n     * Increase the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    /**\n     * Decrease the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\n/**\n * @internal\n */\nexport var CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* CompletionItemKind.Method */, Codicon.symbolMethod);\n    byKind.set(1 /* CompletionItemKind.Function */, Codicon.symbolFunction);\n    byKind.set(2 /* CompletionItemKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(3 /* CompletionItemKind.Field */, Codicon.symbolField);\n    byKind.set(4 /* CompletionItemKind.Variable */, Codicon.symbolVariable);\n    byKind.set(5 /* CompletionItemKind.Class */, Codicon.symbolClass);\n    byKind.set(6 /* CompletionItemKind.Struct */, Codicon.symbolStruct);\n    byKind.set(7 /* CompletionItemKind.Interface */, Codicon.symbolInterface);\n    byKind.set(8 /* CompletionItemKind.Module */, Codicon.symbolModule);\n    byKind.set(9 /* CompletionItemKind.Property */, Codicon.symbolProperty);\n    byKind.set(10 /* CompletionItemKind.Event */, Codicon.symbolEvent);\n    byKind.set(11 /* CompletionItemKind.Operator */, Codicon.symbolOperator);\n    byKind.set(12 /* CompletionItemKind.Unit */, Codicon.symbolUnit);\n    byKind.set(13 /* CompletionItemKind.Value */, Codicon.symbolValue);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(14 /* CompletionItemKind.Constant */, Codicon.symbolConstant);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(16 /* CompletionItemKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(17 /* CompletionItemKind.Keyword */, Codicon.symbolKeyword);\n    byKind.set(27 /* CompletionItemKind.Snippet */, Codicon.symbolSnippet);\n    byKind.set(18 /* CompletionItemKind.Text */, Codicon.symbolText);\n    byKind.set(19 /* CompletionItemKind.Color */, Codicon.symbolColor);\n    byKind.set(20 /* CompletionItemKind.File */, Codicon.symbolFile);\n    byKind.set(21 /* CompletionItemKind.Reference */, Codicon.symbolReference);\n    byKind.set(22 /* CompletionItemKind.Customcolor */, Codicon.symbolCustomColor);\n    byKind.set(23 /* CompletionItemKind.Folder */, Codicon.symbolFolder);\n    byKind.set(24 /* CompletionItemKind.TypeParameter */, Codicon.symbolTypeParameter);\n    byKind.set(25 /* CompletionItemKind.User */, Codicon.account);\n    byKind.set(26 /* CompletionItemKind.Issue */, Codicon.issues);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = new Map();\n    data.set('method', 0 /* CompletionItemKind.Method */);\n    data.set('function', 1 /* CompletionItemKind.Function */);\n    data.set('constructor', 2 /* CompletionItemKind.Constructor */);\n    data.set('field', 3 /* CompletionItemKind.Field */);\n    data.set('variable', 4 /* CompletionItemKind.Variable */);\n    data.set('class', 5 /* CompletionItemKind.Class */);\n    data.set('struct', 6 /* CompletionItemKind.Struct */);\n    data.set('interface', 7 /* CompletionItemKind.Interface */);\n    data.set('module', 8 /* CompletionItemKind.Module */);\n    data.set('property', 9 /* CompletionItemKind.Property */);\n    data.set('event', 10 /* CompletionItemKind.Event */);\n    data.set('operator', 11 /* CompletionItemKind.Operator */);\n    data.set('unit', 12 /* CompletionItemKind.Unit */);\n    data.set('value', 13 /* CompletionItemKind.Value */);\n    data.set('constant', 14 /* CompletionItemKind.Constant */);\n    data.set('enum', 15 /* CompletionItemKind.Enum */);\n    data.set('enum-member', 16 /* CompletionItemKind.EnumMember */);\n    data.set('enumMember', 16 /* CompletionItemKind.EnumMember */);\n    data.set('keyword', 17 /* CompletionItemKind.Keyword */);\n    data.set('snippet', 27 /* CompletionItemKind.Snippet */);\n    data.set('text', 18 /* CompletionItemKind.Text */);\n    data.set('color', 19 /* CompletionItemKind.Color */);\n    data.set('file', 20 /* CompletionItemKind.File */);\n    data.set('reference', 21 /* CompletionItemKind.Reference */);\n    data.set('customcolor', 22 /* CompletionItemKind.Customcolor */);\n    data.set('folder', 23 /* CompletionItemKind.Folder */);\n    data.set('type-parameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('typeParameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('account', 25 /* CompletionItemKind.User */);\n    data.set('issue', 26 /* CompletionItemKind.Issue */);\n    /**\n     * @internal\n     */\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 /* CompletionItemKind.Property */;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport class SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\n/**\n * @internal\n */\nexport var DocumentPasteTriggerKind;\n(function (DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * @internal\n */\nexport function isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\n/**\n * @internal\n */\nexport const symbolKindNames = {\n    [17 /* SymbolKind.Array */]: localize('Array', \"array\"),\n    [16 /* SymbolKind.Boolean */]: localize('Boolean', \"boolean\"),\n    [4 /* SymbolKind.Class */]: localize('Class', \"class\"),\n    [13 /* SymbolKind.Constant */]: localize('Constant', \"constant\"),\n    [8 /* SymbolKind.Constructor */]: localize('Constructor', \"constructor\"),\n    [9 /* SymbolKind.Enum */]: localize('Enum', \"enumeration\"),\n    [21 /* SymbolKind.EnumMember */]: localize('EnumMember', \"enumeration member\"),\n    [23 /* SymbolKind.Event */]: localize('Event', \"event\"),\n    [7 /* SymbolKind.Field */]: localize('Field', \"field\"),\n    [0 /* SymbolKind.File */]: localize('File', \"file\"),\n    [11 /* SymbolKind.Function */]: localize('Function', \"function\"),\n    [10 /* SymbolKind.Interface */]: localize('Interface', \"interface\"),\n    [19 /* SymbolKind.Key */]: localize('Key', \"key\"),\n    [5 /* SymbolKind.Method */]: localize('Method', \"method\"),\n    [1 /* SymbolKind.Module */]: localize('Module', \"module\"),\n    [2 /* SymbolKind.Namespace */]: localize('Namespace', \"namespace\"),\n    [20 /* SymbolKind.Null */]: localize('Null', \"null\"),\n    [15 /* SymbolKind.Number */]: localize('Number', \"number\"),\n    [18 /* SymbolKind.Object */]: localize('Object', \"object\"),\n    [24 /* SymbolKind.Operator */]: localize('Operator', \"operator\"),\n    [3 /* SymbolKind.Package */]: localize('Package', \"package\"),\n    [6 /* SymbolKind.Property */]: localize('Property', \"property\"),\n    [14 /* SymbolKind.String */]: localize('String', \"string\"),\n    [22 /* SymbolKind.Struct */]: localize('Struct', \"struct\"),\n    [25 /* SymbolKind.TypeParameter */]: localize('TypeParameter', \"type parameter\"),\n    [12 /* SymbolKind.Variable */]: localize('Variable', \"variable\"),\n};\n/**\n * @internal\n */\nexport function getAriaLabelForSymbol(symbolName, kind) {\n    return localize('symbolAriaLabel', '{0} ({1})', symbolName, symbolKindNames[kind]);\n}\n/**\n * @internal\n */\nexport var SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* SymbolKind.File */, Codicon.symbolFile);\n    byKind.set(1 /* SymbolKind.Module */, Codicon.symbolModule);\n    byKind.set(2 /* SymbolKind.Namespace */, Codicon.symbolNamespace);\n    byKind.set(3 /* SymbolKind.Package */, Codicon.symbolPackage);\n    byKind.set(4 /* SymbolKind.Class */, Codicon.symbolClass);\n    byKind.set(5 /* SymbolKind.Method */, Codicon.symbolMethod);\n    byKind.set(6 /* SymbolKind.Property */, Codicon.symbolProperty);\n    byKind.set(7 /* SymbolKind.Field */, Codicon.symbolField);\n    byKind.set(8 /* SymbolKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(9 /* SymbolKind.Enum */, Codicon.symbolEnum);\n    byKind.set(10 /* SymbolKind.Interface */, Codicon.symbolInterface);\n    byKind.set(11 /* SymbolKind.Function */, Codicon.symbolFunction);\n    byKind.set(12 /* SymbolKind.Variable */, Codicon.symbolVariable);\n    byKind.set(13 /* SymbolKind.Constant */, Codicon.symbolConstant);\n    byKind.set(14 /* SymbolKind.String */, Codicon.symbolString);\n    byKind.set(15 /* SymbolKind.Number */, Codicon.symbolNumber);\n    byKind.set(16 /* SymbolKind.Boolean */, Codicon.symbolBoolean);\n    byKind.set(17 /* SymbolKind.Array */, Codicon.symbolArray);\n    byKind.set(18 /* SymbolKind.Object */, Codicon.symbolObject);\n    byKind.set(19 /* SymbolKind.Key */, Codicon.symbolKey);\n    byKind.set(20 /* SymbolKind.Null */, Codicon.symbolNull);\n    byKind.set(21 /* SymbolKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(22 /* SymbolKind.Struct */, Codicon.symbolStruct);\n    byKind.set(23 /* SymbolKind.Event */, Codicon.symbolEvent);\n    byKind.set(24 /* SymbolKind.Operator */, Codicon.symbolOperator);\n    byKind.set(25 /* SymbolKind.TypeParameter */, Codicon.symbolTypeParameter);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}));\n/** @internal */\nexport class TextEdit {\n}\nexport class FoldingRangeKind {\n    /**\n     * Kind for folding range representing a comment. The value of the kind is 'comment'.\n     */\n    static { this.Comment = new FoldingRangeKind('comment'); }\n    /**\n     * Kind for folding range representing a import. The value of the kind is 'imports'.\n     */\n    static { this.Imports = new FoldingRangeKind('imports'); }\n    /**\n     * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n     * The value of the kind is 'region'.\n     */\n    static { this.Region = new FoldingRangeKind('region'); }\n    /**\n     * Returns a {@link FoldingRangeKind} for the given value.\n     *\n     * @param value of the kind.\n     */\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return new FoldingRangeKind(value);\n    }\n    /**\n     * Creates a new {@link FoldingRangeKind}.\n     *\n     * @param value of the kind.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\nexport var NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nexport var NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\n/**\n * @internal\n */\nexport var Command;\n(function (Command) {\n    /**\n     * @internal\n     */\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * @internal\n */\nexport class LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n/**\n * @internal\n */\nexport const TreeSitterTokenizationRegistry = new TokenizationRegistryImpl();\nexport var InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * Represents a non-negative length of text in terms of line and column count.\n*/\nexport class TextLength {\n    static { this.zero = new TextLength(0, 0); }\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return new TextLength(0, position2.column - position1.column);\n        }\n        else {\n            return new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1);\n        }\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return new TextLength(line, column);\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column + this.columnCount);\n        }\n        else {\n            return new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return new Position(position.lineNumber, position.column + this.columnCount);\n        }\n        else {\n            return new Position(position.lineNumber + this.lineCount, this.columnCount + 1);\n        }\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    /**\n     * @returns SUM(0 <= j < values.length, values[j])\n     */\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        // trim things\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        // mark as valid\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            // no change\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /** Scheme used for code blocks in chat. */\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    /** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    /** Scheme used for the chat input editor. */\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    /**\n     * Scheme used for input box for creating comments.\n     */\n    Schemas.commentsInput = 'comment';\n    /**\n     * Scheme used for special rendering of settings in the release notes\n     */\n    Schemas.codeSetting = 'code-setting';\n    /**\n     * Scheme used for output panel resources\n     */\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {}));\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    get _remoteResourcesPath() {\n        return paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    asBrowserUri(resourcePath) {\n        // ESM-comment-begin\n        // \t\tconst uri = this.toUri(resourcePath, require);\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        const uri = this.toUri(resourcePath);\n        // ESM-uncomment-end\n        return this.uriToBrowserUri(uri);\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            // File URL (with scheme)\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n            }\n            // File Path (no scheme)\n            const modulePath = paths.join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nexport function register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    static { this._bigBlock32 = new DataView(new ArrayBuffer(320)); } // 80 * 4 = 320\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 132 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/88c0b0e5/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 /* ScanCode.Minus */, 'Minus', 88 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 /* ScanCode.Equal */, 'Equal', 86 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 92 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 /* ScanCode.BracketRight */, 'BracketRight', 94 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 /* ScanCode.Backslash */, 'Backslash', 93 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n        [0, 57 /* ScanCode.Semicolon */, 'Semicolon', 85 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 /* ScanCode.Quote */, 'Quote', 95 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 /* ScanCode.Backquote */, 'Backquote', 91 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 /* ScanCode.Comma */, 'Comma', 87 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 /* ScanCode.Period */, 'Period', 89 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 /* ScanCode.Slash */, 'Slash', 90 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 84 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 /* ScanCode.NumLock */, 'NumLock', 83 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 113 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 108 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 111 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 109 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 99 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 100 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 101 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 102 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 103 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 104 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 105 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 106 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 107 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 98 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 112 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 97 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 /* ScanCode.F20 */, 'F20', 78 /* KeyCode.F20 */, 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 /* ScanCode.F21 */, 'F21', 79 /* KeyCode.F21 */, 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 /* ScanCode.F22 */, 'F22', 80 /* KeyCode.F22 */, 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 /* ScanCode.F23 */, 'F23', 81 /* KeyCode.F23 */, 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 /* ScanCode.F24 */, 'F24', 82 /* KeyCode.F24 */, 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 117 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 118 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 119 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 110 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 /* ScanCode.IntlRo */, 'IntlRo', 115 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 131 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 124 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 125 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 /* ScanCode.MediaStop */, 'MediaStop', 126 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 127 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 128 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 129 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 130 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 120 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 121 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 122 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 123 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [1, 0 /* ScanCode.None */, empty, 114 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 116 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 96 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98 /* KeyCode.Numpad0 */ && keyCode <= 113 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = new LinkedList();\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nexport function getWordAtText(column, wordDefinition, text, textOffset, config) {\n    // Ensure the regex has the 'g' flag, otherwise this will loop forever\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","var map = {\n\t\"./editorBaseApi\": [\n\t\t37970\n\t],\n\t\"./editorBaseApi.js\": [\n\t\t37970\n\t],\n\t\"./editorSimpleWorker\": [\n\t\t41122\n\t],\n\t\"./editorSimpleWorker.js\": [\n\t\t41122\n\t],\n\t\"./editorWorker\": [\n\t\t22143,\n\t\t2143\n\t],\n\t\"./editorWorker.js\": [\n\t\t22143,\n\t\t2143\n\t],\n\t\"./editorWorkerHost\": [\n\t\t70869\n\t],\n\t\"./editorWorkerHost.js\": [\n\t\t70869\n\t],\n\t\"./findSectionHeaders\": [\n\t\t97716\n\t],\n\t\"./findSectionHeaders.js\": [\n\t\t97716\n\t],\n\t\"./getIconClasses\": [\n\t\t45555,\n\t\t1613,\n\t\t5555\n\t],\n\t\"./getIconClasses.js\": [\n\t\t45555,\n\t\t1613,\n\t\t5555\n\t],\n\t\"./languageFeatureDebounce\": [\n\t\t26973,\n\t\t9570,\n\t\t6973\n\t],\n\t\"./languageFeatureDebounce.js\": [\n\t\t26973,\n\t\t9570,\n\t\t6973\n\t],\n\t\"./languageFeatures\": [\n\t\t33653,\n\t\t3653\n\t],\n\t\"./languageFeatures.js\": [\n\t\t33653,\n\t\t3653\n\t],\n\t\"./languageFeaturesService\": [\n\t\t50022,\n\t\t6611,\n\t\t5198\n\t],\n\t\"./languageFeaturesService.js\": [\n\t\t50022,\n\t\t6611,\n\t\t5198\n\t],\n\t\"./languageService\": [\n\t\t22155,\n\t\t1613,\n\t\t6611,\n\t\t2155\n\t],\n\t\"./languageService.js\": [\n\t\t22155,\n\t\t1613,\n\t\t6611,\n\t\t2155\n\t],\n\t\"./languagesAssociations\": [\n\t\t25709,\n\t\t1613,\n\t\t6611,\n\t\t5709\n\t],\n\t\"./languagesAssociations.js\": [\n\t\t25709,\n\t\t1613,\n\t\t6611,\n\t\t5709\n\t],\n\t\"./languagesRegistry\": [\n\t\t35074,\n\t\t1613,\n\t\t6611,\n\t\t5074\n\t],\n\t\"./languagesRegistry.js\": [\n\t\t35074,\n\t\t1613,\n\t\t6611,\n\t\t5074\n\t],\n\t\"./markerDecorations\": [\n\t\t86259,\n\t\t6259\n\t],\n\t\"./markerDecorations.js\": [\n\t\t86259,\n\t\t6259\n\t],\n\t\"./markerDecorationsService\": [\n\t\t72524,\n\t\t1422,\n\t\t6828\n\t],\n\t\"./markerDecorationsService.js\": [\n\t\t72524,\n\t\t1422,\n\t\t6828\n\t],\n\t\"./model\": [\n\t\t16911,\n\t\t6911\n\t],\n\t\"./model.js\": [\n\t\t16911,\n\t\t6911\n\t],\n\t\"./modelService\": [\n\t\t91320,\n\t\t1613,\n\t\t1422,\n\t\t1320,\n\t\t7229\n\t],\n\t\"./modelService.js\": [\n\t\t91320,\n\t\t1613,\n\t\t1422,\n\t\t1320,\n\t\t7229\n\t],\n\t\"./resolverService\": [\n\t\t55387,\n\t\t5387\n\t],\n\t\"./resolverService.js\": [\n\t\t55387,\n\t\t5387\n\t],\n\t\"./semanticTokensDto\": [\n\t\t7029,\n\t\t7029\n\t],\n\t\"./semanticTokensDto.js\": [\n\t\t7029,\n\t\t7029\n\t],\n\t\"./semanticTokensProviderStyling\": [\n\t\t4399,\n\t\t9570,\n\t\t4399,\n\t\t9729\n\t],\n\t\"./semanticTokensProviderStyling.js\": [\n\t\t4399,\n\t\t9570,\n\t\t4399,\n\t\t9729\n\t],\n\t\"./semanticTokensStyling\": [\n\t\t74566,\n\t\t4566\n\t],\n\t\"./semanticTokensStyling.js\": [\n\t\t74566,\n\t\t4566\n\t],\n\t\"./semanticTokensStylingService\": [\n\t\t28843,\n\t\t9570,\n\t\t4399,\n\t\t8843\n\t],\n\t\"./semanticTokensStylingService.js\": [\n\t\t28843,\n\t\t9570,\n\t\t4399,\n\t\t8843\n\t],\n\t\"./textModelSync/textModelSync.impl\": [\n\t\t43481\n\t],\n\t\"./textModelSync/textModelSync.impl.js\": [\n\t\t43481\n\t],\n\t\"./textModelSync/textModelSync.protocol\": [\n\t\t37619,\n\t\t7619\n\t],\n\t\"./textModelSync/textModelSync.protocol.js\": [\n\t\t37619,\n\t\t7619\n\t],\n\t\"./textResourceConfiguration\": [\n\t\t93533,\n\t\t3533\n\t],\n\t\"./textResourceConfiguration.js\": [\n\t\t93533,\n\t\t3533\n\t],\n\t\"./treeSitterParserService\": [\n\t\t47105,\n\t\t7105\n\t],\n\t\"./treeSitterParserService.js\": [\n\t\t47105,\n\t\t7105\n\t],\n\t\"./treeViewsDnd\": [\n\t\t29740,\n\t\t9740\n\t],\n\t\"./treeViewsDnd.js\": [\n\t\t29740,\n\t\t9740\n\t],\n\t\"./treeViewsDndService\": [\n\t\t95621,\n\t\t5621\n\t],\n\t\"./treeViewsDndService.js\": [\n\t\t95621,\n\t\t5621\n\t],\n\t\"./unicodeTextModelHighlighter\": [\n\t\t14818\n\t],\n\t\"./unicodeTextModelHighlighter.js\": [\n\t\t14818\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 59135;\nmodule.exports = webpackAsyncContext;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nexport function splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static { this.ambiguousCharacterData = new Lazy(() => {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        // Stored as key1, value1, key2, value2, ...\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    }); }\n    static { this.cache = new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = new Map();\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = new Map(map1);\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = new Map();\n            for (const [key, value] of map1) {\n                if (map2.has(key)) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return new AmbiguousCharacters(map);\n    }); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k) => !k.startsWith('_'))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/commits/v20.9.0/lib/path.js\n// Excluding: the change that adds primordials\n// (https://github.com/nodejs/node/commit/187a862d221dec42fa9a5c4214e7034d9092792f and others)\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction formatExt(ext) {\n    return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, `paths[${i}]`);\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, `paths[${i}]`);\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            // only allow to blend onto a non-opaque color onto a opaque color\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        // https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n        return new Color(new RGBA(opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r), opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g), opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b), 1));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n    static { this.white = new Color(new RGBA(255, 255, 255, 1)); }\n    static { this.black = new Color(new RGBA(0, 0, 0, 1)); }\n    static { this.red = new Color(new RGBA(255, 0, 0, 1)); }\n    static { this.blue = new Color(new RGBA(0, 0, 255, 1)); }\n    static { this.green = new Color(new RGBA(0, 255, 0, 1)); }\n    static { this.cyan = new Color(new RGBA(0, 255, 255, 1)); }\n    static { this.lightgrey = new Color(new RGBA(211, 211, 211, 1)); }\n    static { this.transparent = new Color(new RGBA(0, 0, 0, 0)); }\n}\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* CharCode.Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* CharCode.Digit0 */: return 0;\n                    case 49 /* CharCode.Digit1 */: return 1;\n                    case 50 /* CharCode.Digit2 */: return 2;\n                    case 51 /* CharCode.Digit3 */: return 3;\n                    case 52 /* CharCode.Digit4 */: return 4;\n                    case 53 /* CharCode.Digit5 */: return 5;\n                    case 54 /* CharCode.Digit6 */: return 6;\n                    case 55 /* CharCode.Digit7 */: return 7;\n                    case 56 /* CharCode.Digit8 */: return 8;\n                    case 57 /* CharCode.Digit9 */: return 9;\n                    case 97 /* CharCode.a */: return 10;\n                    case 65 /* CharCode.A */: return 10;\n                    case 98 /* CharCode.b */: return 11;\n                    case 66 /* CharCode.B */: return 11;\n                    case 99 /* CharCode.c */: return 12;\n                    case 67 /* CharCode.C */: return 12;\n                    case 100 /* CharCode.d */: return 13;\n                    case 68 /* CharCode.D */: return 13;\n                    case 101 /* CharCode.e */: return 14;\n                    case 69 /* CharCode.E */: return 14;\n                    case 102 /* CharCode.f */: return 15;\n                    case 70 /* CharCode.F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\n/**\n * A range of offsets (0-based).\n*/\nexport class OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return new OffsetRange(start, endExclusive);\n    }\n    static ofLength(length) {\n        return new OffsetRange(0, length);\n    }\n    static ofStartAndLength(start, length) {\n        return new OffsetRange(start, start + length);\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw new BugIndicatingError(`Invalid range: ${this.toString()}`);\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive + offset);\n    }\n    deltaStart(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive);\n    }\n    deltaEnd(offset) {\n        return new OffsetRange(this.start, this.endExclusive + offset);\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    /**\n     * for all numbers n: range1.contains(n) or range2.contains(n) => range1.join(range2).contains(n)\n     * The joined range is the smallest range that contains both ranges.\n     */\n    join(other) {\n        return new OffsetRange(Math.min(this.start, other.start), Math.max(this.endExclusive, other.endExclusive));\n    }\n    /**\n     * for all numbers n: range1.contains(n) and range2.contains(n) <=> range1.intersect(range2).contains(n)\n     *\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return new OffsetRange(start, end);\n        }\n        return undefined;\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    /**\n     * Returns the given value if it is contained in this instance, otherwise the closest value that is contained.\n     * The range must not be empty.\n     */\n    clip(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    /**\n     * Returns `r := value + k * length` such that `r` is contained in this range.\n     * The range must not be empty.\n     *\n     * E.g. `[5, 10).clipCyclic(10) === 5`, `[5, 10).clipCyclic(11) === 6` and `[5, 10).clipCyclic(4) === 9`.\n     */\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nexport class OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    toString() {\n        return this._sortedRanges.map(r => r.toString()).join(', ');\n    }\n    /**\n     * Returns of there is a value that is contained in this instance and the given range.\n     */\n    intersectsStrict(other) {\n        // TODO use binary search\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        // TODO use binary search + slice\n        const result = new OffsetRangeSet();\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinesDiff {\n    constructor(changes, \n    /**\n     * Sorted by original line ranges.\n     * The original line ranges and the modified line ranges must be disjoint (but can be touching).\n     */\n    moves, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Position } from './position.js';\nimport { PositionOffsetTransformer } from './positionToOffset.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\nexport class TextEdit {\n    constructor(edits) {\n        this.edits = edits;\n        assertFn(() => checkAdjacentItems(edits, (a, b) => a.range.getEndPosition().isBeforeOrEqual(b.range.getStartPosition())));\n    }\n    apply(text) {\n        let result = '';\n        let lastEditEnd = new Position(1, 1);\n        for (const edit of this.edits) {\n            const editRange = edit.range;\n            const editStart = editRange.getStartPosition();\n            const editEnd = editRange.getEndPosition();\n            const r = rangeFromPositions(lastEditEnd, editStart);\n            if (!r.isEmpty()) {\n                result += text.getValueOfRange(r);\n            }\n            result += edit.text;\n            lastEditEnd = editEnd;\n        }\n        const r = rangeFromPositions(lastEditEnd, text.endPositionExclusive);\n        if (!r.isEmpty()) {\n            result += text.getValueOfRange(r);\n        }\n        return result;\n    }\n    applyToString(str) {\n        const strText = new StringText(str);\n        return this.apply(strText);\n    }\n    getNewRanges() {\n        const newRanges = [];\n        let previousEditEndLineNumber = 0;\n        let lineOffset = 0;\n        let columnOffset = 0;\n        for (const edit of this.edits) {\n            const textLength = TextLength.ofText(edit.text);\n            const newRangeStart = Position.lift({\n                lineNumber: edit.range.startLineNumber + lineOffset,\n                column: edit.range.startColumn + (edit.range.startLineNumber === previousEditEndLineNumber ? columnOffset : 0)\n            });\n            const newRange = textLength.createRange(newRangeStart);\n            newRanges.push(newRange);\n            lineOffset = newRange.endLineNumber - edit.range.endLineNumber;\n            columnOffset = newRange.endColumn - edit.range.endColumn;\n            previousEditEndLineNumber = edit.range.endLineNumber;\n        }\n        return newRanges;\n    }\n}\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    toSingleEditOperation() {\n        return {\n            range: this.range,\n            text: this.text,\n        };\n    }\n}\nfunction rangeFromPositions(start, end) {\n    if (start.lineNumber === end.lineNumber && start.column === Number.MAX_SAFE_INTEGER) {\n        return Range.fromPositions(end, end);\n    }\n    else if (!start.isBeforeOrEqual(end)) {\n        throw new BugIndicatingError('start must be before end');\n    }\n    return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n}\nexport class AbstractText {\n    get endPositionExclusive() {\n        return this.length.addToPosition(new Position(1, 1));\n    }\n}\nexport class StringText extends AbstractText {\n    constructor(value) {\n        super();\n        this.value = value;\n        this._t = new PositionOffsetTransformer(this.value);\n    }\n    getValueOfRange(range) {\n        return this._t.getOffsetRange(range).substring(this.value);\n    }\n    get length() {\n        return this._t.textLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CodeActionTriggerType;\n(function (CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 37] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 38] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 39] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 40] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 41] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 42] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 43] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 44] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 45] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 46] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 47] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 48] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 49] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 50] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 51] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 52] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 53] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 54] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 55] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 56] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 57] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 58] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 59] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 60] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 61] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 62] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"inlineEdit\"] = 63] = \"inlineEdit\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 64] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 65] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 66] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 67] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 68] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 69] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 70] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 71] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 72] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 73] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 74] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 75] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 76] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 77] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 78] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 79] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 80] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 81] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 82] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 83] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 84] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 85] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 86] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 87] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"placeholder\"] = 88] = \"placeholder\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 89] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 90] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 91] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 92] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 93] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 94] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 95] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 96] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 97] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 98] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 99] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 100] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 101] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 102] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 103] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 104] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 105] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 106] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 107] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 108] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 109] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 110] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 111] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 112] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 113] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 114] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 115] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 116] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 117] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 118] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 119] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 120] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 121] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 122] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 123] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 124] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 125] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 126] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 127] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 128] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 129] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 130] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSegmenterLocales\"] = 131] = \"wordSegmenterLocales\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 132] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 133] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 134] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 135] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 136] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 137] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 138] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 139] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 140] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 141] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 142] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 143] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 144] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 145] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 146] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 147] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 148] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 149] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 150] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nexport var HoverVerbosityAction;\n(function (HoverVerbosityAction) {\n    /**\n     * Increase the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    /**\n     * Decrease the verbosity of the hover\n     */\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var InlineEditTriggerKind;\n(function (InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    /**\n     * VK_CLEAR, 0x0C, CLEAR key\n     */\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Section header style.\n */\nexport var MinimapSectionHeaderStyle;\n(function (MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\nexport var NewSymbolNameTag;\n(function (NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}));\nexport var NewSymbolNameTriggerKind;\n(function (NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * How a partial acceptance was triggered.\n */\nexport var PartialAcceptTriggerKind;\n(function (PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {}));\nexport var PositionAffinity;\n(function (PositionAffinity) {\n    /**\n     * Prefers the left most position.\n    */\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    /**\n     * Prefers the right most position.\n    */\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    /**\n     * No preference.\n    */\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    /**\n     * If the given position is on injected text, prefers the position left of it.\n    */\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    /**\n     * If the given position is on injected text, prefers the position right of it.\n    */\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ShowLightbulbIconMode;\n(function (ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n// Native environment\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            _locale = nlsConfig.userLocale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Web environment\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    _language = nls.getNLSLanguage() || LANGUAGE_DEFAULT;\n    _locale = navigator.language.toLowerCase();\n    _platformLocale = _locale;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nexport const webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese or de for German)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    static { this.Undefined = new Node(undefined); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorWorkerHost {\n    static { this.CHANNEL_NAME = 'editorWorkerHost'; }\n    static getChannel(workerServer) {\n        return workerServer.getChannel(EditorWorkerHost.CHANNEL_NAME);\n    }\n    static setChannel(workerClient, obj) {\n        workerClient.setChannel(EditorWorkerHost.CHANNEL_NAME, obj);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n/**\n * Like assert, but doesn't throw.\n */\nexport function softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(new BugIndicatingError('Soft Assertion Failed'));\n    }\n}\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition) {\n    if (!condition()) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        // Reevaluate `condition` again to make debugging easier\n        condition();\n        onUnexpectedError(new BugIndicatingError('Assertion Failed'));\n    }\n}\nexport function checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { OffsetPair, SequenceDiff } from './algorithms/diffAlgorithm.js';\nexport function optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    // Sometimes, calling this function twice improves the result.\n    // Uncomment the second invocation and run the tests to see the difference.\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\n/**\n * This function fixes issues like this:\n * ```\n * import { Baz, Bar } from \"foo\";\n * ```\n * <->\n * ```\n * import { Baz, Bar, Foo } from \"foo\";\n * ```\n * Computed diff: [ {Add \",\" after Bar}, {Add \"Foo \" after space} }\n * Improved diff: [{Add \", Foo\" after Bar}]\n */\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    // First move them all to the left as much as possible and join them if possible\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                // Merge previous and current diff\n                result[result.length - 1] = new SequenceDiff(new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length), new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    // Then move them all to the right and join them again if possible\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                // Merge previous and current diff, write to result!\n                result[i + 1] = new SequenceDiff(new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive), new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\n// align character level diffs at whitespace characters\n// import { IBar } from \"foo\";\n// import { I[Arr, I]Bar } from \"foo\";\n// ->\n// import { [IArr, ]IBar } from \"foo\";\n// import { ITransaction, observableValue, transaction } from 'vs/base/common/observable';\n// import { ITransaction, observable[FromEvent, observable]Value, transaction } from 'vs/base/common/observable';\n// ->\n// import { ITransaction, [observableFromEvent, ]observableValue, transaction } from 'vs/base/common/observable';\n// collectBrackets(level + 1, levelPerBracketType);\n// collectBrackets(level + 1, levelPerBracket[ + 1, levelPerBracket]Type);\n// ->\n// collectBrackets(level + 1, [levelPerBracket + 1, ]levelPerBracketType);\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = new OffsetRange(prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length);\n        const seq2ValidRange = new OffsetRange(prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length);\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100; // To prevent performance issues\n    // don't touch previous or next!\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    // Visualize `[sequence1.text, diff.seq1Range.start + deltaAfter]`\n    // and `[sequence2.text, diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter]`\n    let bestDelta = 0;\n    let bestScore = -1;\n    // find best scored delta\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nexport function removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nexport function extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = new OffsetPair(0, 0);\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = new SequenceDiff(w1, w2);\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        // The words do not touch previous equals mappings, as we would have processed them already.\n        // But they might touch the next ones.\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            // Because there is an intersection, we know that the words are not empty.\n            const v = new SequenceDiff(v1, v2);\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                // The word extends beyond the next equal mapping.\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        // The equal parts are not empty, so -1 gives us a character that is equal in both parts.\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nexport function removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nexport function removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                // TODO: Maybe a neural net can be used to derive the result from these numbers\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    // Remove short suffixes/prefixes\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(new OffsetRange(fullRange1.start, cur.seq1Range.start));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    static collapseToEnd(range) {\n        return new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Moves the range by the given amount of lines.\n     */\n    delta(lineCount) {\n        return new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\n/**\n * A range of lines (1-based).\n */\nexport class LineRange {\n    static fromRangeInclusive(range) {\n        return new LineRange(range.startLineNumber, range.endLineNumber + 1);\n    }\n    /**\n     * @param lineRanges An array of sorted line ranges.\n     */\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = new LineRangeSet(lineRanges[0].slice());\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(new LineRangeSet(lineRanges[i].slice()));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw new BugIndicatingError('lineRanges cannot be empty');\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return new LineRange(startLineNumber, endLineNumberExclusive);\n    }\n    static ofLength(startLineNumber, length) {\n        return new LineRange(startLineNumber, startLineNumber + length);\n    }\n    /**\n     * @internal\n     */\n    static deserialize(lineRange) {\n        return new LineRange(lineRange[0], lineRange[1]);\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range contains the given line number.\n     */\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range is empty.\n     */\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    /**\n     * Moves this line range by the given offset of line numbers.\n     */\n    delta(offset) {\n        return new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n    }\n    deltaLength(offset) {\n        return new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset);\n    }\n    /**\n     * The number of lines this line range spans.\n     */\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    /**\n     * Creates a line range that combines this and the given line range.\n     */\n    join(other) {\n        return new LineRange(Math.min(this.startLineNumber, other.startLineNumber), Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    /**\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return new LineRange(startLineNumber, endLineNumberExclusive);\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n    }\n    /**\n     * @deprecated Using this function is discouraged because it might lead to bugs: The end position is not guaranteed to be a valid position!\n    */\n    toExclusiveRange() {\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1);\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    /**\n     * @internal\n     */\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Converts this 1-based line range to a 0-based offset range (subtracts 1!).\n     * @internal\n     */\n    toOffsetRange() {\n        return new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n    }\n}\nexport class LineRangeSet {\n    constructor(\n    /**\n     * Sorted by start line number.\n     * No two line ranges are touching or intersecting.\n     */\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        // Idea: Find joinRange such that:\n        // replaceRange = _normalizedRanges.replaceRange(joinRange, range.joinAll(joinRange.map(idx => this._normalizedRanges[idx])))\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            // If there is no element that touches range, then joinRangeStartIdx === joinRangeEndIdxExclusive and that value is the index of the element after range\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            // Else, there is an element that touches range and in this case it is both the first and last element. Thus we can replace it\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            // First and last element are different - we need to replace the entire range\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    // merge\n                    current = new LineRange(current.startLineNumber, Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive));\n                }\n                else {\n                    // push\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return new LineRangeSet(result);\n    }\n    /**\n     * Subtracts all ranges in this set from `range` and returns the result.\n     */\n    subtractFrom(range) {\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return new LineRangeSet([range]);\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(new LineRange(startLineNumber, r.startLineNumber));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n        }\n        return new LineRangeSet(result);\n    }\n    toString() {\n        return this._normalizedRanges.map(r => r.toString()).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return new LineRangeSet(result);\n    }\n    getWithDelta(value) {\n        return new LineRangeSet(this._normalizedRanges.map(r => r.delta(value)));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport function isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst markRegex = new RegExp('\\\\bMARK:\\\\s*(.*)$', 'd');\nconst trimDashesRegex = /^-+|-+$/g;\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model, options) {\n    let headers = [];\n    if (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n    }\n    return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n    markRegex.lastIndex = 0;\n    const match = markRegex.exec(lineContent);\n    if (match) {\n        const column = match.indices[1][0] + 1;\n        const endColumn = match.indices[1][1] + 1;\n        const range = { startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: endColumn };\n        if (range.endColumn > range.startColumn) {\n            const sectionHeader = {\n                range,\n                ...getHeaderText(match[1]),\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                sectionHeaders.push(sectionHeader);\n            }\n        }\n    }\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\n","export function identity(t) {\n    return t;\n}\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = new Map();\n        this._map2 = new Map();\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this._map2.has(key)) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport class DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n    constructor(diffs, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n    static assertSorted(sequenceDiffs) {\n        let last = undefined;\n        for (const cur of sequenceDiffs) {\n            if (last) {\n                if (!(last.seq1Range.endExclusive <= cur.seq1Range.start && last.seq2Range.endExclusive <= cur.seq2Range.start)) {\n                    throw new BugIndicatingError('Sequence diffs must be sorted');\n                }\n            }\n            last = cur;\n        }\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return new SequenceDiff(i1, i2);\n    }\n    getStarts() {\n        return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n    getEndExclusives() {\n        return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n}\nexport class OffsetPair {\n    static { this.zero = new OffsetPair(0, 0); }\n    static { this.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new OffsetPair(this.offset1 + offset, this.offset2 + offset);\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nexport class InfiniteTimeout {\n    static { this.instance = new InfiniteTimeout(); }\n    isValid() {\n        return true;\n    }\n}\nexport class DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    // Recommendation: Set a log-point `{this.disable()}` in the body\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false; // timeout reached\n            // eslint-disable-next-line no-debugger\n            debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n        }\n        return this.valid;\n    }\n}\n","var map = {\n\t\"./simpleWorker\": 99246,\n\t\"./simpleWorker.js\": 99246\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 98933;\nmodule.exports = webpackAsyncContext;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { FileAccess } from '../network.js';\nimport { isWeb } from '../platform.js';\nimport * as strings from '../strings.js';\n// ESM-comment-begin\n// const isESM = false;\n// ESM-comment-end\n// ESM-uncomment-begin\nconst isESM = true;\n// ESM-uncomment-end\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, channel, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* MessageType.Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* MessageType.Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, channel, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* MessageType.SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* MessageType.Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* MessageType.UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(channel, method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, channel, method, args));\n        });\n    }\n    listen(channel, eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, channel, eventName, arg));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    createProxyToRemoteChannel(channel, sendMessageBarrier) {\n        const handler = {\n            get: (target, name) => {\n                if (typeof name === 'string' && !target[name]) {\n                    if (propertyIsDynamicEvent(name)) { // onDynamic...\n                        target[name] = (arg) => {\n                            return this.listen(channel, name, arg);\n                        };\n                    }\n                    else if (propertyIsEvent(name)) { // on...\n                        target[name] = this.listen(channel, name, undefined);\n                    }\n                    else if (name.charCodeAt(0) === 36 /* CharCode.DollarSign */) { // $...\n                        target[name] = async (...myArgs) => {\n                            await sendMessageBarrier?.();\n                            return this.sendMessage(channel, name, myArgs);\n                        };\n                    }\n                }\n                return target[name];\n            }\n        };\n        return new Proxy(Object.create(null), handler);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* MessageType.Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* MessageType.Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* MessageType.SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* MessageType.Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* MessageType.UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 /* MessageType.Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* MessageType.Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, workerDescriptor) {\n        super();\n        this._localChannels = new Map();\n        this._worker = this._register(workerFactory.create({\n            amdModuleId: 'vs/base/common/worker/simpleWorker',\n            esmModuleLocation: workerDescriptor.esmModuleLocation,\n            label: workerDescriptor.label\n        }, (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            onUnexpectedError(err);\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => {\n                return this._handleMessage(channel, method, args);\n            },\n            handleEvent: (channel, eventName, arg) => {\n                return this._handleEvent(channel, eventName, arg);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        const globalRequire = globalThis.require;\n        if (typeof globalRequire !== 'undefined' && typeof globalRequire.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globalRequire.getConfig();\n        }\n        else if (typeof globalThis.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            workerDescriptor.amdModuleId,\n        ]);\n        this.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n        this._onModuleLoaded.catch((e) => {\n            this._onError('Worker failed to load ' + workerDescriptor.amdModuleId, e);\n        });\n    }\n    _handleMessage(channelName, method, args) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            return Promise.reject(new Error(`Missing channel ${channelName} on main thread`));\n        }\n        if (typeof channel[method] !== 'function') {\n            return Promise.reject(new Error(`Missing method ${method} on main thread channel ${channelName}`));\n        }\n        try {\n            return Promise.resolve(channel[method].apply(channel, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channelName, eventName, arg) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            throw new Error(`Missing channel ${channelName} on main thread`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = channel[eventName].call(channel, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on main thread channel ${channelName}.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = channel[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on main thread channel ${channelName}.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._localChannels = new Map();\n        this._remoteChannels = new Map();\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => this._handleMessage(channel, method, args),\n            handleEvent: (channel, eventName, arg) => this._handleEvent(channel, eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(channel, method, args) {\n        if (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            return Promise.reject(new Error(`Missing channel ${channel} on worker thread`));\n        }\n        if (typeof requestHandler[method] !== 'function') {\n            return Promise.reject(new Error(`Missing method ${method} on worker thread channel ${channel}`));\n        }\n        try {\n            return Promise.resolve(requestHandler[method].apply(requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channel, eventName, arg) {\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            throw new Error(`Missing channel ${channel} on worker thread`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = requestHandler[eventName].call(requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    getChannel(channel) {\n        if (!this._remoteChannels.has(channel)) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel);\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    async initialize(workerId, loaderConfig, moduleId) {\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(this);\n            return;\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        if (isESM) {\n            const url = FileAccess.asBrowserUri(`${moduleId}.js`).toString(true);\n            return import(`${url}`).then((module) => {\n                this._requestHandler = module.create(this);\n                if (!this._requestHandler) {\n                    throw new Error(`No RequestHandler!`);\n                }\n            });\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globalThis.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globalThis.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(this);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve();\n            }, reject);\n        });\n    }\n}\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 9116;","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = undefined;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  let newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? (inArray ? index : keys[index]) : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  constructor(\n    message,\n    nodes,\n    source,\n    positions,\n    path,\n    originalError,\n    extensions,\n  ) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, undefined, source, [\n    position,\n  ]);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport let TokenKind;\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 5 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport let DirectiveLocation;\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { TokenKind } from './tokenKind.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameStart, isNameContinue } from './characterClasses.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Kind } from './kinds.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { TokenKind } from './tokenKind.mjs';\nimport { Source, isSource } from './source.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Lexer, isPunctuatorTokenKind } from './lexer.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    var _this$_options;\n\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (\n      ((_this$_options = this._options) === null || _this$_options === void 0\n        ? void 0\n        : _this$_options.allowLegacyFragmentVariables) === true\n    ) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    var _this$_options2;\n\n    if (\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0\n        ? void 0\n        : _this$_options2.noLocation) !== true\n    ) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nexport function keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n","/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport function mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n","export function toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nexport function keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n","const MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nexport function didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Returns the first argument it receives.\n */\nexport function identityFunc(x) {\n  return x;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import { naturalCompare } from './naturalCompare.mjs';\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport function suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { visit } from './visitor.mjs';\nimport { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameStart, isNameContinue } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { identityFunc } from '../jsutils/identityFunc.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped.mjs';\nimport { assertName, assertEnumValueName } from './assertName.mjs'; // Predicates & Assertions\n\n/**\n * These are all of the possible kinds of types.\n */\n\nexport function isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL type.`);\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Scalar type.`);\n  }\n\n  return type;\n}\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Object type.`);\n  }\n\n  return type;\n}\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Union type.`);\n  }\n\n  return type;\n}\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Enum type.`);\n  }\n\n  return type;\n}\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL List type.`);\n  }\n\n  return type;\n}\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Non-Null type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL input type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL output type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL leaf type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL abstract type.`);\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nexport class GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexport class GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      devAssert(\n        false,\n        `Expected ${inspect(ofType)} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL wrapping type.`);\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL nullable type.`);\n  }\n\n  return type;\n}\nexport function getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL named type.`);\n  }\n\n  return type;\n}\nexport function getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (value % 2 === 1) {\n *       return value;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${inspect(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        devAssert(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nexport class GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${inspect(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    devAssert(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${inspect(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nexport class GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    devAssert(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport class GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = keyMap(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        valueNode,\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        valueNode,\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    devAssert(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      devAssert(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${inspect(valueConfig)}.`,\n      );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nexport class GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { GraphQLScalarType } from './definition.mjs';\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nexport const GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexport const GRAPHQL_MIN_INT = -2147483648;\nexport const GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          inspect(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        valueNode,\n      );\n    }\n\n    return num;\n  },\n});\nexport const GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexport const GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          print(valueNode),\n        valueNode,\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { GraphQLID } from '../type/scalars.mjs';\nimport {\n  isLeafType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(`Cannot convert value to AST: ${inspect(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nexport function isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { print } from '../language/printer.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { astFromValue } from '../utilities/astFromValue.mjs';\nimport { GraphQLString, GraphQLBoolean } from './scalars.mjs';\nimport {\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLEnumType,\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isAbstractType,\n} from './definition.mjs';\nexport const __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__Directive)),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\nexport const __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__DirectiveLocation)),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\nexport const __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\nexport const __Type = new GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if (isScalarType(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if (isObjectType(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if (isInterfaceType(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if (isUnionType(type)) {\n          return TypeKind.UNION;\n        }\n\n        if (isEnumType(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if (isInputObjectType(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if (isListType(type)) {\n          return TypeKind.LIST;\n        }\n\n        if (isNonNullType(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false || invariant(false, `Unexpected type: \"${inspect(type)}\".`);\n      },\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new GraphQLList(new GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if (isAbstractType(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isEnumType(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isInputObjectType(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\nexport const __Field = new GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\nexport const __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = astFromValue(defaultValue, type);\n        return valueAST ? print(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\nexport const __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\nexport let TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nexport const __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport const SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new GraphQLNonNull(GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n","import {\n  isInterfaceType,\n  isObjectType,\n  isListType,\n  isNonNullType,\n  isAbstractType,\n} from '../type/definition.mjs';\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\n\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    isAbstractType(superType) &&\n    (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","export default class CharacterStream {\n    constructor(sourceText) {\n        this._start = 0;\n        this._pos = 0;\n        this.getStartOfToken = () => this._start;\n        this.getCurrentPosition = () => this._pos;\n        this.eol = () => this._sourceText.length === this._pos;\n        this.sol = () => this._pos === 0;\n        this.peek = () => {\n            return this._sourceText.charAt(this._pos) || null;\n        };\n        this.next = () => {\n            const char = this._sourceText.charAt(this._pos);\n            this._pos++;\n            return char;\n        };\n        this.eat = (pattern) => {\n            const isMatched = this._testNextCharacter(pattern);\n            if (isMatched) {\n                this._start = this._pos;\n                this._pos++;\n                return this._sourceText.charAt(this._pos - 1);\n            }\n            return undefined;\n        };\n        this.eatWhile = (match) => {\n            let isMatched = this._testNextCharacter(match);\n            let didEat = false;\n            if (isMatched) {\n                didEat = isMatched;\n                this._start = this._pos;\n            }\n            while (isMatched) {\n                this._pos++;\n                isMatched = this._testNextCharacter(match);\n                didEat = true;\n            }\n            return didEat;\n        };\n        this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n        this.skipToEnd = () => {\n            this._pos = this._sourceText.length;\n        };\n        this.skipTo = (position) => {\n            this._pos = position;\n        };\n        this.match = (pattern, consume = true, caseFold = false) => {\n            let token = null;\n            let match = null;\n            if (typeof pattern === 'string') {\n                const regex = new RegExp(pattern, caseFold ? 'i' : 'g');\n                match = regex.test(this._sourceText.slice(this._pos, this._pos + pattern.length));\n                token = pattern;\n            }\n            else if (pattern instanceof RegExp) {\n                match = this._sourceText.slice(this._pos).match(pattern);\n                token = match === null || match === void 0 ? void 0 : match[0];\n            }\n            if (match != null &&\n                (typeof pattern === 'string' ||\n                    (match instanceof Array &&\n                        this._sourceText.startsWith(match[0], this._pos)))) {\n                if (consume) {\n                    this._start = this._pos;\n                    if (token && token.length) {\n                        this._pos += token.length;\n                    }\n                }\n                return match;\n            }\n            return false;\n        };\n        this.backUp = (num) => {\n            this._pos -= num;\n        };\n        this.column = () => this._pos;\n        this.indentation = () => {\n            const match = this._sourceText.match(/\\s*/);\n            let indent = 0;\n            if (match && match.length !== 0) {\n                const whiteSpaces = match[0];\n                let pos = 0;\n                while (whiteSpaces.length > pos) {\n                    if (whiteSpaces.charCodeAt(pos) === 9) {\n                        indent += 2;\n                    }\n                    else {\n                        indent++;\n                    }\n                    pos++;\n                }\n            }\n            return indent;\n        };\n        this.current = () => this._sourceText.slice(this._start, this._pos);\n        this._sourceText = sourceText;\n    }\n    _testNextCharacter(pattern) {\n        const character = this._sourceText.charAt(this._pos);\n        let isMatched = false;\n        if (typeof pattern === 'string') {\n            isMatched = character === pattern;\n        }\n        else {\n            isMatched =\n                pattern instanceof RegExp\n                    ? pattern.test(character)\n                    : pattern(character);\n        }\n        return isMatched;\n    }\n}\n//# sourceMappingURL=CharacterStream.js.map","export function opt(ofRule) {\n    return { ofRule };\n}\nexport function list(ofRule, separator) {\n    return { ofRule, isList: true, separator };\n}\nexport function butNot(rule, exclusions) {\n    const ruleMatch = rule.match;\n    rule.match = token => {\n        let check = false;\n        if (ruleMatch) {\n            check = ruleMatch(token);\n        }\n        return (check &&\n            exclusions.every(exclusion => exclusion.match && !exclusion.match(token)));\n    };\n    return rule;\n}\nexport function t(kind, style) {\n    return { style, match: (token) => token.kind === kind };\n}\nexport function p(value, style) {\n    return {\n        style: style || 'punctuation',\n        match: (token) => token.kind === 'Punctuation' && token.value === value,\n    };\n}\n//# sourceMappingURL=RuleHelpers.js.map","import { opt, list, butNot, t, p } from './RuleHelpers';\nimport { Kind } from 'graphql';\nexport const isIgnored = (ch) => ch === ' ' ||\n    ch === '\\t' ||\n    ch === ',' ||\n    ch === '\\n' ||\n    ch === '\\r' ||\n    ch === '\\uFEFF' ||\n    ch === '\\u00A0';\nexport const LexRules = {\n    Name: /^[_A-Za-z][_0-9A-Za-z]*/,\n    Punctuation: /^(?:!|\\$|\\(|\\)|\\.\\.\\.|:|=|&|@|\\[|]|\\{|\\||\\})/,\n    Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n    String: /^(?:\"\"\"(?:\\\\\"\"\"|[^\"]|\"[^\"]|\"\"[^\"])*(?:\"\"\")?|\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?)/,\n    Comment: /^#.*/,\n};\nexport const ParseRules = {\n    Document: [list('Definition')],\n    Definition(token) {\n        switch (token.value) {\n            case '{':\n                return 'ShortQuery';\n            case 'query':\n                return 'Query';\n            case 'mutation':\n                return 'Mutation';\n            case 'subscription':\n                return 'Subscription';\n            case 'fragment':\n                return Kind.FRAGMENT_DEFINITION;\n            case 'schema':\n                return 'SchemaDef';\n            case 'scalar':\n                return 'ScalarDef';\n            case 'type':\n                return 'ObjectTypeDef';\n            case 'interface':\n                return 'InterfaceDef';\n            case 'union':\n                return 'UnionDef';\n            case 'enum':\n                return 'EnumDef';\n            case 'input':\n                return 'InputDef';\n            case 'extend':\n                return 'ExtendDef';\n            case 'directive':\n                return 'DirectiveDef';\n        }\n    },\n    ShortQuery: ['SelectionSet'],\n    Query: [\n        word('query'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Mutation: [\n        word('mutation'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Subscription: [\n        word('subscription'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    VariableDefinitions: [p('('), list('VariableDefinition'), p(')')],\n    VariableDefinition: ['Variable', p(':'), 'Type', opt('DefaultValue')],\n    Variable: [p('$', 'variable'), name('variable')],\n    DefaultValue: [p('='), 'Value'],\n    SelectionSet: [p('{'), list('Selection'), p('}')],\n    Selection(token, stream) {\n        return token.value === '...'\n            ? stream.match(/[\\s\\u00a0,]*(on\\b|@|{)/, false)\n                ? 'InlineFragment'\n                : 'FragmentSpread'\n            : stream.match(/[\\s\\u00a0,]*:/, false)\n                ? 'AliasedField'\n                : 'Field';\n    },\n    AliasedField: [\n        name('property'),\n        p(':'),\n        name('qualifier'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Field: [\n        name('property'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Arguments: [p('('), list('Argument'), p(')')],\n    Argument: [name('attribute'), p(':'), 'Value'],\n    FragmentSpread: [p('...'), name('def'), list('Directive')],\n    InlineFragment: [\n        p('...'),\n        opt('TypeCondition'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    FragmentDefinition: [\n        word('fragment'),\n        opt(butNot(name('def'), [word('on')])),\n        'TypeCondition',\n        list('Directive'),\n        'SelectionSet',\n    ],\n    TypeCondition: [word('on'), 'NamedType'],\n    Value(token) {\n        switch (token.kind) {\n            case 'Number':\n                return 'NumberValue';\n            case 'String':\n                return 'StringValue';\n            case 'Punctuation':\n                switch (token.value) {\n                    case '[':\n                        return 'ListValue';\n                    case '{':\n                        return 'ObjectValue';\n                    case '$':\n                        return 'Variable';\n                    case '&':\n                        return 'NamedType';\n                }\n                return null;\n            case 'Name':\n                switch (token.value) {\n                    case 'true':\n                    case 'false':\n                        return 'BooleanValue';\n                }\n                if (token.value === 'null') {\n                    return 'NullValue';\n                }\n                return 'EnumValue';\n        }\n    },\n    NumberValue: [t('Number', 'number')],\n    StringValue: [\n        {\n            style: 'string',\n            match: (token) => token.kind === 'String',\n            update(state, token) {\n                if (token.value.startsWith('\"\"\"')) {\n                    state.inBlockstring = !token.value.slice(3).endsWith('\"\"\"');\n                }\n            },\n        },\n    ],\n    BooleanValue: [t('Name', 'builtin')],\n    NullValue: [t('Name', 'keyword')],\n    EnumValue: [name('string-2')],\n    ListValue: [p('['), list('Value'), p(']')],\n    ObjectValue: [p('{'), list('ObjectField'), p('}')],\n    ObjectField: [name('attribute'), p(':'), 'Value'],\n    Type(token) {\n        return token.value === '[' ? 'ListType' : 'NonNullType';\n    },\n    ListType: [p('['), 'Type', p(']'), opt(p('!'))],\n    NonNullType: ['NamedType', opt(p('!'))],\n    NamedType: [type('atom')],\n    Directive: [p('@', 'meta'), name('meta'), opt('Arguments')],\n    DirectiveDef: [\n        word('directive'),\n        p('@', 'meta'),\n        name('meta'),\n        opt('ArgumentsDef'),\n        word('on'),\n        list('DirectiveLocation', p('|')),\n    ],\n    InterfaceDef: [\n        word('interface'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    Implements: [word('implements'), list('NamedType', p('&'))],\n    DirectiveLocation: [name('string-2')],\n    SchemaDef: [\n        word('schema'),\n        list('Directive'),\n        p('{'),\n        list('OperationTypeDef'),\n        p('}'),\n    ],\n    OperationTypeDef: [name('keyword'), p(':'), name('atom')],\n    ScalarDef: [word('scalar'), name('atom'), list('Directive')],\n    ObjectTypeDef: [\n        word('type'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    FieldDef: [\n        name('property'),\n        opt('ArgumentsDef'),\n        p(':'),\n        'Type',\n        list('Directive'),\n    ],\n    ArgumentsDef: [p('('), list('InputValueDef'), p(')')],\n    InputValueDef: [\n        name('attribute'),\n        p(':'),\n        'Type',\n        opt('DefaultValue'),\n        list('Directive'),\n    ],\n    UnionDef: [\n        word('union'),\n        name('atom'),\n        list('Directive'),\n        p('='),\n        list('UnionMember', p('|')),\n    ],\n    UnionMember: ['NamedType'],\n    EnumDef: [\n        word('enum'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('EnumValueDef'),\n        p('}'),\n    ],\n    EnumValueDef: [name('string-2'), list('Directive')],\n    InputDef: [\n        word('input'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('InputValueDef'),\n        p('}'),\n    ],\n    ExtendDef: [word('extend'), 'ExtensionDefinition'],\n    ExtensionDefinition(token) {\n        switch (token.value) {\n            case 'schema':\n                return Kind.SCHEMA_EXTENSION;\n            case 'scalar':\n                return Kind.SCALAR_TYPE_EXTENSION;\n            case 'type':\n                return Kind.OBJECT_TYPE_EXTENSION;\n            case 'interface':\n                return Kind.INTERFACE_TYPE_EXTENSION;\n            case 'union':\n                return Kind.UNION_TYPE_EXTENSION;\n            case 'enum':\n                return Kind.ENUM_TYPE_EXTENSION;\n            case 'input':\n                return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n        }\n    },\n    [Kind.SCHEMA_EXTENSION]: ['SchemaDef'],\n    [Kind.SCALAR_TYPE_EXTENSION]: ['ScalarDef'],\n    [Kind.OBJECT_TYPE_EXTENSION]: ['ObjectTypeDef'],\n    [Kind.INTERFACE_TYPE_EXTENSION]: ['InterfaceDef'],\n    [Kind.UNION_TYPE_EXTENSION]: ['UnionDef'],\n    [Kind.ENUM_TYPE_EXTENSION]: ['EnumDef'],\n    [Kind.INPUT_OBJECT_TYPE_EXTENSION]: ['InputDef'],\n};\nfunction word(value) {\n    return {\n        style: 'keyword',\n        match: (token) => token.kind === 'Name' && token.value === value,\n    };\n}\nfunction name(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            state.name = token.value;\n        },\n    };\n}\nfunction type(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            var _a;\n            if ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.prevState) {\n                state.name = token.value;\n                state.prevState.prevState.type = token.value;\n            }\n        },\n    };\n}\n//# sourceMappingURL=Rules.js.map","import { LexRules, ParseRules, isIgnored } from './Rules';\nimport { Kind } from 'graphql';\nexport default function onlineParser(options = {\n    eatWhitespace: stream => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: {},\n}) {\n    return {\n        startState() {\n            const initialState = {\n                level: 0,\n                step: 0,\n                name: null,\n                kind: null,\n                type: null,\n                rule: null,\n                needsSeparator: false,\n                prevState: null,\n            };\n            pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n            return initialState;\n        },\n        token(stream, state) {\n            return getToken(stream, state, options);\n        },\n    };\n}\nfunction getToken(stream, state, options) {\n    var _a;\n    if (state.inBlockstring) {\n        if (stream.match(/.*\"\"\"/)) {\n            state.inBlockstring = false;\n            return 'string';\n        }\n        stream.skipToEnd();\n        return 'string';\n    }\n    const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n    if (state.rule && state.rule.length === 0) {\n        popRule(state);\n    }\n    else if (state.needsAdvance) {\n        state.needsAdvance = false;\n        advanceRule(state, true);\n    }\n    if (stream.sol()) {\n        const tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n        state.indentLevel = Math.floor(stream.indentation() / tabSize);\n    }\n    if (eatWhitespace(stream)) {\n        return 'ws';\n    }\n    const token = lex(lexRules, stream);\n    if (!token) {\n        const matchedSomething = stream.match(/\\S+/);\n        if (!matchedSomething) {\n            stream.match(/\\s/);\n        }\n        pushRule(SpecialParseRules, state, 'Invalid');\n        return 'invalidchar';\n    }\n    if (token.kind === 'Comment') {\n        pushRule(SpecialParseRules, state, 'Comment');\n        return 'comment';\n    }\n    const backupState = assign({}, state);\n    if (token.kind === 'Punctuation') {\n        if (/^[{([]/.test(token.value)) {\n            if (state.indentLevel !== undefined) {\n                state.levels = (state.levels || []).concat(state.indentLevel + 1);\n            }\n        }\n        else if (/^[})\\]]/.test(token.value)) {\n            const levels = (state.levels = (state.levels || []).slice(0, -1));\n            if (state.indentLevel &&\n                levels.length > 0 &&\n                levels.at(-1) < state.indentLevel) {\n                state.indentLevel = levels.at(-1);\n            }\n        }\n    }\n    while (state.rule) {\n        let expected = typeof state.rule === 'function'\n            ? state.step === 0\n                ? state.rule(token, stream)\n                : null\n            : state.rule[state.step];\n        if (state.needsSeparator) {\n            expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n        }\n        if (expected) {\n            if (expected.ofRule) {\n                expected = expected.ofRule;\n            }\n            if (typeof expected === 'string') {\n                pushRule(parseRules, state, expected);\n                continue;\n            }\n            if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n                if (expected.update) {\n                    expected.update(state, token);\n                }\n                if (token.kind === 'Punctuation') {\n                    advanceRule(state, true);\n                }\n                else {\n                    state.needsAdvance = true;\n                }\n                return expected.style;\n            }\n        }\n        unsuccessful(state);\n    }\n    assign(state, backupState);\n    pushRule(SpecialParseRules, state, 'Invalid');\n    return 'invalidchar';\n}\nfunction assign(to, from) {\n    const keys = Object.keys(from);\n    for (let i = 0; i < keys.length; i++) {\n        to[keys[i]] = from[keys[i]];\n    }\n    return to;\n}\nconst SpecialParseRules = {\n    Invalid: [],\n    Comment: [],\n};\nfunction pushRule(rules, state, ruleKind) {\n    if (!rules[ruleKind]) {\n        throw new TypeError('Unknown rule: ' + ruleKind);\n    }\n    state.prevState = Object.assign({}, state);\n    state.kind = ruleKind;\n    state.name = null;\n    state.type = null;\n    state.rule = rules[ruleKind];\n    state.step = 0;\n    state.needsSeparator = false;\n}\nfunction popRule(state) {\n    if (!state.prevState) {\n        return;\n    }\n    state.kind = state.prevState.kind;\n    state.name = state.prevState.name;\n    state.type = state.prevState.type;\n    state.rule = state.prevState.rule;\n    state.step = state.prevState.step;\n    state.needsSeparator = state.prevState.needsSeparator;\n    state.prevState = state.prevState.prevState;\n}\nfunction advanceRule(state, successful) {\n    var _a;\n    if (isList(state) && state.rule) {\n        const step = state.rule[state.step];\n        if (step.separator) {\n            const { separator } = step;\n            state.needsSeparator = !state.needsSeparator;\n            if (!state.needsSeparator && separator.ofRule) {\n                return;\n            }\n        }\n        if (successful) {\n            return;\n        }\n    }\n    state.needsSeparator = false;\n    state.step++;\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n        popRule(state);\n        if (state.rule) {\n            if (isList(state)) {\n                if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n                    state.needsSeparator = !state.needsSeparator;\n                }\n            }\n            else {\n                state.needsSeparator = false;\n                state.step++;\n            }\n        }\n    }\n}\nfunction isList(state) {\n    const step = Array.isArray(state.rule) &&\n        typeof state.rule[state.step] !== 'string' &&\n        state.rule[state.step];\n    return step && step.isList;\n}\nfunction unsuccessful(state) {\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n        popRule(state);\n    }\n    if (state.rule) {\n        advanceRule(state, false);\n    }\n}\nfunction lex(lexRules, stream) {\n    const kinds = Object.keys(lexRules);\n    for (let i = 0; i < kinds.length; i++) {\n        const match = stream.match(lexRules[kinds[i]]);\n        if (match && match instanceof Array) {\n            return { kind: kinds[i], value: match[0] };\n        }\n    }\n}\n//# sourceMappingURL=onlineParser.js.map","import { CharacterStream, onlineParser, getTypeInfo, } from '.';\nimport { BREAK, Kind, parse, visit } from 'graphql';\nexport function runOnlineParser(queryText, callback) {\n    const lines = queryText.split('\\n');\n    const parser = onlineParser();\n    let state = parser.startState();\n    let style = '';\n    let stream = new CharacterStream('');\n    for (let i = 0; i < lines.length; i++) {\n        stream = new CharacterStream(lines[i]);\n        while (!stream.eol()) {\n            style = parser.token(stream, state);\n            const code = callback(stream, state, style, i);\n            if (code === 'BREAK') {\n                break;\n            }\n        }\n        callback(stream, state, style, i);\n        if (!state.kind) {\n            state = parser.startState();\n        }\n    }\n    return {\n        start: stream.getStartOfToken(),\n        end: stream.getCurrentPosition(),\n        string: stream.current(),\n        state,\n        style,\n    };\n}\nexport var GraphQLDocumentMode;\n(function (GraphQLDocumentMode) {\n    GraphQLDocumentMode[\"TYPE_SYSTEM\"] = \"TYPE_SYSTEM\";\n    GraphQLDocumentMode[\"EXECUTABLE\"] = \"EXECUTABLE\";\n    GraphQLDocumentMode[\"UNKNOWN\"] = \"UNKNOWN\";\n})(GraphQLDocumentMode || (GraphQLDocumentMode = {}));\nexport const TYPE_SYSTEM_KINDS = [\n    Kind.SCHEMA_DEFINITION,\n    Kind.OPERATION_TYPE_DEFINITION,\n    Kind.SCALAR_TYPE_DEFINITION,\n    Kind.OBJECT_TYPE_DEFINITION,\n    Kind.INTERFACE_TYPE_DEFINITION,\n    Kind.UNION_TYPE_DEFINITION,\n    Kind.ENUM_TYPE_DEFINITION,\n    Kind.INPUT_OBJECT_TYPE_DEFINITION,\n    Kind.DIRECTIVE_DEFINITION,\n    Kind.SCHEMA_EXTENSION,\n    Kind.SCALAR_TYPE_EXTENSION,\n    Kind.OBJECT_TYPE_EXTENSION,\n    Kind.INTERFACE_TYPE_EXTENSION,\n    Kind.UNION_TYPE_EXTENSION,\n    Kind.ENUM_TYPE_EXTENSION,\n    Kind.INPUT_OBJECT_TYPE_EXTENSION,\n];\nconst getParsedMode = (sdl) => {\n    let mode = GraphQLDocumentMode.UNKNOWN;\n    if (sdl) {\n        try {\n            visit(parse(sdl), {\n                enter(node) {\n                    if (node.kind === 'Document') {\n                        mode = GraphQLDocumentMode.EXECUTABLE;\n                        return;\n                    }\n                    if (TYPE_SYSTEM_KINDS.includes(node.kind)) {\n                        mode = GraphQLDocumentMode.TYPE_SYSTEM;\n                        return BREAK;\n                    }\n                    return false;\n                },\n            });\n        }\n        catch (_a) {\n            return mode;\n        }\n    }\n    return mode;\n};\nexport function getDocumentMode(documentText, uri) {\n    if (uri === null || uri === void 0 ? void 0 : uri.endsWith('.graphqls')) {\n        return GraphQLDocumentMode.TYPE_SYSTEM;\n    }\n    return getParsedMode(documentText);\n}\nexport function getTokenAtPosition(queryText, cursor, offset = 0) {\n    let styleAtCursor = null;\n    let stateAtCursor = null;\n    let stringAtCursor = null;\n    const token = runOnlineParser(queryText, (stream, state, style, index) => {\n        if (index !== cursor.line ||\n            stream.getCurrentPosition() + offset < cursor.character + 1) {\n            return;\n        }\n        styleAtCursor = style;\n        stateAtCursor = Object.assign({}, state);\n        stringAtCursor = stream.current();\n        return 'BREAK';\n    });\n    return {\n        start: token.start,\n        end: token.end,\n        string: stringAtCursor || token.string,\n        state: stateAtCursor || token.state,\n        style: styleAtCursor || token.style,\n    };\n}\nexport function getContextAtPosition(queryText, cursor, schema, contextToken, options) {\n    const token = contextToken || getTokenAtPosition(queryText, cursor, 1);\n    if (!token) {\n        return null;\n    }\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    if (!state) {\n        return null;\n    }\n    const typeInfo = getTypeInfo(schema, token.state);\n    const mode = (options === null || options === void 0 ? void 0 : options.mode) || getDocumentMode(queryText, options === null || options === void 0 ? void 0 : options.uri);\n    return {\n        token,\n        state,\n        typeInfo,\n        mode,\n    };\n}\n//# sourceMappingURL=api.js.map","import { GraphQLInterfaceType, GraphQLObjectType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, getNamedType, getNullableType, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, isCompositeType, } from 'graphql';\nimport { RuleKinds } from '.';\nexport function getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if ('getFields' in type) {\n        return type.getFields()[fieldName];\n    }\n    return null;\n}\nexport function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\nexport function getDefinitionState(tokenState) {\n    let definitionState;\n    forEachState(tokenState, (state) => {\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n            case 'Mutation':\n            case 'Subscription':\n            case 'FragmentDefinition':\n                definitionState = state;\n                break;\n        }\n    });\n    return definitionState;\n}\nexport function getTypeInfo(schema, tokenState) {\n    let argDef;\n    let argDefs;\n    let directiveDef;\n    let enumValue;\n    let fieldDef;\n    let inputType;\n    let objectTypeDef;\n    let objectFieldDefs;\n    let parentType;\n    let type;\n    let interfaceDef;\n    forEachState(tokenState, state => {\n        var _a;\n        switch (state.kind) {\n            case RuleKinds.QUERY:\n            case 'ShortQuery':\n                type = schema.getQueryType();\n                break;\n            case RuleKinds.MUTATION:\n                type = schema.getMutationType();\n                break;\n            case RuleKinds.SUBSCRIPTION:\n                type = schema.getSubscriptionType();\n                break;\n            case RuleKinds.INLINE_FRAGMENT:\n            case RuleKinds.FRAGMENT_DEFINITION:\n                if (state.type) {\n                    type = schema.getType(state.type);\n                }\n                break;\n            case RuleKinds.FIELD:\n            case RuleKinds.ALIASED_FIELD: {\n                if (!type || !state.name) {\n                    fieldDef = null;\n                }\n                else {\n                    fieldDef = parentType\n                        ? getFieldDef(schema, parentType, state.name)\n                        : null;\n                    type = fieldDef ? fieldDef.type : null;\n                }\n                break;\n            }\n            case RuleKinds.SELECTION_SET:\n                parentType = getNamedType(type);\n                break;\n            case RuleKinds.DIRECTIVE:\n                directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case RuleKinds.INTERFACE_DEF:\n                if (state.name) {\n                    objectTypeDef = null;\n                    interfaceDef = new GraphQLInterfaceType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.OBJECT_TYPE_DEF:\n                if (state.name) {\n                    interfaceDef = null;\n                    objectTypeDef = new GraphQLObjectType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.ARGUMENTS: {\n                if (state.prevState) {\n                    switch (state.prevState.kind) {\n                        case RuleKinds.FIELD:\n                            argDefs = fieldDef && fieldDef.args;\n                            break;\n                        case RuleKinds.DIRECTIVE:\n                            argDefs =\n                                directiveDef && directiveDef.args;\n                            break;\n                        case RuleKinds.ALIASED_FIELD: {\n                            const name = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.name;\n                            if (!name) {\n                                argDefs = null;\n                                break;\n                            }\n                            const field = parentType\n                                ? getFieldDef(schema, parentType, name)\n                                : null;\n                            if (!field) {\n                                argDefs = null;\n                                break;\n                            }\n                            argDefs = field.args;\n                            break;\n                        }\n                        default:\n                            argDefs = null;\n                            break;\n                    }\n                }\n                else {\n                    argDefs = null;\n                }\n                break;\n            }\n            case RuleKinds.ARGUMENT:\n                if (argDefs) {\n                    for (let i = 0; i < argDefs.length; i++) {\n                        if (argDefs[i].name === state.name) {\n                            argDef = argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                inputType = argDef === null || argDef === void 0 ? void 0 : argDef.type;\n                break;\n            case RuleKinds.VARIABLE_DEFINITION:\n            case RuleKinds.VARIABLE:\n                type = inputType;\n                break;\n            case RuleKinds.ENUM_VALUE:\n                const enumType = getNamedType(inputType);\n                enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? enumType\n                            .getValues()\n                            .find((val) => val.value === state.name)\n                        : null;\n                break;\n            case RuleKinds.LIST_VALUE:\n                const nullableType = getNullableType(inputType);\n                inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case RuleKinds.OBJECT_VALUE:\n                const objectType = getNamedType(inputType);\n                objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case RuleKinds.OBJECT_FIELD:\n                const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n                inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                fieldDef = objectField;\n                type = fieldDef ? fieldDef.type : null;\n                break;\n            case RuleKinds.NAMED_TYPE:\n                if (state.name) {\n                    type = schema.getType(state.name);\n                }\n                break;\n        }\n    });\n    return {\n        argDef,\n        argDefs,\n        directiveDef,\n        enumValue,\n        fieldDef,\n        inputType,\n        objectFieldDefs,\n        parentType,\n        type,\n        interfaceDef,\n        objectTypeDef,\n    };\n}\n//# sourceMappingURL=getTypeInfo.js.map","import { Kind } from 'graphql';\nexport const AdditionalRuleKinds = {\n    ALIASED_FIELD: 'AliasedField',\n    ARGUMENTS: 'Arguments',\n    SHORT_QUERY: 'ShortQuery',\n    QUERY: 'Query',\n    MUTATION: 'Mutation',\n    SUBSCRIPTION: 'Subscription',\n    TYPE_CONDITION: 'TypeCondition',\n    INVALID: 'Invalid',\n    COMMENT: 'Comment',\n    SCHEMA_DEF: 'SchemaDef',\n    SCALAR_DEF: 'ScalarDef',\n    OBJECT_TYPE_DEF: 'ObjectTypeDef',\n    OBJECT_VALUE: 'ObjectValue',\n    LIST_VALUE: 'ListValue',\n    INTERFACE_DEF: 'InterfaceDef',\n    UNION_DEF: 'UnionDef',\n    ENUM_DEF: 'EnumDef',\n    ENUM_VALUE: 'EnumValue',\n    FIELD_DEF: 'FieldDef',\n    INPUT_DEF: 'InputDef',\n    INPUT_VALUE_DEF: 'InputValueDef',\n    ARGUMENTS_DEF: 'ArgumentsDef',\n    EXTEND_DEF: 'ExtendDef',\n    EXTENSION_DEFINITION: 'ExtensionDefinition',\n    DIRECTIVE_DEF: 'DirectiveDef',\n    IMPLEMENTS: 'Implements',\n    VARIABLE_DEFINITIONS: 'VariableDefinitions',\n    TYPE: 'Type',\n    VARIABLE: 'Variable',\n};\nexport const RuleKinds = Object.assign(Object.assign({}, Kind), AdditionalRuleKinds);\n//# sourceMappingURL=types.js.map","export { InsertTextFormat } from 'vscode-languageserver-types';\nexport { GraphQLDocumentMode } from './parser';\nexport const FileChangeTypeKind = {\n    Created: 1,\n    Changed: 2,\n    Deleted: 3,\n};\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n//# sourceMappingURL=types.js.map","import { isListType, isObjectType, isInputObjectType, getNamedType, isAbstractType, } from 'graphql';\nexport function objectValues(object) {\n    const keys = Object.keys(object);\n    const len = keys.length;\n    const values = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        values[i] = object[keys[i]];\n    }\n    return values;\n}\nexport function hintList(token, list) {\n    return filterAndSortList(list, normalizeText(token.string));\n}\nfunction filterAndSortList(list, text) {\n    if (!text ||\n        text.trim() === '' ||\n        text.trim() === ':' ||\n        text.trim() === '{') {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.label), text),\n        entry,\n    }));\n    return filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated)\n        .sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.label.length - b.entry.label.length)\n        .map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\nconst insertSuffix = (n) => ` {\\n   $${n !== null && n !== void 0 ? n : 1}\\n}`;\nexport const getInsertText = (prefix, type, fallback) => {\n    if (!type) {\n        return fallback !== null && fallback !== void 0 ? fallback : prefix;\n    }\n    const namedType = getNamedType(type);\n    if (isObjectType(namedType) ||\n        isInputObjectType(namedType) ||\n        isListType(namedType) ||\n        isAbstractType(namedType)) {\n        return prefix + insertSuffix();\n    }\n    return fallback !== null && fallback !== void 0 ? fallback : prefix;\n};\nexport const getInputInsertText = (prefix, type, fallback) => {\n    if (isListType(type)) {\n        const baseType = getNamedType(type.ofType);\n        return prefix + `[${getInsertText('', baseType, '$1')}]`;\n    }\n    return getInsertText(prefix, type, fallback);\n};\nexport const getFieldInsertText = (field) => {\n    const requiredArgs = field.args.filter(arg => arg.type.toString().endsWith('!'));\n    if (!requiredArgs.length) {\n        return;\n    }\n    return (field.name +\n        `(${requiredArgs.map((arg, i) => `${arg.name}: $${i + 1}`)}) ${getInsertText('', field.type, '\\n')}`);\n};\n//# sourceMappingURL=autocompleteUtils.js.map","import { isInterfaceType, GraphQLInterfaceType, GraphQLObjectType, Kind, DirectiveLocation, isScalarType, isObjectType, isUnionType, isEnumType, isInputObjectType, isOutputType, GraphQLBoolean, GraphQLEnumType, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, assertAbstractType, doTypesOverlap, getNamedType, isAbstractType, isCompositeType, isInputType, visit, parse, } from 'graphql';\nimport { CompletionItemKind, InsertTextFormat, } from '../types';\nimport { getTypeInfo, runOnlineParser, RuleKinds, getContextAtPosition, getDefinitionState, GraphQLDocumentMode, } from '../parser';\nimport { hintList, objectValues, getInputInsertText, getFieldInsertText, getInsertText, } from './autocompleteUtils';\nimport { InsertTextMode } from 'vscode-languageserver-types';\nexport { runOnlineParser, getTypeInfo };\nexport const SuggestionCommand = {\n    command: 'editor.action.triggerSuggest',\n    title: 'Suggestions',\n};\nconst collectFragmentDefs = (op) => {\n    const externalFragments = [];\n    if (op) {\n        try {\n            visit(parse(op), {\n                FragmentDefinition(def) {\n                    externalFragments.push(def);\n                },\n            });\n        }\n        catch (_a) {\n            return [];\n        }\n    }\n    return externalFragments;\n};\nexport function getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {\n    var _a;\n    const opts = Object.assign(Object.assign({}, options), { schema });\n    const context = getContextAtPosition(queryText, cursor, schema, contextToken, options);\n    if (!context) {\n        return [];\n    }\n    const { state, typeInfo, mode, token } = context;\n    const { kind, step, prevState } = state;\n    if (kind === RuleKinds.DOCUMENT) {\n        if (mode === GraphQLDocumentMode.TYPE_SYSTEM) {\n            return getSuggestionsForTypeSystemDefinitions(token);\n        }\n        if (mode === GraphQLDocumentMode.EXECUTABLE) {\n            return getSuggestionsForExecutableDefinitions(token);\n        }\n        return getSuggestionsForUnknownDocumentMode(token);\n    }\n    if (kind === RuleKinds.EXTEND_DEF) {\n        return getSuggestionsForExtensionDefinitions(token);\n    }\n    if (((_a = prevState === null || prevState === void 0 ? void 0 : prevState.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.EXTENSION_DEFINITION &&\n        state.name) {\n        return hintList(token, []);\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.SCALAR_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(isScalarType)\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.OBJECT_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(type => isObjectType(type) && !type.name.startsWith('__'))\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.INTERFACE_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(isInterfaceType)\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.UNION_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(isUnionType)\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.ENUM_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(type => isEnumType(type) && !type.name.startsWith('__'))\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if ((prevState === null || prevState === void 0 ? void 0 : prevState.kind) === Kind.INPUT_OBJECT_TYPE_EXTENSION) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(isInputObjectType)\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    if (kind === RuleKinds.IMPLEMENTS ||\n        (kind === RuleKinds.NAMED_TYPE && (prevState === null || prevState === void 0 ? void 0 : prevState.kind) === RuleKinds.IMPLEMENTS)) {\n        return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);\n    }\n    if (kind === RuleKinds.SELECTION_SET ||\n        kind === RuleKinds.FIELD ||\n        kind === RuleKinds.ALIASED_FIELD) {\n        return getSuggestionsForFieldNames(token, typeInfo, opts);\n    }\n    if (kind === RuleKinds.ARGUMENTS ||\n        (kind === RuleKinds.ARGUMENT && step === 0)) {\n        const { argDefs } = typeInfo;\n        if (argDefs) {\n            return hintList(token, argDefs.map((argDef) => {\n                var _a;\n                return ({\n                    label: argDef.name,\n                    insertText: getInputInsertText(argDef.name + ': ', argDef.type),\n                    insertTextMode: InsertTextMode.adjustIndentation,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    command: SuggestionCommand,\n                    labelDetails: {\n                        detail: ' ' + String(argDef.type),\n                    },\n                    documentation: (_a = argDef.description) !== null && _a !== void 0 ? _a : undefined,\n                    kind: CompletionItemKind.Variable,\n                    type: argDef.type,\n                });\n            }));\n        }\n    }\n    if ((kind === RuleKinds.OBJECT_VALUE ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 0)) &&\n        typeInfo.objectFieldDefs) {\n        const objectFields = objectValues(typeInfo.objectFieldDefs);\n        const completionKind = kind === RuleKinds.OBJECT_VALUE\n            ? CompletionItemKind.Value\n            : CompletionItemKind.Field;\n        return hintList(token, objectFields.map(field => {\n            var _a;\n            return ({\n                label: field.name,\n                detail: String(field.type),\n                documentation: (_a = field === null || field === void 0 ? void 0 : field.description) !== null && _a !== void 0 ? _a : undefined,\n                kind: completionKind,\n                type: field.type,\n                insertText: getInputInsertText(field.name + ': ', field.type),\n                insertTextMode: InsertTextMode.adjustIndentation,\n                insertTextFormat: InsertTextFormat.Snippet,\n                command: SuggestionCommand,\n            });\n        }));\n    }\n    if (kind === RuleKinds.ENUM_VALUE ||\n        (kind === RuleKinds.LIST_VALUE && step === 1) ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 2) ||\n        (kind === RuleKinds.ARGUMENT && step === 2)) {\n        return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n    }\n    if (kind === RuleKinds.VARIABLE && step === 1) {\n        const namedInputType = getNamedType(typeInfo.inputType);\n        const variableDefinitions = getVariableCompletions(queryText, schema, token);\n        return hintList(token, variableDefinitions.filter(v => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));\n    }\n    if ((kind === RuleKinds.TYPE_CONDITION && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            prevState != null &&\n            prevState.kind === RuleKinds.TYPE_CONDITION)) {\n        return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, kind);\n    }\n    if (kind === RuleKinds.FRAGMENT_SPREAD && step === 1) {\n        return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs)\n            ? fragmentDefs\n            : collectFragmentDefs(fragmentDefs));\n    }\n    const unwrappedState = unwrapType(state);\n    if (unwrappedState.kind === RuleKinds.FIELD_DEF) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(type => isOutputType(type) && !type.name.startsWith('__'))\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n            insertText: (options === null || options === void 0 ? void 0 : options.fillLeafsOnComplete)\n                ? type.name + '\\n'\n                : type.name,\n            insertTextMode: InsertTextMode.adjustIndentation,\n        })));\n    }\n    if (unwrappedState.kind === RuleKinds.INPUT_VALUE_DEF && step === 2) {\n        return hintList(token, Object.values(schema.getTypeMap())\n            .filter(type => isInputType(type) && !type.name.startsWith('__'))\n            .map(type => ({\n            label: type.name,\n            kind: CompletionItemKind.Function,\n            insertText: (options === null || options === void 0 ? void 0 : options.fillLeafsOnComplete)\n                ? type.name + '\\n$1'\n                : type.name,\n            insertTextMode: InsertTextMode.adjustIndentation,\n            insertTextFormat: InsertTextFormat.Snippet,\n        })));\n    }\n    if ((kind === RuleKinds.VARIABLE_DEFINITION && step === 2) ||\n        (kind === RuleKinds.LIST_TYPE && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            prevState &&\n            (prevState.kind === RuleKinds.VARIABLE_DEFINITION ||\n                prevState.kind === RuleKinds.LIST_TYPE ||\n                prevState.kind === RuleKinds.NON_NULL_TYPE))) {\n        return getSuggestionsForVariableDefinition(token, schema, kind);\n    }\n    if (kind === RuleKinds.DIRECTIVE) {\n        return getSuggestionsForDirective(token, state, schema, kind);\n    }\n    if (kind === RuleKinds.DIRECTIVE_DEF) {\n        return getSuggestionsForDirectiveArguments(token, state, schema, kind);\n    }\n    return [];\n}\nconst typeSystemCompletionItems = [\n    { label: 'type', kind: CompletionItemKind.Function },\n    { label: 'interface', kind: CompletionItemKind.Function },\n    { label: 'union', kind: CompletionItemKind.Function },\n    { label: 'input', kind: CompletionItemKind.Function },\n    { label: 'scalar', kind: CompletionItemKind.Function },\n    { label: 'schema', kind: CompletionItemKind.Function },\n];\nconst executableCompletionItems = [\n    { label: 'query', kind: CompletionItemKind.Function },\n    { label: 'mutation', kind: CompletionItemKind.Function },\n    { label: 'subscription', kind: CompletionItemKind.Function },\n    { label: 'fragment', kind: CompletionItemKind.Function },\n    { label: '{', kind: CompletionItemKind.Constructor },\n];\nfunction getSuggestionsForTypeSystemDefinitions(token) {\n    return hintList(token, [\n        { label: 'extend', kind: CompletionItemKind.Function },\n        ...typeSystemCompletionItems,\n    ]);\n}\nfunction getSuggestionsForExecutableDefinitions(token) {\n    return hintList(token, executableCompletionItems);\n}\nfunction getSuggestionsForUnknownDocumentMode(token) {\n    return hintList(token, [\n        { label: 'extend', kind: CompletionItemKind.Function },\n        ...executableCompletionItems,\n        ...typeSystemCompletionItems,\n    ]);\n}\nfunction getSuggestionsForExtensionDefinitions(token) {\n    return hintList(token, typeSystemCompletionItems);\n}\nfunction getSuggestionsForFieldNames(token, typeInfo, options) {\n    var _a;\n    if (typeInfo.parentType) {\n        const { parentType } = typeInfo;\n        let fields = [];\n        if ('getFields' in parentType) {\n            fields = objectValues(parentType.getFields());\n        }\n        if (isCompositeType(parentType)) {\n            fields.push(TypeNameMetaFieldDef);\n        }\n        if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {\n            fields.push(SchemaMetaFieldDef, TypeMetaFieldDef);\n        }\n        return hintList(token, fields.map((field, index) => {\n            var _a;\n            const suggestion = {\n                sortText: String(index) + field.name,\n                label: field.name,\n                detail: String(field.type),\n                documentation: (_a = field.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(field.deprecationReason),\n                isDeprecated: Boolean(field.deprecationReason),\n                deprecationReason: field.deprecationReason,\n                kind: CompletionItemKind.Field,\n                labelDetails: {\n                    detail: ' ' + field.type.toString(),\n                },\n                type: field.type,\n            };\n            if (options === null || options === void 0 ? void 0 : options.fillLeafsOnComplete) {\n                suggestion.insertText = getFieldInsertText(field);\n                if (!suggestion.insertText) {\n                    suggestion.insertText = getInsertText(field.name, field.type, field.name + (token.state.needsAdvance ? '' : '\\n'));\n                }\n                if (suggestion.insertText) {\n                    suggestion.insertTextFormat = InsertTextFormat.Snippet;\n                    suggestion.insertTextMode = InsertTextMode.adjustIndentation;\n                    suggestion.command = SuggestionCommand;\n                }\n            }\n            return suggestion;\n        }));\n    }\n    return [];\n}\nfunction getSuggestionsForInputValues(token, typeInfo, queryText, schema) {\n    const namedInputType = getNamedType(typeInfo.inputType);\n    const queryVariables = getVariableCompletions(queryText, schema, token).filter(v => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name));\n    if (namedInputType instanceof GraphQLEnumType) {\n        const values = namedInputType.getValues();\n        return hintList(token, values\n            .map((value) => {\n            var _a;\n            return ({\n                label: value.name,\n                detail: String(namedInputType),\n                documentation: (_a = value.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(value.deprecationReason),\n                isDeprecated: Boolean(value.deprecationReason),\n                deprecationReason: value.deprecationReason,\n                kind: CompletionItemKind.EnumMember,\n                type: namedInputType,\n            });\n        })\n            .concat(queryVariables));\n    }\n    if (namedInputType === GraphQLBoolean) {\n        return hintList(token, queryVariables.concat([\n            {\n                label: 'true',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not false.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n            {\n                label: 'false',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not true.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n        ]));\n    }\n    return queryVariables;\n}\nfunction getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {\n    if (tokenState.needsSeparator) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const schemaInterfaces = objectValues(typeMap).filter(isInterfaceType);\n    const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n    const inlineInterfaces = new Set();\n    runOnlineParser(documentText, (_, state) => {\n        var _a, _b, _c, _d, _e;\n        if (state.name) {\n            if (state.kind === RuleKinds.INTERFACE_DEF &&\n                !schemaInterfaceNames.includes(state.name)) {\n                inlineInterfaces.add(state.name);\n            }\n            if (state.kind === RuleKinds.NAMED_TYPE &&\n                ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.IMPLEMENTS) {\n                if (typeInfo.interfaceDef) {\n                    const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();\n                    typeInfo.interfaceDef = new GraphQLInterfaceType(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [\n                            ...interfaceConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n                else if (typeInfo.objectTypeDef) {\n                    const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();\n                    typeInfo.objectTypeDef = new GraphQLObjectType(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [\n                            ...objectTypeConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n            }\n        }\n    });\n    const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n    const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];\n    const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n    const possibleInterfaces = schemaInterfaces\n        .concat([...inlineInterfaces].map(name => ({ name })))\n        .filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) &&\n        !siblingInterfaceNames.includes(name));\n    return hintList(token, possibleInterfaces.map(type => {\n        const result = {\n            label: type.name,\n            kind: CompletionItemKind.Interface,\n            type,\n        };\n        if (type === null || type === void 0 ? void 0 : type.description) {\n            result.documentation = type.description;\n        }\n        return result;\n    }));\n}\nfunction getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {\n    let possibleTypes;\n    if (typeInfo.parentType) {\n        if (isAbstractType(typeInfo.parentType)) {\n            const abstractType = assertAbstractType(typeInfo.parentType);\n            const possibleObjTypes = schema.getPossibleTypes(abstractType);\n            const possibleIfaceMap = Object.create(null);\n            for (const type of possibleObjTypes) {\n                for (const iface of type.getInterfaces()) {\n                    possibleIfaceMap[iface.name] = iface;\n                }\n            }\n            possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n        }\n        else {\n            possibleTypes = [typeInfo.parentType];\n        }\n    }\n    else {\n        const typeMap = schema.getTypeMap();\n        possibleTypes = objectValues(typeMap).filter(type => isCompositeType(type) && !type.name.startsWith('__'));\n    }\n    return hintList(token, possibleTypes.map(type => {\n        const namedType = getNamedType(type);\n        return {\n            label: String(type),\n            documentation: (namedType === null || namedType === void 0 ? void 0 : namedType.description) || '',\n            kind: CompletionItemKind.Field,\n        };\n    }));\n}\nfunction getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {\n    if (!queryText) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const defState = getDefinitionState(token.state);\n    const fragments = getFragmentDefinitions(queryText);\n    if (fragmentDefs && fragmentDefs.length > 0) {\n        fragments.push(...fragmentDefs);\n    }\n    const relevantFrags = fragments.filter(frag => typeMap[frag.typeCondition.name.value] &&\n        !(defState &&\n            defState.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            defState.name === frag.name.value) &&\n        isCompositeType(typeInfo.parentType) &&\n        isCompositeType(typeMap[frag.typeCondition.name.value]) &&\n        doTypesOverlap(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));\n    return hintList(token, relevantFrags.map(frag => ({\n        label: frag.name.value,\n        detail: String(typeMap[frag.typeCondition.name.value]),\n        documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n        labelDetails: {\n            detail: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n        },\n        kind: CompletionItemKind.Field,\n        type: typeMap[frag.typeCondition.name.value],\n    })));\n}\nconst getParentDefinition = (state, kind) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {\n        return state.prevState;\n    }\n    if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {\n        return state.prevState.prevState;\n    }\n    if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {\n        return state.prevState.prevState.prevState;\n    }\n    if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {\n        return state.prevState.prevState.prevState.prevState;\n    }\n};\nexport function getVariableCompletions(queryText, schema, token) {\n    let variableName = null;\n    let variableType;\n    const definitions = Object.create({});\n    runOnlineParser(queryText, (_, state) => {\n        var _a;\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.VARIABLE && state.name) {\n            variableName = state.name;\n        }\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.NAMED_TYPE && variableName) {\n            const parentDefinition = getParentDefinition(state, RuleKinds.TYPE);\n            if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {\n                variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);\n            }\n        }\n        if (variableName && variableType && !definitions[variableName]) {\n            const replaceString = token.string === '$' || ((_a = token === null || token === void 0 ? void 0 : token.state) === null || _a === void 0 ? void 0 : _a.kind) === 'Variable'\n                ? variableName\n                : '$' + variableName;\n            definitions[variableName] = {\n                detail: variableType.toString(),\n                insertText: replaceString,\n                label: '$' + variableName,\n                rawInsert: replaceString,\n                type: variableType,\n                kind: CompletionItemKind.Variable,\n            };\n            variableName = null;\n            variableType = null;\n        }\n    });\n    return objectValues(definitions);\n}\nexport function getFragmentDefinitions(queryText) {\n    const fragmentDefs = [];\n    runOnlineParser(queryText, (_, state) => {\n        if (state.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            state.name &&\n            state.type) {\n            fragmentDefs.push({\n                kind: RuleKinds.FRAGMENT_DEFINITION,\n                name: {\n                    kind: Kind.NAME,\n                    value: state.name,\n                },\n                selectionSet: {\n                    kind: RuleKinds.SELECTION_SET,\n                    selections: [],\n                },\n                typeCondition: {\n                    kind: RuleKinds.NAMED_TYPE,\n                    name: {\n                        kind: Kind.NAME,\n                        value: state.type,\n                    },\n                },\n            });\n        }\n    });\n    return fragmentDefs;\n}\nfunction getSuggestionsForVariableDefinition(token, schema, _kind) {\n    const inputTypeMap = schema.getTypeMap();\n    const inputTypes = objectValues(inputTypeMap).filter(isInputType);\n    return hintList(token, inputTypes.map((type) => ({\n        label: type.name,\n        documentation: (type === null || type === void 0 ? void 0 : type.description) || '',\n        kind: CompletionItemKind.Variable,\n    })));\n}\nfunction getSuggestionsForDirective(token, state, schema, _kind) {\n    var _a;\n    if ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) {\n        const directives = schema\n            .getDirectives()\n            .filter(directive => canUseDirective(state.prevState, directive));\n        return hintList(token, directives.map(directive => ({\n            label: directive.name,\n            documentation: (directive === null || directive === void 0 ? void 0 : directive.description) || '',\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    return [];\n}\nfunction getSuggestionsForDirectiveArguments(token, state, schema, _kind) {\n    const directive = schema.getDirectives().find(d => d.name === state.name);\n    return hintList(token, (directive === null || directive === void 0 ? void 0 : directive.args.map(arg => ({\n        label: arg.name,\n        documentation: arg.description || '',\n        kind: CompletionItemKind.Field,\n    }))) || []);\n}\nexport function canUseDirective(state, directive) {\n    if (!(state === null || state === void 0 ? void 0 : state.kind)) {\n        return false;\n    }\n    const { kind, prevState } = state;\n    const { locations } = directive;\n    switch (kind) {\n        case RuleKinds.QUERY:\n            return locations.includes(DirectiveLocation.QUERY);\n        case RuleKinds.MUTATION:\n            return locations.includes(DirectiveLocation.MUTATION);\n        case RuleKinds.SUBSCRIPTION:\n            return locations.includes(DirectiveLocation.SUBSCRIPTION);\n        case RuleKinds.FIELD:\n        case RuleKinds.ALIASED_FIELD:\n            return locations.includes(DirectiveLocation.FIELD);\n        case RuleKinds.FRAGMENT_DEFINITION:\n            return locations.includes(DirectiveLocation.FRAGMENT_DEFINITION);\n        case RuleKinds.FRAGMENT_SPREAD:\n            return locations.includes(DirectiveLocation.FRAGMENT_SPREAD);\n        case RuleKinds.INLINE_FRAGMENT:\n            return locations.includes(DirectiveLocation.INLINE_FRAGMENT);\n        case RuleKinds.SCHEMA_DEF:\n            return locations.includes(DirectiveLocation.SCHEMA);\n        case RuleKinds.SCALAR_DEF:\n            return locations.includes(DirectiveLocation.SCALAR);\n        case RuleKinds.OBJECT_TYPE_DEF:\n            return locations.includes(DirectiveLocation.OBJECT);\n        case RuleKinds.FIELD_DEF:\n            return locations.includes(DirectiveLocation.FIELD_DEFINITION);\n        case RuleKinds.INTERFACE_DEF:\n            return locations.includes(DirectiveLocation.INTERFACE);\n        case RuleKinds.UNION_DEF:\n            return locations.includes(DirectiveLocation.UNION);\n        case RuleKinds.ENUM_DEF:\n            return locations.includes(DirectiveLocation.ENUM);\n        case RuleKinds.ENUM_VALUE:\n            return locations.includes(DirectiveLocation.ENUM_VALUE);\n        case RuleKinds.INPUT_DEF:\n            return locations.includes(DirectiveLocation.INPUT_OBJECT);\n        case RuleKinds.INPUT_VALUE_DEF:\n            const prevStateKind = prevState === null || prevState === void 0 ? void 0 : prevState.kind;\n            switch (prevStateKind) {\n                case RuleKinds.ARGUMENTS_DEF:\n                    return locations.includes(DirectiveLocation.ARGUMENT_DEFINITION);\n                case RuleKinds.INPUT_DEF:\n                    return locations.includes(DirectiveLocation.INPUT_FIELD_DEFINITION);\n            }\n    }\n    return false;\n}\nfunction unwrapType(state) {\n    if (state.prevState &&\n        state.kind &&\n        [\n            RuleKinds.NAMED_TYPE,\n            RuleKinds.LIST_TYPE,\n            RuleKinds.TYPE,\n            RuleKinds.NON_NULL_TYPE,\n        ].includes(state.kind)) {\n        return unwrapType(state.prevState);\n    }\n    return state;\n}\n//# sourceMappingURL=getAutocompleteSuggestions.js.map","import { isEnumType, isInputObjectType, isListType, isNonNullType, isScalarType, } from 'graphql';\nexport const defaultJSONSchemaOptions = {\n    useMarkdownDescription: false,\n};\nfunction text(into, newText) {\n    into.push(newText);\n}\nfunction renderType(into, t) {\n    if (isNonNullType(t)) {\n        renderType(into, t.ofType);\n        text(into, '!');\n    }\n    else if (isListType(t)) {\n        text(into, '[');\n        renderType(into, t.ofType);\n        text(into, ']');\n    }\n    else {\n        text(into, t.name);\n    }\n}\nfunction renderDefinitionDescription(t, useMarkdown, description) {\n    const into = [];\n    const type = 'type' in t ? t.type : t;\n    if ('type' in t && t.description) {\n        text(into, t.description);\n        text(into, '\\n\\n');\n    }\n    text(into, renderTypeToString(type, useMarkdown));\n    if (description) {\n        text(into, '\\n');\n        text(into, description);\n    }\n    else if (!isScalarType(type) && 'description' in type && type.description) {\n        text(into, '\\n');\n        text(into, type.description);\n    }\n    else if ('ofType' in type &&\n        !isScalarType(type.ofType) &&\n        'description' in type.ofType &&\n        type.ofType.description) {\n        text(into, '\\n');\n        text(into, type.ofType.description);\n    }\n    return into.join('');\n}\nfunction renderTypeToString(t, useMarkdown) {\n    const into = [];\n    if (useMarkdown) {\n        text(into, '```graphql\\n');\n    }\n    renderType(into, t);\n    if (useMarkdown) {\n        text(into, '\\n```');\n    }\n    return into.join('');\n}\nconst defaultScalarTypesMap = {\n    Int: { type: 'integer' },\n    String: { type: 'string' },\n    Float: { type: 'number' },\n    ID: { type: 'string' },\n    Boolean: { type: 'boolean' },\n    DateTime: { type: 'string' },\n};\nclass Marker {\n    constructor() {\n        this.set = new Set();\n    }\n    mark(name) {\n        if (this.set.has(name)) {\n            return false;\n        }\n        this.set.add(name);\n        return true;\n    }\n}\nfunction getJSONSchemaFromGraphQLType(fieldOrType, options) {\n    var _a, _b;\n    let definition = Object.create(null);\n    const definitions = Object.create(null);\n    const isField = 'type' in fieldOrType;\n    const type = isField ? fieldOrType.type : fieldOrType;\n    const baseType = isNonNullType(type) ? type.ofType : type;\n    const required = isNonNullType(type);\n    if (isScalarType(baseType)) {\n        if ((_a = options === null || options === void 0 ? void 0 : options.scalarSchemas) === null || _a === void 0 ? void 0 : _a[baseType.name]) {\n            definition = JSON.parse(JSON.stringify(options.scalarSchemas[baseType.name]));\n        }\n        else {\n            definition.type = ['string', 'number', 'boolean', 'integer'];\n        }\n        if (!required) {\n            if (Array.isArray(definition.type)) {\n                definition.type.push('null');\n            }\n            else if (definition.type) {\n                definition.type = [definition.type, 'null'];\n            }\n            else if (definition.enum) {\n                definition.enum.push(null);\n            }\n            else if (definition.oneOf) {\n                definition.oneOf.push({ type: 'null' });\n            }\n            else {\n                definition = {\n                    oneOf: [definition, { type: 'null' }],\n                };\n            }\n        }\n    }\n    else if (isEnumType(baseType)) {\n        definition.enum = baseType.getValues().map(val => val.name);\n        if (!required) {\n            definition.enum.push(null);\n        }\n    }\n    else if (isListType(baseType)) {\n        if (required) {\n            definition.type = 'array';\n        }\n        else {\n            definition.type = ['array', 'null'];\n        }\n        const { definition: def, definitions: defs } = getJSONSchemaFromGraphQLType(baseType.ofType, options);\n        definition.items = def;\n        if (defs) {\n            for (const defName of Object.keys(defs)) {\n                definitions[defName] = defs[defName];\n            }\n        }\n    }\n    else if (isInputObjectType(baseType)) {\n        if (required) {\n            definition.$ref = `#/definitions/${baseType.name}`;\n        }\n        else {\n            definition.oneOf = [\n                { $ref: `#/definitions/${baseType.name}` },\n                { type: 'null' },\n            ];\n        }\n        if ((_b = options === null || options === void 0 ? void 0 : options.definitionMarker) === null || _b === void 0 ? void 0 : _b.mark(baseType.name)) {\n            const fields = baseType.getFields();\n            const fieldDef = {\n                type: 'object',\n                properties: {},\n                required: [],\n            };\n            fieldDef.description = renderDefinitionDescription(baseType);\n            if (options === null || options === void 0 ? void 0 : options.useMarkdownDescription) {\n                fieldDef.markdownDescription = renderDefinitionDescription(baseType, true);\n            }\n            for (const fieldName of Object.keys(fields)) {\n                const field = fields[fieldName];\n                const { required: fieldRequired, definition: fieldDefinition, definitions: typeDefinitions, } = getJSONSchemaFromGraphQLType(field, options);\n                fieldDef.properties[fieldName] = fieldDefinition;\n                if (fieldRequired) {\n                    fieldDef.required.push(fieldName);\n                }\n                if (typeDefinitions) {\n                    for (const [defName, value] of Object.entries(typeDefinitions)) {\n                        definitions[defName] = value;\n                    }\n                }\n            }\n            definitions[baseType.name] = fieldDef;\n        }\n    }\n    if ('defaultValue' in fieldOrType && fieldOrType.defaultValue !== undefined) {\n        definition.default = fieldOrType.defaultValue;\n    }\n    const { description } = definition;\n    definition.description = renderDefinitionDescription(fieldOrType, false, description);\n    if (options === null || options === void 0 ? void 0 : options.useMarkdownDescription) {\n        definition.markdownDescription = renderDefinitionDescription(fieldOrType, true, description);\n    }\n    return { required, definition, definitions };\n}\nexport function getVariablesJSONSchema(variableToType, options) {\n    var _a;\n    const jsonSchema = {\n        $schema: 'http://json-schema.org/draft-04/schema',\n        type: 'object',\n        properties: {},\n        required: [],\n        additionalProperties: false,\n    };\n    const runtimeOptions = Object.assign(Object.assign({}, options), { definitionMarker: new Marker(), scalarSchemas: Object.assign(Object.assign({}, defaultScalarTypesMap), options === null || options === void 0 ? void 0 : options.scalarSchemas) });\n    if (variableToType) {\n        for (const [variableName, type] of Object.entries(variableToType)) {\n            const { definition, required, definitions } = getJSONSchemaFromGraphQLType(type, runtimeOptions);\n            jsonSchema.properties[variableName] = definition;\n            if (required) {\n                (_a = jsonSchema.required) === null || _a === void 0 ? void 0 : _a.push(variableName);\n            }\n            if (definitions) {\n                jsonSchema.definitions = Object.assign(Object.assign({}, jsonSchema === null || jsonSchema === void 0 ? void 0 : jsonSchema.definitions), definitions);\n            }\n        }\n    }\n    return jsonSchema;\n}\n//# sourceMappingURL=getVariablesJSONSchema.js.map","export class Range {\n    constructor(start, end) {\n        this.containsPosition = (position) => {\n            if (this.start.line === position.line) {\n                return this.start.character <= position.character;\n            }\n            if (this.end.line === position.line) {\n                return this.end.character >= position.character;\n            }\n            return this.start.line <= position.line && this.end.line >= position.line;\n        };\n        this.start = start;\n        this.end = end;\n    }\n    setStart(line, character) {\n        this.start = new Position(line, character);\n    }\n    setEnd(line, character) {\n        this.end = new Position(line, character);\n    }\n}\nexport class Position {\n    constructor(line, character) {\n        this.lessThanOrEqualTo = (position) => this.line < position.line ||\n            (this.line === position.line && this.character <= position.character);\n        this.line = line;\n        this.character = character;\n    }\n    setLine(line) {\n        this.line = line;\n    }\n    setCharacter(character) {\n        this.character = character;\n    }\n}\nexport function offsetToPosition(text, loc) {\n    const EOL = '\\n';\n    const buf = text.slice(0, loc);\n    const lines = buf.split(EOL).length - 1;\n    const lastLineIndex = buf.lastIndexOf(EOL);\n    return new Position(lines, loc - lastLineIndex - 1);\n}\nexport function locToRange(text, loc) {\n    const start = offsetToPosition(text, loc.start);\n    const end = offsetToPosition(text, loc.end);\n    return new Range(start, end);\n}\n//# sourceMappingURL=Range.js.map","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            node,\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new GraphQLError('Must provide only one schema definition.', node),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            operationType,\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            [alreadyDefinedOperationType, operationType],\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          node.name,\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new GraphQLError(`There can be only one type named \"${typeName}\".`, [\n          knownTypeNames[typeName],\n          node.name,\n        ]),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isEnumType } from '../../type/definition.mjs';\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            valueDef.name,\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            [valueNames[valueName], valueDef.name],\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isObjectType,\n  isInterfaceType,\n  isInputObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            fieldDef.name,\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            [fieldNames[fieldName], fieldDef.name],\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            node.name,\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            [knownDirectiveNames[directiveName], node.name],\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { assertName } from './assertName.mjs';\nimport { GraphQLString, GraphQLBoolean, GraphQLInt } from './scalars.mjs';\nimport {\n  defineArguments,\n  argsToArgsConfig,\n  GraphQLNonNull,\n} from './definition.mjs';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${inspect(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport class GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      devAssert(false, `@${config.name} locations must be an Array.`);\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    (isObjectLike(args) && !Array.isArray(args)) ||\n      devAssert(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = defineArguments(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport const GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport const GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Used to conditionally defer fragments.\n */\n\nexport const GraphQLDeferDirective = new GraphQLDirective({\n  name: 'defer',\n  description:\n    'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n  locations: [\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: GraphQLBoolean,\n      description: 'Deferred when true or undefined.',\n    },\n    label: {\n      type: GraphQLString,\n      description: 'Unique name',\n    },\n  },\n});\n/**\n * Used to conditionally stream list fields.\n */\n\nexport const GraphQLStreamDirective = new GraphQLDirective({\n  name: 'stream',\n  description:\n    'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n  locations: [DirectiveLocation.FIELD],\n  args: {\n    if: {\n      type: GraphQLBoolean,\n      description: 'Stream when true or undefined.',\n    },\n    label: {\n      type: GraphQLString,\n      description: 'Unique name',\n    },\n    initialCount: {\n      defaultValue: 0,\n      type: GraphQLInt,\n      description: 'Number of items to return immediately',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport const DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport const GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexport const GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexport const specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, node),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                [seenDirectives[directiveName], directive],\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isTypeDefinitionNode } from '../../language/predicates.mjs';\nimport {\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new GraphQLError(\n            `Cannot extend non-${kindStr} type \"${typeName}\".`,\n            defNode ? [defNode, node] : node,\n          ),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(\n        new GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            didYouMean(suggestedTypes),\n          node.name,\n        ),\n      );\n    }\n  }\n}\nconst defKindToExtKind = {\n  [Kind.SCALAR_TYPE_DEFINITION]: Kind.SCALAR_TYPE_EXTENSION,\n  [Kind.OBJECT_TYPE_DEFINITION]: Kind.OBJECT_TYPE_EXTENSION,\n  [Kind.INTERFACE_TYPE_DEFINITION]: Kind.INTERFACE_TYPE_EXTENSION,\n  [Kind.UNION_TYPE_DEFINITION]: Kind.UNION_TYPE_EXTENSION,\n  [Kind.ENUM_TYPE_DEFINITION]: Kind.ENUM_TYPE_EXTENSION,\n  [Kind.INPUT_OBJECT_TYPE_DEFINITION]: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(kind));\n  }\n}\n","/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            argNodes.map((node) => node.name),\n          ),\n        );\n      }\n    }\n  }\n}\n","import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            [knownNames[fieldName], node.name],\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              variableNodes.map((node) => node.variable.name),\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition.mjs';\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n\nexport function typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLList(innerType);\n    }\n\n    case Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLNonNull(innerType);\n    }\n\n    case Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              typeCondition,\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            node.typeCondition,\n          ),\n        );\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\nimport { isType, isRequiredArgument } from '../../type/definition.mjs';\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && isRequiredArgument(argDef)) {\n            const argTypeStr = inspect(argDef.type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                fieldNode,\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = keyMap(\n      directive.args.filter(isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = keyMap(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = isType(argDef.type)\n                ? inspect(argDef.type)\n                : print(argDef.type);\n              context.reportError(\n                new GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  directiveNode,\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(\n              `The ${defName} definition is not executable.`,\n              definition,\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { keyMap } from '../jsutils/keyMap.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isLeafType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = keyMap(valueNode.fields, (field) => field.name.value);\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n","import { keyMap } from '../jsutils/keyMap.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isInputType, isNonNullType } from '../type/definition.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { valueFromAST } from '../utilities/valueFromAST.mjs';\nimport { coerceInputValue } from '../utilities/coerceInputValue.mjs';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = print(varDefNode.type);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          varDefNode.type,\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        const varTypeStr = inspect(varType);\n        onError(\n          new GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            varDefNode,\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      const varTypeStr = inspect(varType);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          varDefNode,\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = coerceInputValue(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` + inspect(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${printPathArray(path)}\"`;\n        }\n\n        onError(\n          new GraphQLError(\n            prefix + '; ' + error.message,\n            varDefNode,\n            undefined,\n            undefined,\n            undefined,\n            error.originalError,\n          ),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n *\n * @internal\n */\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = keyMap(argumentNodes, (arg) => arg.name.value);\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\n          `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n            'was not provided.',\n          node,\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\n            `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            valueNode,\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\n        `Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` +\n          'must not be null.',\n        valueNode,\n      );\n    }\n\n    const coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\n        `Argument \"${name}\" has invalid value ${print(valueNode)}.`,\n        valueNode,\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { Kind } from '../language/kinds.mjs';\nimport {\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeferDirective,\n} from '../type/directives.mjs';\nimport { isAbstractType } from '../type/definition.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { getDirectiveValues } from './values.mjs';\n\n/**\n * Given a selectionSet, collect all of the fields and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n *\n * @internal\n */\nexport function collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  const patches = [];\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    patches,\n    new Set(),\n  );\n  return {\n    fields,\n    patches,\n  };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns it at the end.\n *\n * CollectFields requires the \"return type\" of an object. For a field which\n * returns an Interface or Union type, the \"return type\" will be the actual\n * Object type returned by that field.\n *\n * @internal\n */\n\nexport function collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n  const subPatches = [];\n  const subFieldsAndPatches = {\n    fields: subFieldNodes,\n    patches: subPatches,\n  };\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        subPatches,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldsAndPatches;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  patches,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        const defer = getDeferValues(schema, variableValues, selection);\n\n        if (defer) {\n          const patchFields = new Map();\n          collectFieldsImpl(\n            schema,\n            fragments,\n            variableValues,\n            runtimeType,\n            selection.selectionSet,\n            patchFields,\n            patches,\n            visitedFragmentNames,\n          );\n          patches.push({\n            label: defer.label,\n            fields: patchFields,\n          });\n        } else {\n          collectFieldsImpl(\n            schema,\n            fragments,\n            variableValues,\n            runtimeType,\n            selection.selectionSet,\n            fields,\n            patches,\n            visitedFragmentNames,\n          );\n        }\n\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const defer = getDeferValues(schema, variableValues, selection);\n\n        if (visitedFragmentNames.has(fragName) && !defer) {\n          continue;\n        }\n\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n\n        if (defer) {\n          const patchFields = new Map();\n          collectFieldsImpl(\n            schema,\n            fragments,\n            variableValues,\n            runtimeType,\n            fragment.selectionSet,\n            patchFields,\n            patches,\n            visitedFragmentNames,\n          );\n          patches.push({\n            label: defer.label,\n            fields: patchFields,\n          });\n        } else {\n          collectFieldsImpl(\n            schema,\n            fragments,\n            variableValues,\n            runtimeType,\n            fragment.selectionSet,\n            fields,\n            patches,\n            visitedFragmentNames,\n          );\n        }\n\n        break;\n      }\n    }\n  }\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\n\nfunction getDeferValues(schema, variableValues, node) {\n  if (schema._enableDeferStream !== true) {\n    return;\n  }\n\n  const defer = getDirectiveValues(GraphQLDeferDirective, node, variableValues);\n\n  if (!defer) {\n    return;\n  }\n\n  if (defer.if === false) {\n    return;\n  }\n\n  return {\n    label: typeof defer.label === 'string' ? defer.label : undefined,\n  };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = getDirectiveValues(GraphQLSkipDirective, node, variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = getDirectiveValues(\n    GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = typeFromAST(schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new GraphQLError(`Unknown fragment \"${fragmentName}\".`, node.name),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                `Fragment \"${fragName}\" is never used.`,\n                fragmentDef,\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            argNode,\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                argNode,\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { keyMap } from '../../jsutils/keyMap.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  isLeafType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isRequiredInputField,\n  getNullableType,\n  getNamedType,\n} from '../../type/definition.mjs';\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = keyMap(node.fields, (field) => field.name.value);\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          const typeStr = inspect(fieldDef.type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              node,\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = getNamedType(context.getParentInputType());\n      const fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        const suggestions = suggestionList(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              didYouMean(suggestions),\n            node,\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `Expected value of type \"${inspect(type)}\", found ${print(node)}.`,\n            node,\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    const typeStr = inspect(locationType);\n    context.reportError(\n      new GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n        node,\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = inspect(locationType);\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n          node,\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}; ` +\n            error.message,\n          node,\n          undefined,\n          undefined,\n          undefined,\n          error,\n        ),\n      );\n    }\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isNonNullType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators.mjs';\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nexport function VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = inspect(varType);\n              const typeStr = inspect(type);\n              context.reportError(\n                new GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  [varDef, node],\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  isNonNullType,\n  isLeafType,\n  isObjectType,\n  isListType,\n  isInterfaceType,\n} from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            fields1.concat(fields2),\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      isObjectType(parentType1) &&\n      isObjectType(parentType2));\n\n  if (!areMutuallyExclusive) {\n    var _node1$arguments,\n      _node2$arguments,\n      _node1$directives,\n      _node2$directives;\n\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // FIXME https://github.com/graphql/graphql-js/issues/2203\n\n    const args1 =\n      /* c8 ignore next */\n      (_node1$arguments = node1.arguments) !== null &&\n      _node1$arguments !== void 0\n        ? _node1$arguments\n        : [];\n    const args2 =\n      /* c8 ignore next */\n      (_node2$arguments = node2.arguments) !== null &&\n      _node2$arguments !== void 0\n        ? _node2$arguments\n        : []; // Two field calls must have the same arguments.\n\n    if (!sameArguments(args1, args2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    } // FIXME https://github.com/graphql/graphql-js/issues/2203\n\n    const directives1 =\n      /* c8 ignore next */\n      (_node1$directives = node1.directives) !== null &&\n      _node1$directives !== void 0\n        ? _node1$directives\n        : [];\n    const directives2 =\n      /* c8 ignore next */\n      (_node2$directives = node2.directives) !== null &&\n      _node2$directives !== void 0\n        ? _node2$directives\n        : [];\n\n    if (!sameStreams(directives1, directives2)) {\n      return [\n        [responseName, 'they have differing stream directives'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${inspect(type1)}\" and \"${inspect(\n          type2,\n        )}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      getNamedType(type1),\n      selectionSet1,\n      getNamedType(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n\n  return arguments1.every((argument1) => {\n    const argument2 = arguments2.find(\n      (argument) => argument.name.value === argument1.name.value,\n    );\n\n    if (!argument2) {\n      return false;\n    }\n\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameDirectiveArgument(directive1, directive2, argumentName) {\n  var _directive1$arguments, _directive2$arguments;\n\n  // FIXME https://github.com/graphql/graphql-js/issues/2203\n  const args1 =\n    /* c8 ignore next */\n    (_directive1$arguments = directive1.arguments) !== null &&\n    _directive1$arguments !== void 0\n      ? _directive1$arguments\n      : [];\n  const arg1 = args1.find((argument) => argument.name.value === argumentName);\n\n  if (!arg1) {\n    return false;\n  } // FIXME https://github.com/graphql/graphql-js/issues/2203\n\n  const args2 =\n    /* c8 ignore next */\n    (_directive2$arguments = directive2.arguments) !== null &&\n    _directive2$arguments !== void 0\n      ? _directive2$arguments\n      : [];\n  const arg2 = args2.find((argument) => argument.name.value === argumentName);\n\n  if (!arg2) {\n    return false;\n  }\n\n  return sameValue(arg1.value, arg2.value);\n}\n\nfunction getStreamDirective(directives) {\n  return directives.find((directive) => directive.name.value === 'stream');\n}\n\nfunction sameStreams(directives1, directives2) {\n  const stream1 = getStreamDirective(directives1);\n  const stream2 = getStreamDirective(directives2);\n\n  if (!stream1 && !stream2) {\n    // both fields do not have streams\n    return true;\n  } else if (stream1 && stream2) {\n    // check if both fields have equivalent streams\n    return (\n      sameDirectiveArgument(stream1, stream2, 'initialCount') &&\n      sameDirectiveArgument(stream1, stream2, 'label')\n    );\n  } // fields have a mix of stream and no stream\n\n  return false;\n}\n\nfunction sameValue(value1, value2) {\n  return print(value1) === print(value2);\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? typeFromAST(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs'; // Spec Section: \"Defer And Stream Directives Are Used On Valid Root Field\"\n\nimport { DeferStreamDirectiveOnRootFieldRule } from './rules/DeferStreamDirectiveOnRootFieldRule.mjs'; // Spec Section: \"Stream Directives Are Used On List Fields\"\n\nimport { StreamDirectiveOnListFieldRule } from './rules/StreamDirectiveOnListFieldRule.mjs'; // Spec Section: \"Argument Names\"\n\nimport {\n  KnownArgumentNamesRule,\n  KnownArgumentNamesOnDirectivesRule,\n} from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nimport {\n  ProvidedRequiredArgumentsRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n} from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs';\nimport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nimport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs';\nimport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nimport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs';\nimport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs';\nimport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs';\nimport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs';\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport const specifiedRules = Object.freeze([\n  ExecutableDefinitionsRule,\n  UniqueOperationNamesRule,\n  LoneAnonymousOperationRule,\n  SingleFieldSubscriptionsRule,\n  KnownTypeNamesRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  FieldsOnCorrectTypeRule,\n  UniqueFragmentNamesRule,\n  KnownFragmentNamesRule,\n  NoUnusedFragmentsRule,\n  PossibleFragmentSpreadsRule,\n  NoFragmentCyclesRule,\n  UniqueVariableNamesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedVariablesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  DeferStreamDirectiveOnRootFieldRule,\n  StreamDirectiveOnListFieldRule,\n  KnownArgumentNamesRule,\n  UniqueArgumentNamesRule,\n  ValuesOfCorrectTypeRule,\n  ProvidedRequiredArgumentsRule,\n  VariablesInAllowedPositionRule,\n  OverlappingFieldsCanBeMergedRule,\n  UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexport const specifiedSDLRules = Object.freeze([\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n]);\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              [knownOperationNames[operationName.value], operationName],\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nexport function LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { collectFields } from '../../execution/collectFields.mjs';\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const { fields } = collectFields(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                extraFieldSelections,\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  fieldNodes,\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            node.type,\n          ),\n        );\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { getNamedType, isLeafType } from '../../type/definition.mjs';\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = inspect(type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                selectionSet,\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = inspect(type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              node,\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { naturalCompare } from '../../jsutils/naturalCompare.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isObjectType,\n  isInterfaceType,\n  isAbstractType,\n} from '../../type/definition.mjs';\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = didYouMean(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              node,\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n        return -1;\n      }\n\n      if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n        return 1;\n      }\n\n      return naturalCompare(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            [knownFragmentNames[fragmentName], node.name],\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\nimport { doTypesOverlap } from '../../utilities/typeComparators.mjs';\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        isCompositeType(fragType) &&\n        isCompositeType(parentType) &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            node,\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            cyclePath,\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nexport function NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                [node, operation],\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                variableDef,\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  GraphQLDeferDirective,\n  GraphQLStreamDirective,\n} from '../../type/directives.mjs';\n\n/**\n * Stream directive on list field\n *\n * A GraphQL document is only valid if defer directives are not used on root mutation or subscription types.\n */\nexport function DeferStreamDirectiveOnRootFieldRule(context) {\n  return {\n    Directive(node) {\n      const mutationType = context.getSchema().getMutationType();\n      const subscriptionType = context.getSchema().getSubscriptionType();\n      const parentType = context.getParentType();\n\n      if (parentType && node.name.value === GraphQLDeferDirective.name) {\n        if (mutationType && parentType === mutationType) {\n          context.reportError(\n            new GraphQLError(\n              `Defer directive cannot be used on root mutation type \"${parentType.name}\".`,\n              node,\n            ),\n          );\n        }\n\n        if (subscriptionType && parentType === subscriptionType) {\n          context.reportError(\n            new GraphQLError(\n              `Defer directive cannot be used on root subscription type \"${parentType.name}\".`,\n              node,\n            ),\n          );\n        }\n      }\n\n      if (parentType && node.name.value === GraphQLStreamDirective.name) {\n        if (mutationType && parentType === mutationType) {\n          context.reportError(\n            new GraphQLError(\n              `Stream directive cannot be used on root mutation type \"${parentType.name}\".`,\n              node,\n            ),\n          );\n        }\n\n        if (subscriptionType && parentType === subscriptionType) {\n          context.reportError(\n            new GraphQLError(\n              `Stream directive cannot be used on root subscription type \"${parentType.name}\".`,\n              node,\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isListType, isWrappingType } from '../../type/definition.mjs';\nimport { GraphQLStreamDirective } from '../../type/directives.mjs';\n\n/**\n * Stream directive on list field\n *\n * A GraphQL document is only valid if stream directives are used on list fields.\n */\nexport function StreamDirectiveOnListFieldRule(context) {\n  return {\n    Directive(node) {\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (\n        fieldDef &&\n        parentType &&\n        node.name.value === GraphQLStreamDirective.name &&\n        !(\n          isListType(fieldDef.type) ||\n          (isWrappingType(fieldDef.type) && isListType(fieldDef.type.ofType))\n        )\n      ) {\n        context.reportError(\n          new GraphQLError(\n            `Stream directive cannot be used on non-list field \"${fieldDef.name}\" on type \"${parentType.name}\".`,\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nexport function UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            argNodes.map((node) => node.name),\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { __Schema } from './introspection.mjs';\nimport {\n  GraphQLDeferDirective,\n  GraphQLStreamDirective,\n  isDirective,\n  specifiedDirectives,\n} from './directives.mjs';\nimport {\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isInputObjectType,\n  getNamedType,\n} from './definition.mjs';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${inspect(schema)} to be a GraphQL schema.`);\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nexport class GraphQLSchema {\n  // Used as a cache for validateSchema().\n  // Enable support for defer/stream directives\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined;\n    this._enableDeferStream = config.enableDeferStream; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) ||\n      devAssert(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      devAssert(\n        false,\n        `\"types\" must be Array if provided but got: ${inspect(config.types)}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      devAssert(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${inspect(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : specifiedDirectives;\n\n    if (config.enableDeferStream === true) {\n      if (!this._directives.some((directive) => directive.name === 'defer')) {\n        this._directives = [...this._directives, GraphQLDeferDirective];\n      }\n\n      if (!this._directives.some((directive) => directive.name === 'stream')) {\n        this._directives = [...this._directives, GraphQLStreamDirective];\n      }\n    } // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        devAssert(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return isUnionType(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators.mjs';\nimport { assertSchema } from './schema.mjs';\nimport { isIntrospectionType } from './introspection.mjs';\nimport { isDirective, GraphQLDeprecatedDirective } from './directives.mjs';\nimport {\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isNamedType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isRequiredArgument,\n  isRequiredInputField,\n} from './definition.mjs';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(new GraphQLError(message, _nodes));\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${inspect(\n        queryType,\n      )}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${inspect(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${inspect(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\n        `Expected directive but got: ${inspect(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${inspect(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${inspect(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${inspect(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!isInterfaceType(iface)) {\n      context.reportError(\n        `Type ${inspect(type)} must only implement Interface types, ` +\n          `it cannot implement ${inspect(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${inspect(ifaceField.type)} but ${type.name}.${fieldName} ` +\n          `is type ${inspect(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${inspect(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${inspect(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${inspect(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) => node.name.value === GraphQLDeprecatedDirective.name,\n      );\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { isNode } from '../language/ast.mjs';\nimport { getEnterLeaveForKind } from '../language/visitor.mjs';\nimport {\n  isObjectType,\n  isInterfaceType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isCompositeType,\n  isInputType,\n  isOutputType,\n  getNullableType,\n  getNamedType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { typeFromAST } from './typeFromAST.mjs';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport class TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET: {\n        const namedType = getNamedType(this.getType());\n\n        this._parentTypeStack.push(\n          isCompositeType(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n        break;\n      }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(isObjectType(rootType) ? rootType : undefined);\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? typeFromAST(schema, typeConditionAST)\n          : getNamedType(this.getType());\n\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n        break;\n      }\n\n      case Kind.VARIABLE_DEFINITION: {\n        const inputType = typeFromAST(schema, node.type);\n\n        this._inputTypeStack.push(\n          isInputType(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n        break;\n      }\n\n      case Kind.LIST: {\n        const listType = getNullableType(this.getInputType());\n        const itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n        break;\n      }\n\n      case Kind.OBJECT_FIELD: {\n        const objectType = getNamedType(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if (isInputObjectType(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          isInputType(inputFieldType) ? inputFieldType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ENUM: {\n        const enumType = getNamedType(this.getInputType());\n        let enumValue;\n\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = getEnterLeaveForKind(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = getEnterLeaveForKind(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport class ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\nexport class SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\nexport class ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new TypeInfo(this._schema);\n      visit(\n        node,\n        visitWithTypeInfo(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { visit, visitInParallel } from '../language/visitor.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules.mjs';\nimport {\n  SDLValidationContext,\n  ValidationContext,\n} from './ValidationContext.mjs';\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(\n  schema,\n  documentAST,\n  rules = specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || devAssert(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = visitInParallel(rules.map((rule) => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n","import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            node,\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              node,\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              node,\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              node,\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            node,\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError, print, validate, NoDeprecatedCustomRule, parse, } from 'graphql';\nimport { CharacterStream, onlineParser } from '../parser';\nimport { Range, validateWithCustomRules, Position } from '../utils';\nexport const SEVERITY = {\n    Error: 'Error',\n    Warning: 'Warning',\n    Information: 'Information',\n    Hint: 'Hint',\n};\nexport const DIAGNOSTIC_SEVERITY = {\n    [SEVERITY.Error]: 1,\n    [SEVERITY.Warning]: 2,\n    [SEVERITY.Information]: 3,\n    [SEVERITY.Hint]: 4,\n};\nconst invariant = (condition, message) => {\n    if (!condition) {\n        throw new Error(message);\n    }\n};\nexport function getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {\n    var _a, _b;\n    let ast = null;\n    let fragments = '';\n    if (externalFragments) {\n        fragments =\n            typeof externalFragments === 'string'\n                ? externalFragments\n                : externalFragments.reduce((acc, node) => acc + print(node) + '\\n\\n', '');\n    }\n    const enhancedQuery = fragments ? `${query}\\n\\n${fragments}` : query;\n    try {\n        ast = parse(enhancedQuery);\n    }\n    catch (error) {\n        if (error instanceof GraphQLError) {\n            const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, enhancedQuery);\n            return [\n                {\n                    severity: DIAGNOSTIC_SEVERITY.Error,\n                    message: error.message,\n                    source: 'GraphQL: Syntax',\n                    range,\n                },\n            ];\n        }\n        throw error;\n    }\n    return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\nexport function validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n    if (!schema) {\n        return [];\n    }\n    const validationErrorAnnotations = validateWithCustomRules(schema, ast, customRules, isRelayCompatMode).flatMap(error => annotations(error, DIAGNOSTIC_SEVERITY.Error, 'Validation'));\n    const deprecationWarningAnnotations = validate(schema, ast, [\n        NoDeprecatedCustomRule,\n    ]).flatMap(error => annotations(error, DIAGNOSTIC_SEVERITY.Warning, 'Deprecation'));\n    return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\nfunction annotations(error, severity, type) {\n    if (!error.nodes) {\n        return [];\n    }\n    const highlightedNodes = [];\n    for (const [i, node] of error.nodes.entries()) {\n        const highlightNode = node.kind !== 'Variable' && 'name' in node && node.name !== undefined\n            ? node.name\n            : 'variable' in node && node.variable !== undefined\n                ? node.variable\n                : node;\n        if (highlightNode) {\n            invariant(error.locations, 'GraphQL validation error requires locations.');\n            const loc = error.locations[i];\n            const highlightLoc = getLocation(highlightNode);\n            const end = loc.column + (highlightLoc.end - highlightLoc.start);\n            highlightedNodes.push({\n                source: `GraphQL: ${type}`,\n                message: error.message,\n                severity,\n                range: new Range(new Position(loc.line - 1, loc.column - 1), new Position(loc.line - 1, end)),\n            });\n        }\n    }\n    return highlightedNodes;\n}\nexport function getRange(location, queryText) {\n    const parser = onlineParser();\n    const state = parser.startState();\n    const lines = queryText.split('\\n');\n    invariant(lines.length >= location.line, 'Query text must have more lines than where the error happened');\n    let stream = null;\n    for (let i = 0; i < location.line; i++) {\n        stream = new CharacterStream(lines[i]);\n        while (!stream.eol()) {\n            const style = parser.token(stream, state);\n            if (style === 'invalidchar') {\n                break;\n            }\n        }\n    }\n    invariant(stream, 'Expected Parser stream to be available.');\n    const line = location.line - 1;\n    const start = stream.getStartOfToken();\n    const end = stream.getCurrentPosition();\n    return new Range(new Position(line, start), new Position(line, end));\n}\nfunction getLocation(node) {\n    const typeCastedNode = node;\n    const location = typeCastedNode.loc;\n    invariant(location, 'Expected ASTNode to have a location.');\n    return location;\n}\n//# sourceMappingURL=getDiagnostics.js.map","import { GraphQLNonNull, GraphQLList, } from 'graphql';\nimport { getContextAtPosition } from '../parser';\nexport function getHoverInformation(schema, queryText, cursor, contextToken, config) {\n    const options = Object.assign(Object.assign({}, config), { schema });\n    const context = getContextAtPosition(queryText, cursor, schema, contextToken);\n    if (!context) {\n        return '';\n    }\n    const { typeInfo, token } = context;\n    const { kind, step } = token.state;\n    if ((kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n        (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef) ||\n        (kind === 'ObjectField' && step === 0 && typeInfo.fieldDef)) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderField(into, typeInfo, options);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.fieldDef);\n        return into.join('').trim();\n    }\n    if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderDirective(into, typeInfo, options);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.directiveDef);\n        return into.join('').trim();\n    }\n    if (kind === 'Variable' && typeInfo.type) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderType(into, typeInfo, options, typeInfo.type);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.type);\n        return into.join('').trim();\n    }\n    if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderArg(into, typeInfo, options);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.argDef);\n        return into.join('').trim();\n    }\n    if (kind === 'EnumValue' &&\n        typeInfo.enumValue &&\n        'description' in typeInfo.enumValue) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderEnumValue(into, typeInfo, options);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.enumValue);\n        return into.join('').trim();\n    }\n    if (kind === 'NamedType' && typeInfo.type && 'description' in typeInfo.type) {\n        const into = [];\n        renderMdCodeStart(into, options);\n        renderType(into, typeInfo, options, typeInfo.type);\n        renderMdCodeEnd(into, options);\n        renderDescription(into, options, typeInfo.type);\n        return into.join('').trim();\n    }\n    return '';\n}\nfunction renderMdCodeStart(into, options) {\n    if (options.useMarkdown) {\n        text(into, '```graphql\\n');\n    }\n}\nfunction renderMdCodeEnd(into, options) {\n    if (options.useMarkdown) {\n        text(into, '\\n```');\n    }\n}\nexport function renderField(into, typeInfo, options) {\n    renderQualifiedField(into, typeInfo, options);\n    renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\nfunction renderQualifiedField(into, typeInfo, options) {\n    if (!typeInfo.fieldDef) {\n        return;\n    }\n    const fieldName = typeInfo.fieldDef.name;\n    if (fieldName.slice(0, 2) !== '__') {\n        renderType(into, typeInfo, options, typeInfo.parentType);\n        text(into, '.');\n    }\n    text(into, fieldName);\n}\nexport function renderDirective(into, typeInfo, _options) {\n    if (!typeInfo.directiveDef) {\n        return;\n    }\n    const name = '@' + typeInfo.directiveDef.name;\n    text(into, name);\n}\nexport function renderArg(into, typeInfo, options) {\n    if (typeInfo.directiveDef) {\n        renderDirective(into, typeInfo, options);\n    }\n    else if (typeInfo.fieldDef) {\n        renderQualifiedField(into, typeInfo, options);\n    }\n    if (!typeInfo.argDef) {\n        return;\n    }\n    const { name } = typeInfo.argDef;\n    text(into, '(');\n    text(into, name);\n    renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n    text(into, ')');\n}\nfunction renderTypeAnnotation(into, typeInfo, options, t) {\n    text(into, ': ');\n    renderType(into, typeInfo, options, t);\n}\nexport function renderEnumValue(into, typeInfo, options) {\n    if (!typeInfo.enumValue) {\n        return;\n    }\n    const { name } = typeInfo.enumValue;\n    renderType(into, typeInfo, options, typeInfo.inputType);\n    text(into, '.');\n    text(into, name);\n}\nexport function renderType(into, typeInfo, options, t) {\n    if (!t) {\n        return;\n    }\n    if (t instanceof GraphQLNonNull) {\n        renderType(into, typeInfo, options, t.ofType);\n        text(into, '!');\n    }\n    else if (t instanceof GraphQLList) {\n        text(into, '[');\n        renderType(into, typeInfo, options, t.ofType);\n        text(into, ']');\n    }\n    else {\n        text(into, t.name);\n    }\n}\nfunction renderDescription(into, options, def) {\n    if (!def) {\n        return;\n    }\n    const description = typeof def.description === 'string' ? def.description : null;\n    if (description) {\n        text(into, '\\n\\n');\n        text(into, description);\n    }\n    renderDeprecation(into, options, def);\n}\nfunction renderDeprecation(into, _options, def) {\n    if (!def) {\n        return;\n    }\n    const reason = def.deprecationReason;\n    if (!reason) {\n        return;\n    }\n    text(into, '\\n\\n');\n    text(into, 'Deprecated: ');\n    text(into, reason);\n}\nfunction text(into, content) {\n    into.push(content);\n}\n//# sourceMappingURL=getHoverInformation.js.map","import { inspect } from '../jsutils/inspect.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { parseValue } from '../language/parser.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { specifiedScalarTypes } from '../type/scalars.mjs';\nimport { introspectionTypes, TypeKind } from '../type/introspection.mjs';\nimport {\n  isInputType,\n  isOutputType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  assertNullableType,\n  assertObjectType,\n  assertInterfaceType,\n} from '../type/definition.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  (isObjectLike(introspection) && isObjectLike(introspection.__schema)) ||\n    devAssert(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${inspect(\n        introspection,\n      )}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = keyValMap(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [...specifiedScalarTypes, ...introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${inspect(typeRef)}.`);\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = inspect(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${inspect(typeIntrospection)}.`,\n      );\n    }\n\n    return keyValMap(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type)\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n","import { keyMap } from '../jsutils/keyMap.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../language/predicates.mjs';\nimport { assertValidSDLExtension } from '../validation/validate.mjs';\nimport { getDirectiveValues } from '../execution/values.mjs';\nimport { assertSchema, GraphQLSchema } from '../type/schema.mjs';\nimport {\n  specifiedScalarTypes,\n  isSpecifiedScalarType,\n} from '../type/scalars.mjs';\nimport {\n  introspectionTypes,\n  isIntrospectionType,\n} from '../type/introspection.mjs';\nimport {\n  GraphQLDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n} from '../type/directives.mjs';\nimport {\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isListType,\n  isNonNullType,\n  isEnumType,\n  isInputObjectType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n} from '../type/definition.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDLExtension(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nexport function extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef,\n    _schemaDef$descriptio,\n    _schemaDef2,\n    _options$assumeValid,\n    _options$enableDeferS;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n    enableDeferStream:\n      (_options$enableDeferS =\n        options === null || options === void 0\n          ? void 0\n          : options.enableDeferStream) !== null &&\n      _options$enableDeferS !== void 0\n        ? _options$enableDeferS\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    }\n\n    if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      args: mapValue(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if (isScalarType(type)) {\n      return extendScalarType(type);\n    }\n\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n\n    if (isEnumType(type)) {\n      return extendEnumType(type);\n    }\n\n    if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...mapValue(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && mapValue(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: valueFromAST(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: valueFromAST(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\nconst stdTypeMap = keyMap(\n  [...specifiedScalarTypes, ...introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = getDirectiveValues(GraphQLSpecifiedByDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { assertValidSDL } from '../validation/validate.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { specifiedDirectives } from '../type/directives.mjs';\nimport { extendSchemaImpl } from './extendSchema.mjs';\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nexport function buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDL(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = extendSchemaImpl(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ...specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nexport function buildSchema(source, options) {\n  const document = parse(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n    enableDeferStream:\n      options === null || options === void 0\n        ? void 0\n        : options.enableDeferStream,\n  });\n}\n","import { buildClientSchema, buildASTSchema } from 'graphql';\nexport const defaultSchemaLoader = (schemaConfig, parser) => {\n    const { schema, documentAST, introspectionJSON, introspectionJSONString, buildSchemaOptions, documentString, } = schemaConfig;\n    if (schema) {\n        return schema;\n    }\n    if (introspectionJSONString) {\n        const introspectionJSONResult = JSON.parse(introspectionJSONString);\n        return buildClientSchema(introspectionJSONResult, buildSchemaOptions);\n    }\n    if (documentString && parser) {\n        const docAST = parser(documentString);\n        return buildASTSchema(docAST, buildSchemaOptions);\n    }\n    if (introspectionJSON) {\n        return buildClientSchema(introspectionJSON, buildSchemaOptions);\n    }\n    if (documentAST) {\n        return buildASTSchema(documentAST, buildSchemaOptions);\n    }\n    throw new Error('No schema supplied');\n};\n//# sourceMappingURL=schemaLoader.js.map","import { parse, visit, } from 'graphql';\nimport picomatch from 'picomatch-browser';\nimport { getAutocompleteSuggestions, getDiagnostics, getHoverInformation, getVariablesJSONSchema, getOperationASTFacts, } from 'graphql-language-service';\nimport { defaultSchemaLoader } from './schemaLoader';\nconst schemaCache = new Map();\nexport class LanguageService {\n    _parser = parse;\n    _schemas = [];\n    _schemaCache = schemaCache;\n    _schemaLoader = defaultSchemaLoader;\n    _parseOptions;\n    _customValidationRules;\n    _externalFragmentDefinitionNodes = null;\n    _externalFragmentDefinitionsString = null;\n    _completionSettings;\n    constructor({ parser, schemas, parseOptions, externalFragmentDefinitions, customValidationRules, fillLeafsOnComplete, completionSettings, }) {\n        this._schemaLoader = defaultSchemaLoader;\n        if (schemas) {\n            this._schemas = schemas;\n            this._cacheSchemas();\n        }\n        if (parser) {\n            this._parser = parser;\n        }\n        this._completionSettings = {\n            ...completionSettings,\n            fillLeafsOnComplete: completionSettings?.fillLeafsOnComplete ?? fillLeafsOnComplete,\n        };\n        if (parseOptions) {\n            this._parseOptions = parseOptions;\n        }\n        if (customValidationRules) {\n            this._customValidationRules = customValidationRules;\n        }\n        if (externalFragmentDefinitions) {\n            if (Array.isArray(externalFragmentDefinitions)) {\n                this._externalFragmentDefinitionNodes = externalFragmentDefinitions;\n            }\n            else {\n                this._externalFragmentDefinitionsString = externalFragmentDefinitions;\n            }\n        }\n    }\n    _cacheSchemas() {\n        for (const schema of this._schemas) {\n            this._cacheSchema(schema);\n        }\n    }\n    _cacheSchema(schemaConfig) {\n        const schema = this._schemaLoader(schemaConfig, this.parse.bind(this));\n        return this._schemaCache.set(schemaConfig.uri, {\n            ...schemaConfig,\n            schema,\n        });\n    }\n    getSchemaForFile(uri) {\n        if (!this._schemas.length) {\n            return;\n        }\n        if (this._schemas.length === 1) {\n            return this._schemaCache.get(this._schemas[0].uri);\n        }\n        const schema = this._schemas.find(schemaConfig => {\n            if (!schemaConfig.fileMatch) {\n                return false;\n            }\n            return schemaConfig.fileMatch.some(glob => {\n                const isMatch = picomatch(glob);\n                return isMatch(uri);\n            });\n        });\n        if (schema) {\n            const cacheEntry = this._schemaCache.get(schema.uri);\n            if (cacheEntry) {\n                return cacheEntry;\n            }\n            const cache = this._cacheSchema(schema);\n            return cache.get(schema.uri);\n        }\n    }\n    getExternalFragmentDefinitions() {\n        if (!this._externalFragmentDefinitionNodes &&\n            this._externalFragmentDefinitionsString) {\n            const definitionNodes = [];\n            try {\n                visit(this._parser(this._externalFragmentDefinitionsString), {\n                    FragmentDefinition(node) {\n                        definitionNodes.push(node);\n                    },\n                });\n            }\n            catch {\n                throw new Error(`Failed parsing externalFragmentDefinitions string:\\n${this._externalFragmentDefinitionsString}`);\n            }\n            this._externalFragmentDefinitionNodes = definitionNodes;\n        }\n        return this._externalFragmentDefinitionNodes;\n    }\n    async updateSchemas(schemas) {\n        this._schemas = schemas;\n        this._cacheSchemas();\n    }\n    updateSchema(schema) {\n        const schemaIndex = this._schemas.findIndex(c => c.uri === schema.uri);\n        if (schemaIndex < 0) {\n            console.warn('updateSchema could not find a schema in your config by that URI', schema.uri);\n            return;\n        }\n        this._schemas[schemaIndex] = schema;\n        this._cacheSchema(schema);\n    }\n    addSchema(schema) {\n        this._schemas.push(schema);\n        this._cacheSchema(schema);\n    }\n    parse(text, options) {\n        return this._parser(text, options || this._parseOptions);\n    }\n    getCompletion = (uri, documentText, position) => {\n        const schema = this.getSchemaForFile(uri);\n        if (!documentText || !schema?.schema) {\n            return [];\n        }\n        return getAutocompleteSuggestions(schema.schema, documentText, position, undefined, this.getExternalFragmentDefinitions(), { uri, ...this._completionSettings });\n    };\n    getDiagnostics = (uri, documentText, customRules) => {\n        const schema = this.getSchemaForFile(uri);\n        if (!documentText || documentText.trim().length < 2 || !schema?.schema) {\n            return [];\n        }\n        return getDiagnostics(documentText, schema.schema, customRules ?? this._customValidationRules, false, this.getExternalFragmentDefinitions());\n    };\n    getHover = (uri, documentText, position, options) => {\n        const schema = this.getSchemaForFile(uri);\n        if (schema && documentText.length > 3) {\n            return getHoverInformation(schema.schema, documentText, position, undefined, {\n                useMarkdown: true,\n                ...options,\n            });\n        }\n    };\n    getVariablesJSONSchema = (uri, documentText, options) => {\n        const schema = this.getSchemaForFile(uri);\n        if (schema && documentText.length > 3) {\n            try {\n                const documentAST = this.parse(documentText);\n                const { variableToType } = getOperationASTFacts(documentAST, schema.schema);\n                if (variableToType) {\n                    return getVariablesJSONSchema(variableToType, {\n                        ...options,\n                        scalarSchemas: schema.customScalarSchemas,\n                    });\n                }\n            }\n            catch { }\n        }\n        return null;\n    };\n}\n//# sourceMappingURL=LanguageService.js.map","import { specifiedRules, validate, NoUnusedFragmentsRule, KnownFragmentNamesRule, Kind, ExecutableDefinitionsRule, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, UniqueVariableNamesRule, FragmentsOnCompositeTypesRule, ProvidedRequiredArgumentsRule, } from 'graphql';\nconst specifiedSDLRules = [\n    LoneSchemaDefinitionRule,\n    UniqueOperationTypesRule,\n    UniqueTypeNamesRule,\n    UniqueEnumValueNamesRule,\n    UniqueFieldDefinitionNamesRule,\n    UniqueDirectiveNamesRule,\n    KnownTypeNamesRule,\n    KnownDirectivesRule,\n    UniqueDirectivesPerLocationRule,\n    PossibleTypeExtensionsRule,\n    UniqueArgumentNamesRule,\n    UniqueInputFieldNamesRule,\n    UniqueVariableNamesRule,\n    FragmentsOnCompositeTypesRule,\n    ProvidedRequiredArgumentsRule,\n];\nexport function validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n    const rules = specifiedRules.filter(rule => {\n        if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n            return false;\n        }\n        if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n            return false;\n        }\n        return true;\n    });\n    if (customRules) {\n        Array.prototype.push.apply(rules, customRules);\n    }\n    if (isSchemaDocument) {\n        Array.prototype.push.apply(rules, specifiedSDLRules);\n    }\n    const errors = validate(schema, ast, rules);\n    return errors.filter(error => {\n        if (error.message.includes('Unknown directive') && error.nodes) {\n            const node = error.nodes[0];\n            if (node && node.kind === Kind.DIRECTIVE) {\n                const name = node.name.value;\n                if (name === 'arguments' || name === 'argumentDefinitions') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    });\n}\n//# sourceMappingURL=validateWithCustomRules.js.map","import { parse, visit } from 'graphql';\nimport { collectVariables } from './collectVariables';\nexport function getOperationASTFacts(documentAST, schema) {\n    const variableToType = schema\n        ? collectVariables(schema, documentAST)\n        : undefined;\n    const operations = [];\n    visit(documentAST, {\n        OperationDefinition(node) {\n            operations.push(node);\n        },\n    });\n    return { variableToType, operations };\n}\nexport default function getOperationFacts(schema, documentString) {\n    if (!documentString) {\n        return;\n    }\n    try {\n        const documentAST = parse(documentString);\n        return Object.assign(Object.assign({}, getOperationASTFacts(documentAST, schema)), { documentAST });\n    }\n    catch (_a) {\n        return;\n    }\n}\nexport const getQueryFacts = getOperationFacts;\n//# sourceMappingURL=getOperationFacts.js.map","import { typeFromAST, GraphQLFloat, Kind, } from 'graphql';\nexport function collectVariables(schema, documentAST) {\n    const variableToType = Object.create(null);\n    for (const definition of documentAST.definitions) {\n        if (definition.kind === 'OperationDefinition') {\n            const { variableDefinitions } = definition;\n            if (variableDefinitions) {\n                for (const { variable, type } of variableDefinitions) {\n                    const inputType = typeFromAST(schema, type);\n                    if (inputType) {\n                        variableToType[variable.name.value] = inputType;\n                    }\n                    else if (type.kind === Kind.NAMED_TYPE &&\n                        type.name.value === 'Float') {\n                        variableToType[variable.name.value] = GraphQLFloat;\n                    }\n                }\n            }\n        }\n    }\n    return variableToType;\n}\n//# sourceMappingURL=collectVariables.js.map","import { buildASTSchema, printSchema } from 'graphql';\nimport { Position } from 'graphql-language-service';\nexport const getModelLanguageId = (model) => {\n    if ('getModeId' in model) {\n        return model.getModeId();\n    }\n    return model.getLanguageId();\n};\nexport function toMonacoRange(range) {\n    return {\n        startLineNumber: range.start.line + 1,\n        startColumn: range.start.character + 1,\n        endLineNumber: range.end.line + 1,\n        endColumn: range.end.character + 1,\n    };\n}\nexport function toGraphQLPosition(position) {\n    return new Position(position.lineNumber - 1, position.column - 1);\n}\nexport function toCompletion(entry, range) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        ...(entry.documentation && {\n            documentation: {\n                value: entry.documentation,\n            },\n        }),\n        detail: entry.detail,\n        ...(range && { range: toMonacoRange(range) }),\n        kind: entry.kind,\n        ...(entry.insertTextFormat && { insertTextFormat: entry.insertTextFormat }),\n        ...(entry.insertTextMode && { insertTextMode: entry.insertTextMode }),\n        ...(entry.command && {\n            command: { ...entry.command, id: entry.command.command },\n        }),\n        ...(entry.labelDetails && { labelDetails: entry.labelDetails }),\n    };\n}\nexport function toMonacoSeverity(severity) {\n    const severityMap = {\n        1: 8,\n        2: 4,\n        3: 2,\n        4: 1,\n    };\n    return severity ? severityMap[severity] : severityMap[2];\n}\nexport function toMarkerData(diagnostic) {\n    return {\n        startLineNumber: diagnostic.range.start.line + 1,\n        endLineNumber: diagnostic.range.end.line + 1,\n        startColumn: diagnostic.range.start.character + 1,\n        endColumn: diagnostic.range.end.character,\n        message: diagnostic.message,\n        severity: toMonacoSeverity(diagnostic.severity),\n        code: diagnostic.code || undefined,\n    };\n}\nexport const getStringSchema = (schemaConfig) => {\n    const { schema: graphQLSchema, documentAST, introspectionJSON, introspectionJSONString, documentString, ...rest } = schemaConfig;\n    if (graphQLSchema) {\n        return {\n            ...rest,\n            documentString: printSchema(graphQLSchema),\n        };\n    }\n    if (introspectionJSONString) {\n        return {\n            ...rest,\n            introspectionJSONString,\n        };\n    }\n    if (documentString) {\n        return {\n            ...rest,\n            documentString,\n        };\n    }\n    if (introspectionJSON) {\n        return {\n            ...rest,\n            introspectionJSONString: JSON.stringify(introspectionJSON),\n        };\n    }\n    if (documentAST) {\n        const schema = buildASTSchema(documentAST, rest.buildSchemaOptions);\n        return {\n            ...rest,\n            documentString: printSchema(schema),\n        };\n    }\n    throw new Error('No schema supplied');\n};\n//# sourceMappingURL=utils.js.map","import { getRange } from 'graphql-language-service';\nimport { LanguageService } from './LanguageService';\nimport { toGraphQLPosition, toMonacoRange, toMarkerData, toCompletion, } from './utils';\nexport class GraphQLWorker {\n    _ctx;\n    _languageService;\n    _formattingOptions;\n    constructor(ctx, createData) {\n        this._ctx = ctx;\n        this._languageService = new LanguageService(createData.languageConfig);\n        this._formattingOptions = createData.formattingOptions;\n    }\n    async doValidation(uri) {\n        try {\n            const documentModel = this._getTextModel(uri);\n            const document = documentModel?.getValue();\n            if (!document) {\n                return [];\n            }\n            const graphqlDiagnostics = this._languageService.getDiagnostics(uri, document);\n            return graphqlDiagnostics.map(toMarkerData);\n        }\n        catch (err) {\n            console.error(err);\n            return [];\n        }\n    }\n    async doComplete(uri, position) {\n        try {\n            const documentModel = this._getTextModel(uri);\n            const document = documentModel?.getValue();\n            if (!document) {\n                return [];\n            }\n            const graphQLPosition = toGraphQLPosition(position);\n            const suggestions = this._languageService.getCompletion(uri, document, graphQLPosition);\n            return suggestions.map(suggestion => toCompletion(suggestion));\n        }\n        catch (err) {\n            console.error(err);\n            return [];\n        }\n    }\n    async doHover(uri, position) {\n        try {\n            const documentModel = this._getTextModel(uri);\n            const document = documentModel?.getValue();\n            if (!document) {\n                return null;\n            }\n            const graphQLPosition = toGraphQLPosition(position);\n            const hover = this._languageService.getHover(uri, document, graphQLPosition);\n            const location = {\n                column: graphQLPosition.character,\n                line: graphQLPosition.line,\n            };\n            return {\n                content: hover,\n                range: toMonacoRange(getRange(location, document)),\n            };\n        }\n        catch (err) {\n            console.error(err);\n            return null;\n        }\n    }\n    async doGetVariablesJSONSchema(uri) {\n        const documentModel = this._getTextModel(uri);\n        const document = documentModel?.getValue();\n        if (!documentModel || !document) {\n            return null;\n        }\n        const jsonSchema = this._languageService.getVariablesJSONSchema(uri, document, { useMarkdownDescription: true });\n        if (jsonSchema) {\n            return {\n                ...jsonSchema,\n                $id: 'monaco://variables-schema.json',\n                title: 'GraphQL Variables',\n            };\n        }\n        return null;\n    }\n    async doFormat(uri) {\n        const documentModel = this._getTextModel(uri);\n        const document = documentModel?.getValue();\n        if (!documentModel || !document) {\n            return null;\n        }\n        const prettierStandalone = await import('prettier/standalone');\n        const prettierGraphqlParser = await import('prettier/parser-graphql');\n        return prettierStandalone.format(document, {\n            parser: 'graphql',\n            plugins: [prettierGraphqlParser],\n            ...this._formattingOptions?.prettierConfig,\n        });\n    }\n    _getTextModel(uri) {\n        const models = this._ctx.getMirrorModels();\n        for (const model of models) {\n            if (model.uri.toString() === uri) {\n                return model;\n            }\n        }\n        return null;\n    }\n    doUpdateSchema(schema) {\n        return this._languageService.updateSchema(schema);\n    }\n    doUpdateSchemas(schemas) {\n        return this._languageService.updateSchemas(schemas);\n    }\n}\nexport default {\n    GraphQLWorker,\n};\nexport function create(ctx, createData) {\n    return new GraphQLWorker(ctx, createData);\n}\n//# sourceMappingURL=GraphQLWorker.js.map","import { initialize } from 'monaco-editor/esm/vs/editor/editor.worker';\nimport { GraphQLWorker } from './GraphQLWorker';\nglobalThis.onmessage = () => {\n    initialize((ctx, createData) => new GraphQLWorker(ctx, createData));\n};\n//# sourceMappingURL=graphql.worker.js.map"],"names":["leafPrototypes","getProto","installedChunks","installChunk","module","exports","constants","utils","MAX_LENGTH","POSIX_REGEX_SOURCE","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REPLACEMENTS","expandRange","args","options","sort","value","join","RegExp","ex","map","v","escapeRegex","syntaxError","type","char","parse","input","TypeError","opts","max","maxLength","Math","min","len","length","SyntaxError","bos","output","prepend","tokens","capture","PLATFORM_CHARS","globChars","windows","EXTGLOB_CHARS","extglobChars","DOT_LITERAL","PLUS_LITERAL","SLASH_LITERAL","ONE_CHAR","DOTS_SLASH","NO_DOT","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK","QMARK_NO_DOT","STAR","START_ANCHOR","globstar","dot","nodot","qmarkNoDot","star","bash","noext","noextglob","state","index","start","consumed","prefix","backtrack","negated","brackets","braces","parens","quotes","removePrefix","extglobs","stack","prev","eos","peek","n","advance","remaining","slice","consume","num","append","token","negate","count","increment","push","decrement","pop","tok","isBrace","isExtglob","extglob","inner","extglobOpen","conditions","open","extglobClose","close","extglobStar","includes","test","negatedExtglob","fastpaths","backslashes","replace","m","esc","chars","first","rest","repeat","unescape","contains","wrapOutput","next","match","exec","slashes","posix","idx","lastIndexOf","pre","indexOf","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","hasRegexChars","escaped","nobrace","outputIndex","tokensIndex","brace","dots","arr","range","i","unshift","comma","out","toks","t","supportsLookbehinds","Error","nonegate","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","end","escapeLast","suffix","NO_DOTS","slashDot","create","str","source","initialized","initialize","foreignModule","simpleWorker","SimpleWorkerServer","msg","globalThis","postMessage","workerServer","EditorSimpleWorker","EditorWorkerHost","getChannel","onmessage","e","data","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","URI","isUri","thing","authority","fragment","path","query","scheme","fsPath","with","toString","constructor","schemeOrData","_strict","this","_schemeFix","_referenceResolution","ret","_validateUri","uriToFsPath","change","undefined","Uri","percentDecode","file","substring","from","components","strict","joinPath","uri","pathFragment","newPath","skipEncoding","_asFormatted","toJSON","revive","result","_formatted","external","_fsPath","_sep","_pathSepMarker","super","arguments","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","code","charCodeAt","encodeURIComponent","charAt","substr","encodeURIComponentMinimal","keepDriveLetterCasing","toLowerCase","encoder","userinfo","String","fromCharCode","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","equals","one","other","itemEquals","a","b","groupAdjacentBy","items","shouldBeGrouped","currentGroup","last","item","forEachAdjacent","f","forEachWithNeighbors","distinct","array","keyFn","seen","Set","filter","element","key","has","add","firstOrDefault","notFoundValue","arrayInsert","target","insertIndex","insertArr","concat","pushMany","CompareResult","compareBy","selector","comparator","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","greaterThan","lessThan","neitherLessOrGreaterThan","numberComparator","reverseOrder","ArrayQueue","firstIdx","lastIdx","takeWhile","predicate","startIdx","takeFromEndWhile","endIdx","dequeue","takeCount","CallbackIterable","empty","_callback","iterate","toArray","cb","mapFn","findLast","findLastMaxBy","safeProcess","vscodeGlobal","vscode","process","sandboxProcess","platform","arch","env","cwd","versions","node","getNLSLanguage","_VSCODE_NLS_LANGUAGE","isPseudo","document","location","hash","localize","message","arg","_format","fallback","_VSCODE_NLS_MESSAGES","lookupMessage","UnicodeTextModelHighlighter","computeUnicodeHighlights","model","startLine","startLineNumber","endLine","endLineNumber","getLineCount","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","codePoints","Array","fromCodePoint","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineNumber","lineCount","lineContent","getLineContent","lineLength","reset","startIndex","endIndex","charCodeBefore","word","endColumn","highlightReason","shouldHighlightNonBasicASCII","MAX_RESULT_LENGTH","computeUnicodeHighlightReason","kind","codePoint","codePointAt","primaryConfusable","ambiguousCharacters","getPrimaryConfusable","notAmbiguousInLocales","getLocales","l","getInstance","allowedLocales","isAmbiguous","confusableWith","allowedCodePoints","nonBasicASCII","set","invisibleCharacters","cp","isAllowedInvisibleCharacter","getConfusableCodePoints","delete","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII","isInvisibleCharacter","SearchParams","searchString","isRegex","matchCase","wordSeparators","parseSearchRequest","multiline","chCode","nextChCode","isMultilineRegexSource","wholeWord","global","unicode","err","canUseSimpleSearch","toUpperCase","createFindMatch","rawMatches","captureMatches","matches","LineFeedCounter","text","lineFeedsOffsets","lineFeedsOffsetsLen","textLen","_lineFeedsOffsets","findLineFeedCountBeforeOffset","offset","mid","TextModelSearch","findMatches","searchParams","searchRange","limitResultCount","searchData","_doFindMatchesMultiline","Searcher","_doFindMatchesLineByLine","_getMultilineMatchRange","deltaOffset","lfCounter","matchIndex","match0","startOffset","endOffset","lineFeedCountBeforeMatch","lineFeedCountInMatch","startPosition","getPositionAt","endPosition","column","getOffsetAt","getStartPosition","getValueInRange","getEOL","counter","resultLen","startColumn","_findMatchesInLine","simpleSearch","searchStringLen","textLength","lastMatchIndex","isValidMatch","findNextMatch","searchStart","_doFindNextMatchMultiline","_doFindNextMatchLineByLine","searchTextStart","getLineMaxColumn","r","_findFirstMatchInLine","lineIndex","fromColumn","findPreviousMatch","_doFindPreviousMatchMultiline","_doFindPreviousMatchLineByLine","_findLastMatchInLine","bestResult","matchStartIndex","matchLength","charBefore","get","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","lastIndex","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","setEndPosition","getPosition","getSelectionStart","setStartPosition","fromPositions","fromRange","direction","liftSelection","sel","selectionsArrEqual","isISelection","obj","createWithDirection","scan","picomatch","glob","returnState","isArray","fns","arrayMatcher","isMatch","isState","val","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","matcher","returnObject","onIgnore","format","toPosixSlashes","matchBase","basename","Boolean","patterns","pattern","p","parsed","returnOutput","toRegex","startsWith","flags","nocase","debug","CharacterClassifier","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","Uint8Array","fill","charCode","_value","clear","CHAR_ASTERISK","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_COMMA","CHAR_DOT","CHAR_EXCLAMATION_MARK","CHAR_FORWARD_SLASH","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_PARENTHESES","CHAR_LEFT_SQUARE_BRACKET","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_PARENTHESES","CHAR_RIGHT_SQUARE_BRACKET","isPathSeparator","depth","isPrefix","isGlobstar","Infinity","scanToEnd","parts","isBracket","isGlob","braceEscaped","finished","noparen","base","removeBackslashes","maxDepth","prevIndex","Event","once","event","listener","thisArgs","disposables","didFire","dispose","call","disposable","snapshot","emitter","Emitter","onWillAddFirstListener","fire","onDidRemoveLastListener","debounce","merge","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","doFire","numDebouncedCalls","cur","_output","clearTimeout","setTimeout","queueMicrotask","onWillRemoveListener","None","defer","onceIf","condition","forEach","each","signal","any","events","d","store","reduce","initial","accumulate","latch","cache","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","Symbol","steps","fn","step","fromNodeEventEmitter","eventName","id","on","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","toPromise","Promise","resolve","fromPromise","promise","then","finally","forward","to","runAndSubscribe","handler","EmitterObserver","_observable","_counter","_hasChanged","addObserver","reportChanges","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","fromObservable","obs","fromObservableLight","observable","didChange","observer","EventProfiling","all","_idPool","name","listenerCount","invocationCount","elapsedOverall","durations","_stopWatch","stop","elapsed","LeakageMonitor","_errorHandler","threshold","padStart","_warnCountdown","_stacks","check","topStack","topCount","getMostFrequentStack","console","warn","error","ListenerLeakError","Stacktrace","print","ListenerRefusalError","UniqueContainer","_size","_options","_leakageMon","onListenerError","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","current","_listeners","_event","callback","tuple","bind","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","_removeListener","listeners","log","JSON","stringify","adjustDeliveryQueue","_deliver","errorHandler","_deliverQueue","dq","enqueue","hasListeners","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","StringDiffSequence","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","temp","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","j","_contiguousSequenceScore","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","WIN_SLASH","WIN_NO_SLASH","END_ANCHOR","POSIX_CHARS","QMARK_LITERAL","SEP","WINDOWS_CHARS","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","punct","space","upper","xdigit","REGEX_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","REGEX_REMOVE_BACKSLASH","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_AMPERSAND","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_FORM_FEED","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_RIGHT_ANGLE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","win32","_a","_b","ResourceMapEntry","ResourceMap","defaultToKey","resource","toKey","isEntries","size","clb","thisArg","_","entry","values","keys","entries","toStringTag","iterator","LinkedMap","_head","_tail","_state","isEmpty","touch","previous","addItemLast","addItemFirst","remove","removeItem","shift","callbackfn","done","trimOld","newSize","currentSize","trimNew","fromJSON","Cache","limit","ratio","_limit","_ratio","checkTrim","trim","round","LRUCache","BidirectionalMap","_m1","_m2","getKey","SetMap","WordCharacterClassifier","intlSegmenterLocales","_segmenter","_cachedLine","_cachedSegments","Intl","Segmenter","granularity","findPrevIntlWordBeforeOrAtOffset","line","candidate","segment","_getIntlSegmenterWordsOnLine","findNextIntlWordAtOrAfterOffset","_filterWordSegments","segments","_isWordLike","isWordLike","wordClassifierCache","getMapForWordSeparators","hasPerformanceNow","performance","now","StopWatch","highResolution","_now","Date","_startTime","_stopTime","isThenable","IntervalTimer","isDisposed","cancel","cancelAndSet","runner","interval","context","setInterval","clearInterval","RunOnceScheduler","timeoutToken","timeout","timeoutHandler","onTimeout","isScheduled","schedule","doRun","runWhenGlobalIdle","_runWhenIdle","Promises","requestIdleCallback","cancelIdleCallback","_targetWindow","disposed","deadline","didTimeout","timeRemaining","Object","freeze","targetWindow","settled","async","promises","firstError","withAsyncBody","bodyFn","reject","AsyncIterableObject","fromArray","writer","emitMany","fromPromises","emitOne","iterables","iterable","EMPTY","executor","onReturn","_results","_error","_onReturn","_onStateChanged","asyncIterator","return","filterFn","coalesce","shortcutEvent","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","CancellationTokenSource","parent","_token","_parentListener","disposableTracker","trackDisposable","x","markAsDisposed","setParentOfDisposable","child","setParent","is","errors","AggregateError","combinedDisposable","toDisposable","children","setParentOfDisposables","self","DisposableStore","DISABLE_DISPOSED_WARNING","_toDispose","_isDisposed","o","deleteAndLeak","Disposable","_store","_register","MutableDisposable","DisposableMap","clearAndDisposeAll","skipDisposeOnOverwrite","deleteAndDispose","oneKeys","otherKeys","getAllMethodNames","methods","prop","prototype","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","hasOwnProperty","Array2D","width","height","y","isSpace","LineRangeFragment","chrKeys","chr","lines","histogram","endLineNumberExclusive","totalCount","computeSimilarity","sumDifferences","DynamicProgrammingDiffing","compute","sequence1","sequence2","instance","equalityScore","trivial","lcsLengths","directions","lengths","s1","s2","isValid","trivialTimedOut","horizontalLen","verticalLen","extendedSeqScore","getElement","newValue","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seq1","seq2","seqX","seqY","getXAfterSnake","V","FastInt32Array","paths","FastArrayNegativeIndices","SnakePath","k","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","positiveArr","negativeArr","LinesSliceCharSequence","considerWhitespaceChanges","firstElementOffsetByLineIdx","lineStartOffsets","trimmedWsLengthsByLineIdx","lineStartOffset","trimmedWsLength","trimmedStartLine","trimStart","trimEnd","getText","endExclusive","getBoundaryScore","prevCategory","getCategory","nextCategory","getCategoryBoundaryScore","translateOffset","preference","lineOffset","translateRange","pos1","pos2","isBefore","findWordContaining","isWordChar","countLinesIn","isStronglyEqual","offset1","offset2","extendToFullLines","category","areLinesSimilar","line1","line2","commonNonSpaceCharCount","inverted","invert","diffs","seq","seq1Range","longerLineLength","countNonWsChars","LineSequence","trimmedHash","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","computeDiff","originalLines","modifiedLines","maxComputationTimeMs","ignoreTrimWhitespace","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","lineAlignments","hitTimeout","alignments","scanForWhitespaceChanges","equalLinesCount","seq1Offset","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","mappings","diff","assert","seq2Range","lineRangeMappingFromRangeMappings","moves","computeMoves","validatePosition","validateRange","c","innerChanges","ic","modifiedRange","getEndPosition","originalRange","hashedOriginalLines","hashedModifiedLines","excludedChanges","deletions","insertions","deletion","best","highestSimilarity","insertion","similarity","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","lastMappings","currentModifiedRange","nextMappings","lastMapping","originalLineRange","modifiedLineRange","mapping","modifiedSet","originalSet","diffOrigToMod","modifiedSections","subtractFrom","originalTranslatedSections","getWithDelta","modifiedIntersectedSections","getIntersection","s","addRange","monotonousChanges","move","firstTouchingChangeOrig","findLastMonotonous","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","extendToBottom","origLine","modLine","computeUnchangedMoves","originalDist","modifiedDist","joinCloseConsecutiveMoves","toOffsetRange","countWhere","changesMonotonous","removeMovesInSameDiff","computeMovedLines","sequenceDiff","rangeMapping","toRangeMapping2","slice1","slice2","diffResult","dontAssertStartLine","g","lineStartDelta","lineEndDelta","getLineRangeMapping","a1","a2","overlapOrTouch","m1","m2","fromIndex","findLastIdx","findLastIdxMonotonous","endIdxEx","floor","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","Codicon","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","gitPullRequestLabel","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","terminalDecorationSuccess","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","removeClose","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","circle","debugBreakpointUnverified","terminalDecorationIncomplete","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diffSidebyside","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","remoteExplorer","remote","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","terminalDecorationMark","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","issueClosed","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","indent","recordSmall","errorSmall","terminalDecorationError","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","heartFilled","mapHorizontal","foldHorizontal","mapFilled","mapHorizontalFilled","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","mapVertical","foldVertical","mapVerticalFilled","foldVerticalFilled","goToSearch","percentage","sortPercentage","attach","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","KeyMod","CtrlCmd","Shift","Alt","WinCtrl","chord","firstPart","secondPart","createMonacoBaseAPI","editor","languages","KeyCode","Position","Range","SelectionDirection","MarkerSeverity","MarkerTag","Token","Uint8Matrix","rows","cols","_data","row","col","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","INSTANCE","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","Number","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","LegacyLinesDiffComputer","DiffComputer","maxComputationTime","shouldIgnoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","charCodes","lineNumbers","columns","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","continueLineDiff","createContinueProcessingPredicate","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","strings","maximumRuntime","startTime","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","red","blue","green","_findRange","positionAt","_findHexColorInformation","hexValue","parsedHexColor","Format","CSS","parseHex","color","rgba","_findRGBColorInformation","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","BaseEditorSimpleWorker","_workerTextModelSyncServer","WorkerTextModelSyncServer","_getModel","getModel","_getModels","getModels","$acceptNewModel","$acceptModelChanged","$acceptRemovedModel","$computeUnicodeHighlights","$findSectionHeaders","findSectionHeaders","$computeDiff","originalUrl","modifiedUrl","algorithm","originalTextModel","modifiedTextModel","diffAlgorithm","getLinesContent","getLineChanges","identical","_modelsAreIdentical","lineRangeMapping","originalLineCount","_diffLimit","$computeMoreMinimalEdits","modelUrl","edits","lastEol","compareRangesUsingStarts","writeIndex","readIndex","eol","editOffset","offsetAt","lift","newEdit","$computeLinks","$computeDefaultDocumentColors","getValue","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeColors","computeDefaultDocumentColors","_suggestionsLimit","$textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","outer","words","duration","$computeWordRanges","getLineWords","$navigateValueSet","selectionText","wordRange","getWordAtPosition","_host","_foreignModuleFactory","_foreignModule","$ping","$loadForeignModule","moduleId","createData","foreignHostMethods","ctx","host","$fhr","getMirrorModels","onModuleCallback","asBrowserUri","catch","$fmr","apply","importScripts","monaco","isObject","isRegexChar","segs","version","MirrorTextModel","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","onEvents","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","_setLineText","setValue","removeValues","position","insertText","insertLines","newLengths","insertValues","STOP_SYNC_MODEL_DELTA_TIME_MS","WorkerTextModelSyncClient","proxy","modelService","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","_modelService","timer","_checkStopModelSync","ensureSyncedResources","resources","forceLargeModels","resourceStr","_beginModelSync","getTime","currentTime","toRemove","_stopModelSync","isTooLargeForSyncing","EOL","getVersionId","toDispose","onDidChangeContent","onWillDispose","_models","MirrorModel","offsetToAdd","iteratorOverMatches","wordDefinition","wordAtText","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","content","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","getPrefixSum","getIndexOf","remainder","isIPosition","hasChanged","maxCharacter","LineRangeMapping","inverse","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","clip","intersect","flip","toRangeMapping","origInclusiveRange","toInclusiveRange","modInclusiveRange","RangeMapping","MAX_SAFE_INTEGER","isValidLineNumber","normalizePosition","DetailedLineRangeMapping","fromRangeMappings","rangeMappings","fromRangeInclusive","withInnerChangesFromLineRanges","assertSorted","isBeforeOrEqual","toTextEdit","newText","getValueOfRange","TokenizationRegistry","_tokenizationSupports","_factories","_onDidChange","onDidChange","_colorMap","languageIds","changedLanguages","changedColorMap","register","languageId","support","registerFactory","factory","myData","TokenizationSupportFactoryData","getOrCreate","tokenizationSupport","isResolved","setColorMap","colorMap","getColorMap","getDefaultBackground","_isResolved","_registry","_languageId","_factory","_resolvePromise","_create","HoverVerbosityAction","CompletionItemKinds","InlineCompletionTriggerKind","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKinds","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","InlayHintKind","language","_tokenBrand","EncodedTokenizationResult","endState","_encodedTokenizationResultBrand","byKind","toIcon","codicon","fromString","icon","FoldingRangeKind","Comment","Imports","Region","fromValue","title","TreeSitterTokenizationRegistry","InlineEditTriggerKind","TextLength","zero","betweenPositions","position1","position2","ofRange","ofText","columnCount","isGreaterThanOrEqualTo","createRange","addToPosition","PrefixSumComputer","prefixSum","prefixSumValidIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","maxCount","getTotalSum","_getPrefixSum","sum","low","high","midStop","midStart","PrefixSumIndexOfResult","_prefixSumIndexOfResultBrand","Schemas","matchesScheme","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellMetadataDiff","vscodeNotebookCellOutput","vscodeNotebookCellOutputDiff","vscodeNotebookMetadata","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatCodeBlock","vscodeChatCodeCompareBlock","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","commentsInput","codeSetting","outputChannel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_serverRootPath","setPreferredWebSchema","schema","_remoteResourcesPath","rewrite","port","connectionToken","FileAccessImpl","FALLBACK_AUTHORITY","resourcePath","toUri","uriToBrowserUri","uriOrModule","moduleIdToUrl","_VSCODE_FILE_ROOT","rootUriOrPath","modulePath","toUrl","FileAccess","COI","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","params","URL","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","Lazy","_didRun","rawValue","newLineNumber","newColumn","deltaLineNumber","deltaColumn","compare","aLineNumber","bLineNumber","_codiconFontCharacters","fontCharacter","doHash","hashVal","numberHash","initialHashVal","stringHash","objectHash","booleanHash","leftRotate","bits","totalBits","dest","byteLength","toHexString","bufferOrValue","bitsize","ArrayBuffer","leftPad","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","strLen","buff","buffLen","leftoverHighSurrogate","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","bigBlock32","getUint32","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","KeyChord","seenKeyCode","seenScanCode","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","DEFAULT_WORD_REGEXP","allowInWords","sep","createWordRegExp","ensureValidWordDefinition","ignoreCase","_defaultConfig","getWordAtText","textOffset","config","maxLen","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","stopPos","webpackAsyncContext","req","__webpack_require__","ids","isFalsyOrWhitespace","htmlAttributeEncodeValue","ch","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","createRegExp","modifiers","regExpLeadsToEndlessLoop","regexp","splitLines","firstNonWhitespaceIndex","lastNonWhitespaceIndex","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isLowerAsciiLetter","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","CodePointIterator","_offset","_str","_len","setOffset","prevCodePoint","prevCharCode","getPrevCodePoint","nextCodePoint","GraphemeIterator","_iterator","nextGraphemeLength","graphemeBreakTree","GraphemeBreakTree","initialOffset","graphemeBreakType","getGraphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeLength","prevGraphemeBreakType","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","singleLetterHash","breakTypeA","breakTypeB","_INSTANCE","nodeCount","nodeIndex","AmbiguousCharacters","ambiguousCharacterData","getCacheKey","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","locale","mergeMaps","_locales","confusableDictionary","InvisibleCharacters","getRawData","getData","ErrorInvalidArgType","expected","actual","determiner","validateString","platformIsWin32","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","lastSlashIndex","pathObject","validateObject","dir","root","ext","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","delimiter","posixCwd","trailingSeparator","hasRoot","nullthrows","framesToPop","defineProperty","roundFloat","number","decimalPoints","decimal","RGBA","_rgbaBrand","HSLA","h","_hslaBrand","fromRGBA","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","_hsvaBrand","cmax","hsva","Color","fromHex","hex","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","isLighter","isLighterThan","another","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","makeOpaque","opaqueBackground","_toString","getLighterColor","of","lum1","lum2","getDarkerColor","white","black","cyan","lightgrey","_toTwoDigitHex","_parseHexDigit","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","compact","OffsetRange","sortedRanges","tryCreate","ofLength","ofStartAndLength","deltaStart","deltaEnd","intersects","isAfter","clipCyclic","LinesDiff","MovedText","SingleTextEdit","toSingleEditOperation","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PartialAcceptTriggerKind","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","ShowLightbulbIconMode","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","isString","isUndefined","isUndefinedOrNull","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_language","_platformLocale","_translationsConfigFile","$globalThis","nodeProcess","isElectronProcess","electron","isElectronRenderer","rawNlsConfig","nlsConfig","userLocale","osLocale","resolvedLanguage","languagePack","translationsConfigFile","navigator","userAgent","maxTouchPoints","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","webWorkerOrigin","origin","setTimeout0IsFaster","setTimeout0","pending","vscodeScheduleAsyncWork","lastId","myId","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","isChrome","isFirefox","isSafari","isEdge","Node","Undefined","LinkedList","_first","_last","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","anchor","CHANNEL_NAME","setChannel","workerClient","ok","assertNever","assertFn","checkAdjacentItems","Iterable","single","wrap","iterableOrElement","some","find","flatMap","reducer","initialValue","atMost","POSITIVE_INFINITY","asyncToArray","unexpectedErrorHandler","ErrorNoTelemetry","isErrorNoTelemetry","emit","onUnexpectedError","onUnexpectedExternalError","CancellationError","canceledName","transformErrorForSerialization","$isError","stacktrace","noTelemetry","illegalArgument","illegalState","NotSupportedError","fromError","BugIndicatingError","setPrototypeOf","optimizeSequenceDiffs","sequenceDiffs","joinSequenceDiffsByShifting","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","swap","shiftSequenceDiffs","prevResult","result2","nextResult","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","removeShortMatches","extendDiffsToEntireWordIfAppropriate","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","getEndExclusives","getStarts","sequenceDiffs1","sequenceDiffs2","sd1","sd2","mergeSequenceDiffs","removeVeryShortMatchingLinesBetweenDiffs","_sequence2","shouldRepeat","lastResult","shouldJoinDiffs","unchangedRange","removeVeryShortMatchingTextBetweenLongDiffs","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","newDiff","shouldMarkAsChanged","fullRange1","availableSpace","fromOffsetPairs","containsPosition","strictContainsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","collapseToStart","collapseToEnd","isIRange","areIntersectingOrTouching","areIntersecting","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","LineRange","joinMany","lineRanges","LineRangeSet","getUnion","deserialize","lineRange","deltaLength","intersectsStrict","toExclusiveRange","mapToLineArray","serialize","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","lineRange1","lineRange2","r1","r2","toUint8","toUint32","TextModelResolvedOptions","originalIndentSize","_indentSizeIsTabSize","indentSize","src","_textModelResolvedOptionsBrand","tabSize","insertSpaces","defaultEOL","trimAutoWhitespace","bracketPairColorizationOptions","createChangeEvent","newOpts","FindMatch","_findMatchBrand","isITextSnapshot","read","ValidAnnotatedEditOperation","identifier","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","SearchData","ApplyEditsResult","reverseEdits","trimAutoWhitespaceLineNumbers","shouldSynchronizeModel","isForSimpleWidget","createSingleCallFunction","fnDidRunCallback","_this","didCall","markRegex","trimDashesRegex","headers","findRegionSectionHeaders","foldingRules","markers","regionHeaders","sectionHeader","getHeaderText","shouldBeInComments","hasSeparatorLine","collectRegionHeaders","findMarkSectionHeaders","markHeaders","addMarkHeaderIfFound","collectMarkHeaders","sectionHeaders","indices","identity","LRUCachedFunction","arg1","arg2","lastCache","lastArgKey","_fn","_computeKey","CachedFunction","cachedValues","_map2","DiffAlgorithmResult","SequenceDiff","doc1Length","OffsetPair","InfiniteTimeout","DateTimeout","valid","DEFAULT_CHANNEL","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","RequestMessage","vsWorker","channel","ReplyMessage","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","setWorkerId","workerId","sendMessage","_send","listen","handleMessage","_handleMessage","createProxyToRemoteChannel","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","Proxy","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","requestMessage","detail","handleEvent","transfer","SimpleWorkerClient","workerFactory","workerDescriptor","_localChannels","_worker","amdModuleId","esmModuleLocation","label","_protocol","_handleEvent","getId","loaderConfiguration","globalRequire","require","getConfig","requirejs","contexts","_onModuleLoaded","_onError","channelName","requestHandlerFactory","_remoteChannels","_requestHandlerFactory","_requestHandler","requestHandler","inst","loaderConfig","baseUrl","vs","trustedTypesPolicy","catchError","__webpack_module_cache__","cachedModule","__webpack_modules__","getter","__esModule","mode","ns","def","definition","enumerable","chunkId","u","miniCssF","scriptUrl","__webpack_ids__","__webpack_runtime__","installedChunkData","import","race","formatValue","seenValues","previouslySeenValues","isJSONable","jsonValue","formatArray","object","getObjectTag","properties","formatObject","formatObjectValue","Location","startToken","endToken","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","isNode","maybeNode","maybeKind","OperationTypeNode","Kind","BREAK","visitor","visitorKeys","enterLeaveMap","getEnterLeaveForKind","inArray","ancestors","newRoot","isLeaving","isEdited","editKey","editValue","arrayKey","defineProperties","getOwnPropertyDescriptors","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","leave","enter","_node$kind","visitInParallel","visitors","skipping","mergedVisitor","hasVisitor","enterList","leaveList","mergedEnterLeave","_enterList$i","_leaveList$i","kindVisitor","isObjectLike","invariant","LineRegExp","getLocation","lastLineStart","body","printLocation","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","nodes","positions","originalError","_this$nodes","_nodeLocations$","_ref","undefinedIfEmpty","nodeLocations","loc","locations","originalExtensions","writable","configurable","captureStackTrace","formattedError","description","TokenKind","instanceOf","Source","DirectiveLocation","isWhiteSpace","isDigit","isLetter","isNameStart","isNameContinue","dedentBlockStringLines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","leadingWhitespace","Lexer","startOfFileToken","SOF","lastToken","lineStart","lookahead","EOF","nextToken","readNextToken","COMMENT","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","createToken","bodyLength","readComment","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","FLOAT","INT","chunkStart","STRING","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","BLOCK_STRING","NAME","Parser","parseDocument","sourceObj","isSource","_lexer","parseName","expectToken","DOCUMENT","definitions","many","parseDefinition","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","OPERATION_DEFINITION","operation","QUERY","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","MUTATION","SUBSCRIPTION","optionalMany","parseVariableDefinition","VARIABLE_DEFINITION","parseVariable","parseTypeReference","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","nameOrAlias","alias","FIELD","parseArguments","isConst","parseConstArgument","parseArgument","ARGUMENT","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","FRAGMENT_SPREAD","parseFragmentName","INLINE_FRAGMENT","typeCondition","parseNamedType","_this$_options","expectKeyword","allowLegacyFragmentVariables","FRAGMENT_DEFINITION","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","ENUM","varName","block","LIST","OBJECT","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","innerType","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","delimitedMany","parseFieldDefinition","parseArgumentDefs","FIELD_DEFINITION","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","types","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","getTokenDesc","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options2","noLocation","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind","keyMap","list","mapValue","toObjMap","keyValMap","valFn","didYouMean","firstArg","secondArg","subMessage","suggestionsArg","suggestions","selected","lastItem","identityFunc","naturalCompare","aStr","bStr","aIndex","bIndex","aChar","bChar","aNum","DIGIT_0","bNum","DIGIT_9","suggestionList","optionsByDistance","lexicalDistance","LexicalDistance","option","distance","measure","distanceDiff","_input","_inputLowerCase","_inputArray","stringToArray","_rows","optionLowerCase","aLength","bLength","upRow","currentRow","smallestCell","cost","currentCell","doubleDiagonalCell","strLength","escapedRegExp","escapedReplacer","escapeSequences","ast","printDocASTReducer","varDefs","argsLine","isBlockString","escapedValue","isSingleLine","forceLeadingNewLine","every","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","skipLeadingNewLine","printBlockString","hasMultilineItems","maybeArray","_maybeArray$filter$jo","maybeString","_maybeArray$some","valueFromASTUntyped","valueNode","variables","parseInt","field","assertName","assertEnumValueName","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","GraphQLScalarType","GraphQLObjectType","GraphQLInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","isWrappingType","ofType","isOutputType","isLeafType","isCompositeType","isAbstractType","isNullableType","getNullableType","isNamedType","getNamedType","unwrappedType","resolveReadonlyArrayThunk","thunk","resolveObjMapThunk","_config$parseValue","_config$serialize","_config$parseLiteral","_config$extensionASTN","parseValue","specifiedByURL","parseLiteral","astNode","extensionASTNodes","toConfig","_config$extensionASTN2","isTypeOf","_fields","defineFieldMap","_interfaces","defineInterfaces","getFields","getInterfaces","fieldsToFieldsConfig","_config$interfaces","fieldMap","isPlainObj","fieldConfig","fieldName","_fieldConfig$args","argsConfig","defineArguments","subscribe","deprecationReason","argName","argConfig","argsToArgsConfig","isRequiredArgument","_config$extensionASTN3","resolveType","_config$extensionASTN4","_types","defineTypes","getTypes","_config$extensionASTN5","typeName","valueMap","_values","valueName","valueConfig","_valueLookup","enumValue","_nameLookup","getValues","outputValue","inputValue","valueStr","didYouMeanEnumValue","_variables","enumType","unknownValueStr","_config$extensionASTN6","defineInputFieldMap","isRequiredInputField","GRAPHQL_MAX_INT","GRAPHQL_MIN_INT","GraphQLInt","coercedValue","serializeObject","isInteger","GraphQLFloat","isFinite","GraphQLString","GraphQLBoolean","GraphQLID","specifiedScalarTypes","valueOf","valueOfResult","astFromValue","astValue","itemType","maybeIterable","valuesNodes","itemNode","fieldNodes","fieldValue","serialized","stringNum","integerStringRegExp","__Schema","__Type","getTypeMap","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","__Directive","getDirectives","directive","isRepeatable","__DirectiveLocation","__InputValue","includeDeprecated","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","__TypeKind","TypeKind","NON_NULL","__Field","possibleTypes","_args","_context","getPossibleTypes","enumValues","__EnumValue","inputFields","isDeprecated","valueAST","SchemaMetaFieldDef","_source","TypeMetaFieldDef","getType","TypeNameMetaFieldDef","parentType","introspectionTypes","isIntrospectionType","isEqualType","typeA","typeB","isTypeSubTypeOf","maybeSubType","superType","isSubType","doTypesOverlap","DocumentUri","integer","uinteger","LocationLink","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintLabelPart","InlayHint","InlineCompletionItem","InlineCompletionList","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","Is","MIN_VALUE","MAX_VALUE","objectLiteral","two","three","four","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","numberRange","textEdit","additionalTextEdits","typedArray","startCharacter","endCharacter","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","del","needsConfirmation","boolean","annotation","annotationId","textDocument","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","documentChanges","PlainText","Markdown","Text","Method","Function","Constructor","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","isIncomplete","fromPlainText","plainText","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","isPreferred","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Type","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","filterText","selectedCompletionInfo","mergeSort","leftIdx","rightIdx","FullTextDocument","func","applyEdits","sortedEdits","lastModifiedOffset","_version","_content","_lineOffsets","getLineOffsets","lineOffsets","isLineStart","nextLineOffset","CharacterStream","sourceText","_start","_pos","getStartOfToken","getCurrentPosition","_sourceText","sol","eat","_testNextCharacter","eatWhile","isMatched","didEat","eatSpace","skipToEnd","skipTo","caseFold","backUp","indentation","whiteSpaces","opt","ofRule","isList","style","LexRules","Punctuation","ParseRules","Definition","ShortQuery","Query","Mutation","Subscription","VariableDefinitions","DefaultValue","stream","AliasedField","Arguments","rule","exclusions","ruleMatch","exclusion","butNot","TypeCondition","NumberValue","inBlockstring","prevState","DirectiveDef","InterfaceDef","Implements","SchemaDef","OperationTypeDef","ScalarDef","ObjectTypeDef","FieldDef","ArgumentsDef","InputValueDef","UnionDef","UnionMember","EnumDef","EnumValueDef","InputDef","ExtendDef","ExtensionDefinition","onlineParser","eatWhitespace","lexRules","parseRules","editorConfig","startState","initialState","level","needsSeparator","pushRule","popRule","needsAdvance","advanceRule","indentLevel","kinds","lex","SpecialParseRules","backupState","levels","at","unsuccessful","getToken","Invalid","rules","ruleKind","assign","successful","runOnlineParser","queryText","parser","GraphQLDocumentMode","TYPE_SYSTEM_KINDS","getContextAtPosition","cursor","contextToken","styleAtCursor","stateAtCursor","stringAtCursor","getTokenAtPosition","typeInfo","tokenState","argDef","argDefs","directiveDef","fieldDef","inputType","objectTypeDef","objectFieldDefs","interfaceDef","forEachState","RuleKinds","ALIASED_FIELD","getFieldDef","getDirective","INTERFACE_DEF","OBJECT_TYPE_DEF","ARGUMENTS","LIST_VALUE","nullableType","OBJECT_VALUE","objectType","objectField","getTypeInfo","documentText","TYPE_SYSTEM","sdl","UNKNOWN","EXECUTABLE","getParsedMode","reverseStateStack","SHORT_QUERY","TYPE_CONDITION","INVALID","SCHEMA_DEF","SCALAR_DEF","UNION_DEF","ENUM_DEF","FIELD_DEF","INPUT_DEF","INPUT_VALUE_DEF","ARGUMENTS_DEF","EXTEND_DEF","EXTENSION_DEFINITION","DIRECTIVE_DEF","IMPLEMENTS","VARIABLE_DEFINITIONS","TYPE","objectValues","hintList","filterNonEmpty","proximity","getProximity","normalizeText","filterAndSortList","filtered","suggestion","getInsertText","namedType","getInputInsertText","baseType","SuggestionCommand","getAutocompleteSuggestions","fragmentDefs","typeSystemCompletionItems","getSuggestionsForTypeSystemDefinitions","executableCompletionItems","getSuggestionsForExecutableDefinitions","getSuggestionsForUnknownDocumentMode","getSuggestionsForExtensionDefinitions","schemaInterfaces","schemaInterfaceNames","inlineInterfaces","_c","_d","_e","interfaceConfig","objectTypeConfig","currentTypeToExtend","siblingInterfaceNames","getSuggestionsForImplements","sortText","labelDetails","fillLeafsOnComplete","requiredArgs","getFieldInsertText","insertTextFormat","insertTextMode","getSuggestionsForFieldNames","objectFields","completionKind","namedInputType","queryVariables","getVariableCompletions","getSuggestionsForInputValues","abstractType","assertAbstractType","possibleObjTypes","possibleIfaceMap","iface","getSuggestionsForFragmentTypeConditions","typeMap","defState","definitionState","getDefinitionState","fragments","getFragmentDefinitions","frag","getSuggestionsForFragmentSpread","op","externalFragments","collectFragmentDefs","unwrappedState","unwrapType","getSuggestionsForVariableDefinition","canUseDirective","getSuggestionsForDirective","getSuggestionsForDirectiveArguments","getParentDefinition","_f","_g","_h","_j","_k","variableType","parentDefinition","replaceString","rawInsert","into","renderType","renderDefinitionDescription","useMarkdown","renderTypeToString","defaultScalarTypesMap","Int","Float","ID","DateTime","Marker","mark","getJSONSchemaFromGraphQLType","fieldOrType","required","scalarSchemas","enum","oneOf","defs","defName","$ref","definitionMarker","useMarkdownDescription","markdownDescription","fieldRequired","fieldDefinition","typeDefinitions","default","setStart","setEnd","lessThanOrEqualTo","setLine","setCharacter","LoneSchemaDefinitionRule","_ref2","_oldSchema$astNode","oldSchema","getSchema","alreadyDefined","schemaDefinitionsCount","reportError","UniqueOperationTypesRule","definedOperationTypes","existingOperationTypes","mutation","checkOperationTypes","_node$operationTypes","operationTypesNodes","operationType","alreadyDefinedOperationType","UniqueTypeNamesRule","knownTypeNames","checkTypeName","UniqueEnumValueNamesRule","existingTypeMap","knownValueNames","checkValueUniqueness","_node$values","valueNodes","valueNames","valueDef","existingType","UniqueFieldDefinitionNamesRule","knownFieldNames","checkFieldUniqueness","_node$fields","fieldNames","hasField","UniqueDirectiveNamesRule","knownDirectiveNames","directiveName","isExecutableDefinitionNode","isTypeDefinitionNode","isTypeExtensionNode","KnownTypeNamesRule","existingTypesMap","definedTypes","getDocument","typeNames","_1","_2","_ancestors$","definitionNode","isSDL","isTypeSystemDefinitionNode","isTypeSystemExtensionNode","standardTypeNames","suggestedTypes","isDirective","GraphQLDirective","_config$isRepeatable","_config$args","GraphQLIncludeDirective","if","GraphQLSkipDirective","GraphQLDeferDirective","GraphQLStreamDirective","initialCount","GraphQLDeprecatedDirective","reason","GraphQLSpecifiedByDirective","specifiedDirectives","KnownDirectivesRule","locationsMap","definedDirectives","astDefinitions","_key","_parent","_path","candidateLocation","appliedTo","getDirectiveLocationForOperation","parentNode","getDirectiveLocationForASTPath","UniqueDirectivesPerLocationRule","uniqueDirectiveMap","schemaDirectives","typeDirectivesMap","seenDirectives","PossibleTypeExtensionsRule","checkExtension","defNode","expectedKind","defKindToExtKind","kindStr","extensionKindToTypeName","groupBy","group","UniqueArgumentNamesRule","checkArgUniqueness","_parentNode$arguments","seenArgs","argNodes","UniqueInputFieldNamesRule","knownNameStack","knownNames","prevKnownNames","UniqueVariableNamesRule","operationNode","_operationNode$variab","seenVariableDefinitions","variableNodes","typeNode","FragmentsOnCompositeTypesRule","typeStr","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","fieldNode","_fieldNode$arguments","providedArgs","argTypeStr","_schema$getDirectives","requiredArgsMap","_def$arguments","isRequiredArgumentNode","directiveNode","_directiveNode$argume","argNodeMap","argType","ExecutableDefinitionsRule","variableValue","coercedValues","isMissingVariable","itemValue","coercedObj","getDirectiveValues","variableValues","_node$directives","_node$arguments","argumentNode","isNull","getArgumentValues","collectFieldsImpl","runtimeType","patches","visitedFragmentNames","shouldIncludeNode","getFieldEntryKey","fieldList","doesFragmentConditionMatch","getDeferValues","patchFields","fragName","_enableDeferStream","skip","include","typeConditionNode","conditionalType","KnownFragmentNamesRule","fragmentName","getFragment","NoUnusedFragmentsRule","operationDefs","fragmentNameUsed","getRecursivelyReferencedFragments","fragmentDef","KnownArgumentNamesOnDirectivesRule","directiveArgs","argsNodes","knownArgs","argNode","isValidValueNode","locationType","getInputType","allowedVariableUsage","varType","varDefaultValue","locationDefaultValue","reasonMessage","responseName","subReason","collectConflictsBetweenFieldsAndFragment","conflicts","cachedFieldsAndFragmentNames","comparedFragmentPairs","areMutuallyExclusive","fieldMap2","referencedFragmentNames","getReferencedFieldsAndFragmentNames","collectConflictsBetween","referencedFragmentName","collectConflictsBetweenFragments","fragmentName1","fragmentName2","fragment1","fragment2","fieldMap1","referencedFragmentNames1","referencedFragmentNames2","referencedFragmentName2","referencedFragmentName1","parentFieldsAreMutuallyExclusive","fields1","fields2","field1","field2","conflict","findConflict","parentType1","node1","def1","parentType2","node2","def2","_node1$arguments","_node2$arguments","_node1$directives","_node2$directives","name1","name2","arguments1","arguments2","argument1","argument2","argument","sameValue","directives1","directives2","stream1","getStreamDirective","stream2","sameDirectiveArgument","sameStreams","type1","type2","doTypesConflict","selectionSet1","selectionSet2","fragmentNames1","getFieldsAndFragmentNames","fragmentNames2","findConflictsBetweenSubSelectionSets","flat","subfieldConflicts","directive1","directive2","argumentName","_directive1$arguments","_directive2$arguments","value1","value2","cached","nodeAndDefs","fragmentNames","_collectFieldsAndFragmentNames","fragmentType","inlineFragmentType","PairSet","_this$_data$get","key1","key2","specifiedRules","knownOperationNames","operationName","operationCount","collectFields","extraFieldSelections","getParentType","usageCount","possibleType","possibleInterface","_usageCount$possibleI","usageCountDiff","getSuggestedTypeNames","getSuggestedFieldNames","knownFragmentNames","fragType","parentTypeStr","fragTypeStr","getFragmentType","visitedFrags","spreadPath","spreadPathIndexByName","detectCycleRecursive","spreadNodes","getFragmentSpreads","spreadNode","spreadName","cycleIndex","spreadFragment","cyclePath","viaPath","variableNameDefined","usages","getRecursiveVariableUsages","variableDefs","variableNameUsed","variableDef","getArgument","getParentInputType","fieldNodeMap","varDefMap","varDef","varTypeStr","collectConflictsWithin","findConflictsWithinSelectionSet","reasonMsg","specifiedSDLRules","argumentNodes","checkArgUniquenessPerField","_typeNode$fields","_fieldDef$arguments","parentName","_config$directives","__validationErrors","assumeValid","enableDeferStream","_queryType","_mutationType","_subscriptionType","_directives","allReferencedTypes","collectReferencedTypes","_typeMap","_subTypeMap","_implementationsMap","implementations","objects","getRootType","getImplementations","interfaceType","typeSet","memberType","validateSchema","isSchema","SchemaValidationContext","_getOperationTypeNode","getOperationTypeNode","_getOperationTypeNode2","_getOperationTypeNode3","validateRootTypes","validateName","_arg$astNode","getDeprecatedDirectiveNode","validateDirectives","validateInputObjectCircularRefs","visitedTypes","fieldPath","fieldPathIndexByTypeName","inputObj","fieldType","pathStr","fieldObj","createInputObjectCircularRefsValidator","validateFields","validateInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","validateTypes","getErrors","_errors","_nodes","_flatMap$find","schemaNode","_schemaNode$operation","_field$astNode","_arg$astNode2","_arg$astNode3","ifaceTypeNames","getAllImplementsInterfaceNodes","validateTypeImplementsAncestors","validateTypeImplementsInterface","typeFieldMap","ifaceField","typeField","_ifaceField$astNode","_typeField$astNode","ifaceArg","typeArg","_ifaceArg$astNode","_typeArg$astNode","ifaceInterfaces","transitive","union","memberTypes","includedTypeNames","getUnionMemberTypeNodes","_field$astNode2","_field$astNode3","_typeNode$interfaces","ifaceNode","unionNode","_unionNode$types","_definitionNode$direc","TypeInfo","initialType","getFieldDefFn","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_defaultValueStack","_directive","_argument","_enumValue","_getFieldDef","getDefaultValue","getEnumValue","rootType","typeConditionAST","outputType","_this$getDirective","fieldOrDirective","listType","inputFieldType","inputField","visitWithTypeInfo","ASTValidationContext","onError","_ast","_fragments","_fragmentSpreads","_recursivelyReferencedFragments","spreads","setsToVisit","collectedNames","nodesToVisit","spread","SDLValidationContext","ValidationContext","_typeInfo","_variableUsages","_recursiveVariableUsages","getVariableUsages","newUsages","validate","documentAST","_options$maxErrors","maxErrors","assertValidSchema","abortObj","NoDeprecatedCustomRule","inputObjectDef","inputFieldDef","enumValueDef","enumTypeDef","SEVERITY","DIAGNOSTIC_SEVERITY","annotations","highlightedNodes","highlightNode","highlightLoc","renderMdCodeStart","renderMdCodeEnd","renderQualifiedField","renderDirective","renderTypeAnnotation","renderDescription","renderDeprecation","buildClientSchema","introspection","__schema","schemaIntrospection","typeIntrospection","scalarIntrospection","objectIntrospection","buildImplementationsList","buildFieldDefMap","interfaceIntrospection","unionIntrospection","unionIntrospectionStr","getObjectType","buildUnionDef","enumIntrospection","enumIntrospectionStr","valueIntrospection","buildEnumDef","inputObjectIntrospection","inputObjectIntrospectionStr","buildInputValueDefMap","buildInputObjectDef","buildType","stdType","directiveIntrospection","directiveIntrospectionStr","typeRef","itemRef","nullableRef","assertNullableType","assertObjectType","getInterfaceType","assertInterfaceType","implementingIntrospection","implementingIntrospectionStr","fieldIntrospection","buildField","fieldIntrospectionStr","inputValueIntrospections","buildInputValue","inputValueIntrospection","stdTypeMap","getDeprecationReason","getSpecifiedByURL","specifiedBy","assumeValidSDL","schemaToExtend","validateSDL","assertValidSDL","schemaConfig","_schemaDef","_schemaDef$descriptio","_schemaDef2","_options$assumeValid","_options$enableDeferS","typeDefs","typeExtensionsMap","directiveDefs","schemaDef","schemaExtensions","extendedTypeName","existingTypeExtensions","extendNamedType","_stdTypeMap$name","replaceNamedType","getOperationTypes","extendArg","_node$description","buildArgumentMap","replaceType","isSpecifiedScalarType","_typeExtensionsMap$co2","extensionNode","_getSpecifiedByURL","extendScalarType","_typeExtensionsMap$co3","buildInterfaces","extendField","buildFieldMap","extendObjectType","_typeExtensionsMap$co4","extendInterfaceType","_typeExtensionsMap$co5","buildUnionTypes","extendUnionType","_typeExtensionsMap$ty","buildEnumValueMap","extendEnumType","_typeExtensionsMap$co","buildInputFieldMap","extendInputObjectType","opTypes","_stdTypeMap$name2","getWrappedType","fieldConfigMap","nodeFields","_field$description","argConfigMap","_arg$description","inputFieldMap","_node$fields2","fieldsNodes","_field$description2","enumValueMap","_value$description","_node$interfaces$map","_node$interfaces","_node$types$map","_node$types","_typeExtensionsMap$na","_astNode$description","allNodes","_astNode$description2","_astNode$description3","_astNode$description4","_astNode$description5","_astNode$description6","extendSchemaImpl","stdDirective","defaultSchemaLoader","introspectionJSON","introspectionJSONString","buildSchemaOptions","documentString","schemaCache","LanguageService","_parser","_schemas","_schemaCache","_schemaLoader","_parseOptions","_customValidationRules","_externalFragmentDefinitionNodes","_externalFragmentDefinitionsString","_completionSettings","schemas","parseOptions","externalFragmentDefinitions","customValidationRules","completionSettings","_cacheSchemas","_cacheSchema","getSchemaForFile","fileMatch","cacheEntry","getExternalFragmentDefinitions","definitionNodes","updateSchemas","updateSchema","schemaIndex","findIndex","addSchema","getCompletion","getDiagnostics","customRules","isRelayCompatMode","acc","enhancedQuery","validationErrorAnnotations","validateWithCustomRules","deprecationWarningAnnotations","validateQuery","getHover","renderField","renderArg","renderEnumValue","getHoverInformation","getVariablesJSONSchema","variableToType","collectVariables","operations","getOperationASTFacts","jsonSchema","$schema","additionalProperties","runtimeOptions","customScalarSchemas","toMonacoRange","toGraphQLPosition","toMonacoSeverity","severityMap","toMarkerData","diagnostic","GraphQLWorker","_ctx","_languageService","_formattingOptions","languageConfig","formattingOptions","doValidation","documentModel","_getTextModel","doComplete","graphQLPosition","toCompletion","doHover","doGetVariablesJSONSchema","$id","doFormat","prettierStandalone","prettierGraphqlParser","plugins","prettierConfig","models","doUpdateSchema","doUpdateSchemas"],"sourceRoot":""}
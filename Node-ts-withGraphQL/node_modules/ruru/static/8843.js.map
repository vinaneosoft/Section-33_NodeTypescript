{"version":3,"file":"8843.js","mappings":"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","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], Boolean(supportsDelayedInstantiation));\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from './semanticTokensStyling.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nlet SemanticTokensStylingService = class SemanticTokensStylingService extends Disposable {\n    constructor(_themeService, _logService, _languageService) {\n        super();\n        this._themeService = _themeService;\n        this._logService = _logService;\n        this._languageService = _languageService;\n        this._caches = new WeakMap();\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._caches = new WeakMap();\n        }));\n    }\n    getStyling(provider) {\n        if (!this._caches.has(provider)) {\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n        }\n        return this._caches.get(provider);\n    }\n};\nSemanticTokensStylingService = __decorate([\n    __param(0, IThemeService),\n    __param(1, ILogService),\n    __param(2, ILanguageService)\n], SemanticTokensStylingService);\nexport { SemanticTokensStylingService };\nregisterSingleton(ISemanticTokensStylingService, SemanticTokensStylingService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ISemanticTokensStylingService = createDecorator('semanticTokensStylingService');\n"],"names":["ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","_registry","registerSingleton","id","ctorOrDescriptor","supportsDelayedInstantiation","Boolean","push","getSingletonServiceDescriptors","IThemeService","themeColorFromId","getThemeTypeSelector","type","Extensions","ThemingContribution","themingRegistry","constructor","this","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","fire","idx","indexOf","splice","getThemingParticipants","registerThemingParticipant","add","Themable","themeService","super","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles","__param","paramIndex","decorator","target","key","SemanticTokensStylingService","_themeService","_logService","_languageService","_caches","WeakMap","getStyling","provider","has","set","SemanticTokensProviderStyling","getLegend","get","decorators","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__decorate","ISemanticTokensStylingService","Registry","data","Map","as","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","index","Error","storeServiceDependency","toString","SyncDescriptor","staticArguments"],"sourceRoot":""}